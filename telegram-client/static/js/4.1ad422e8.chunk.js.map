{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Utils/Language.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/LeaveVoiceChatDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Popup/ReportChatDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Utils/Game.js","Assets/Icons/CallEnd.js","Components/Calls/CallSettingsVideoPreview.js","Components/Calls/GroupCallMicAmplitude.js","Utils/Text.js","Components/Calls/GroupCallSettings.js","Assets/Icons/More.js","Assets/Icons/Mic.js","Assets/Icons/MicOff.js","Components/Calls/CallPanel.js","Components/Calls/Call.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacyCalls.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Attach.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Calls/BlobDrawable.js","Components/Calls/LineBlobDrawable.js","Components/Calls/TopBar.js","Components/Calls/GroupCallTopPanel.js","Assets/Icons/PlaylistEdit.js","Assets/Icons/Block.js","Assets/Icons/Broom.js","Assets/Icons/Phone.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Calls/GroupCallJoinPanelSubtitle.js","Components/Calls/GroupCallRecentParticipants.js","Components/Calls/GroupCallJoinPanel.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/ForwardTargetChat.js","Components/Popup/ForwardDialog.js","Components/Calls/Button.js","Components/Calls/GroupCallMicButtonHint.js","Components/Calls/GroupCallMicButton.js","Components/Calls/GroupCallPanelButtons.js","Assets/Icons/AddMember.js","Assets/Icons/MicOutlined.js","Assets/Icons/MicOffOutlined.js","Components/Calls/GroupCallParticipant.js","Components/Calls/GroupCallParticipants.js","Assets/Icons/Tune.js","Components/Calls/GroupCallSettingsButton.js","Components/Calls/GroupCallPanel.js","Components/Calls/GroupCall.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Player/PipPlayer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","AlertDialog","handleClose","onClose","params","t","title","message","ok","cancel","getFormattedText","open","manager","modalManager","transitionDuration","classes","paper","DialogContentText","DialogActions","onClick","color","withTranslation","BlockSenderDialog","reportSpam","deleteChat","handleReportSpamChange","handleDeleteChatChange","sender","text","entities","reportText","user_id","LStore","formatString","getUserShortName","getSimpleMarkupEntities","getString","chat_id","location","getChatLocation","address","isChannelChat","aria-labelledby","FormControlLabel","control","Checkbox","checked","onChange","label","ClearHistoryDialog","handleRevokeChange","revoke","chatId","canBeDeletedForAllUsers","getChatShortTitle","ChatTile","isPrivateChat","style","marginLeft","prevChatId","ChatStore","get","can_be_deleted_for_all_users","sprintf","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DeleteMessagesDialog","messageIds","count","confirm","isSupergroup","formatPluralString","prevMessageIds","messageId","MessageStore","InputPasswordDialog","handleChange","e","password","target","handleClickShowPassword","showPassword","getErrorMessage","error","startsWith","str","replace","parseInt","timeString","floor","loading","passwordHint","password_hint","errorMessage","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","autoFocus","autoComplete","type","disabled","endAdornment","InputAdornment","position","IconButton","aria-label","edge","FormHelperText","LeaveChatDialog","getDeleteDialogText","chat","supergroup","SupergroupStore","supergroup_id","is_channel","LeaveVoiceChatDialog","discard","handleDiscardChange","NotificationTimer","handleTimer","Date","seconds","expire","timeout","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","setInterval","Typography","toFixed","CircularProgress","size","variant","OpenGameDialog","game","userId","getUserFullName","OpenUrlDialog","url","overflowWrap","PinMessageDialog","prevMessageId","ReportChatDialog","handleReport","ListItem","button","ListItemText","primary","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","domain","bot_user_id","request_write_access","text1","UserStore","getMyId","entities1","option1","option2","text2","entities2","display","flexDirection","UnpinMessageDialog","Actions","leaveChat","clearHistory","deleteMessages","pinMessage","unpinMessage","alert","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","leaveVoiceChatAlert","reportChatAlert","onClientUpdateReportChat","update","onClientUpdateBlockSender","sender_id","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateLeaveVoiceChatAlert","onClientUpdateOpenGameAlert","isVerified","handleOpenGameContinue","onClientUpdateOpenUrlAlert","ask","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","enqueueSnackbar","closeSnackbar","action","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","onClientUpdateAlert","onClientUpdateUnpinMessage","isMeChat","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","onClientUpdateLeaveChat","onClientUpdateClearHistory","handleClearHistoryContinue","AppStore","getChatId","request","remove_from_chat_list","handleScheduledAction","handleLeaveContinue","a","undo","getLeaveChatNotification","requests","isChatMember","push","isCreator","status","is_member","handleDeleteMessagesContinue","clearSelection","message_ids","clientUpdateType","snackKey","clientUpdate","inProgress","addScheduledAction","Number","MAX_VALUE","persist","removeScheduledAction","pinMessageAction","canPinMessages","unpinMessageAction","closePinned","unpinAllMessages","data","getClientData","clientData","unpinned","handleAlertContinue","onResult","event","preventDefault","newWindow","window","opener","sharedPreferences","JSON","parse","localStorage","getItem","existing","hash","addHash","encodeURIComponent","chars","array","Uint8Array","crypto","getRandomValues","setItem","stringify","index","indexOf","curHash","substring","openGameInBrowser","handleRequestUrlContinue","values","buttonId","message_id","button_id","allow_write_access","httpUrl","handleInputPasswordContinue","onCloseDialog","handleBlockSenderContinue","blockSender","reason","reportChat","canDeleteChat","handleLeaveVoiceChatContinue","resultParams","handleReportChatContinue","showSnackbar","Close","on","off","PureComponent","enhance","compose","withSnackbar","CallSettingsVideoPreview","stream","video","document","getElementById","srcObject","autoPlay","muted","GroupCallMicAmplitude","audioContext","AudioContext","webkitAudioContext","timer","addAnalyser","removeAnalyser","streamSource","createMediaStreamSource","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","connect","analyse","disconnect","frequencyBinCount","getByteFrequencyData","getAmplitude","bars","viewBox","fill","strokeWidth","width","copy","navigator","clipboard","writeText","console","copyOld","element","successful","createElement","contentEditable","readOnly","all","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","GroupCallSettings","onKeyDown","modals","isComposing","openDeviceSelect","handleCloseDeviceSelect","stopPropagation","handleCancel","onUpdateGroupCall","groupCallId","group_call","muteNewParticipants","mute_new_participants","allowedChangeMuteNewParticipants","allowed_change_mute_new_participants","onDeviceChange","mediaDevices","enumerateDevices","devices","CallStore","outputDeviceId","getOutputDeviceId","filter","kind","deviceId","inputAudioDeviceId","getInputAudioDeviceId","inputAudio","inputVideoDeviceId","getInputVideoDeviceId","inputVideo","handleOutputChange","handleCopyLink","currentGroupCall","username","getChatUsername","telegramUrlOption","handleOpenDeviceSelect","handleSelectDevice","setOutputDeviceId","currentCall","streamManager","inputAudioStream","getAudioTracks","getStream","audio","exact","inputVideoStream","getVideoTracks","handleEnd","call","leaveGroupCall","handleMuteNewParticipants","toggleMuteNewParticipants","handleDone","setInputAudioDeviceId","setInputVideoDeviceId","keyboardHandler","KeyboardHandler","addEventListener","KeyboardManager","add","removeEventListener","remove","closeStreams","callId","outputDeviceInfo","find","outputString","inputAudioDeviceInfo","inputAudioString","inputVideoDeviceInfo","inputVideoString","items","map","canManage","canManageVoiceChats","onMouseDown","Switch","disableRipple","root","switchBase","colorSecondary","track","prevGroupCallId","prevCallId","muteSettings","groupCall","CallPanel","onClientUpdateCallMediaState","currentCallId","mediaState","inputMediaState","outputMediaState","handleUpdateCall","forceUpdate","handleFullScreenChange","fullScreen","isFullScreen","handleClick","handleAccept","p2pAcceptCall","handleDiscard","closeCallPanel","setTimeout","p2pHangUp","handleOpenSettings","handleCloseContextMenu","openSettings","handleCloseSettings","exitFullscreen","handleShareScreen","screenStream","p2pStopScreenSharing","p2pStartScreenSharing","handleFullScreen","requestFullscreen","handleOpenContextMenu","currentTarget","anchorEl","handleAudio","p2pAudioEnabled","handleVideo","videoState","p2pVideoEnabled","callPanelRef","createRef","contextMenu","left","p2pGetMediaState","callPanel","current","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","method","mozRequestFullScreen","webkitRequestFullscreen","mozCancelFullScreen","webkitExitFullscreen","p2pGet","is_outgoing","screenSharing","outputVideoStyle","isFirefox","transform","videoRotation","classNames","ref","p2pGetCallStatus","Popover","container","getContentAnchorEl","disableRestoreFocus","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","ListItemClasses","focusVisible","TouchRippleProps","child","rippleVisible","onDoubleClick","MicOff","CallEnd","p2pIsCallReady","Mic","Call","onClientUpdateGroupCallFullScreen","fullscreen","closeGroupCallPanel","handleMouseDown","nativeEvent","which","mouseDownRoot","pageX","pageY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","onWindowResize","player","oldLeft","oldTop","normalizePosition","startLeft","startTop","setPosition","pipParams","documentElement","clientWidth","clientHeight","prevLeft","prevTop","checkGlue","playerWidth","playerHeight","documentWidth","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","clamp","glueTop","glueBottom","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","showSavedMessages","isChatVerified","getChatTitle","defaultProps","DialogStatus","onUpdateUserStatus","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","basic_group","onUpdateSupergroup","externalSubtitle","Chat","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","alignItems","ListItemIcon","tabIndex","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","set","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","handleDelete","anchorPosition","showOpenMessage","can_be_forwarded","can_be_deleted_only_for_self","anchorReference","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","photo","clientX","clientY","nextContext","FileStore","openMedia","minithumbnail","miniSrc","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","sizes","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","thumbnail","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","caption","decodedUrl","decodeURI","hostname","URL","split","punycode","ToUnicode","content","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","trim","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","getDurationString","overScanCount","SharedMediaContent","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","query","sender_user_id","from_message_id","limit","finally","currentParams","total_count","concat","isValidMessage","incompleteResults","setItems","store","getStore","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","loadChatsContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","height","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","voice_note","ChatDetails","loadContent","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","toLowerCase","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","chatIds","getChatUserId","offset_chat_id","chat_ids","minHeight","chats","SharedMediaHeader","handleSearch","searchInputRef","innerText","onSearch","onCloseSearch","openSearch","handleKeyDown","keyCode","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","ANIMATION_DURATION_200MS","placeholder","suppressContentEditableWarning","onKeyUp","onPaste","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","force","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","cx","cy","Status","onUpdateMessageSendAcknowledged","sendingState","old_message_id","sending_state","newMessageId","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","Pending","Sent","Succeeded","isMessageUnread","DialogMeta","getLastMessageDate","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","CHAT_IDS_AUTHORIZED","includes","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","dialog","hidden","isLastPinned","ApplicationStore","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","showGroupCall","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","focusInput","textNode","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollBottom","max","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","cacheKey","filesKey","contactsKey","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","useTestDC","parameters","STORAGE_CACHE_TEST_KEY","STORAGE_CACHE_KEY","STORAGE_CONTACTS_TEST_KEY","STORAGE_CONTACTS_KEY","STORAGE_FILES_TEST_KEY","STORAGE_FILES_KEY","filtersKey","STORAGE_FILTERS_TEST_KEY","STORAGE_FILTERS_KEY","registerKey","STORAGE_REGISTER_TEST_KEY","STORAGE_REGISTER_KEY","saveInternal","leading","trailing","promises","load","catch","Promise","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","openSupportChat","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","disableAutoFocusItem","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","hiddenChats","delete","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","stub","fistSliceLoaded","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","log","shift","replaceChats","getListRef","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","shortTitle","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","selected","tile","UserTile","SectionHeader","command","multiline","children","Search","blur","concatSearchResults","arr","j","searchText","sessionId","savedMessages","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","local","savedMessagesStrings","splice","recentlyFound","trimmedText","substr","SEARCH_GLOBAL_TEXT_MIN","globalPromises","globalPromise","latinTrimmedText","USERNAME_LENGTH_MIN","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","savedMessagesPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","wrapperRef","searchRef","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","play","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","themeOptions","palette","disableEnforceFocus","aria-describedby","component","FormLabel","focused","RadioGroup","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","sendByCtrlEnterOption","SEND_BY_CTRL_ENTER_KEY","sendByCtrlEnter","Colorize","handleSetOption","inputProps","isMacOS","Language","languages","language_packs","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacyCalls","prevAllowCalls","prevAllowP2PCalls","handleChangeAllowCalls","allowCallsValue","handleChangeAllowP2PCalls","allowP2PCallsValue","setSettings","allowCalls","allowP2PCalls","prevAllowCallsValue","rules","added","setting","prevAllowP2PCallsValue","PrivacySecurity","openActiveSessions","openBlockedUsers","openCalls","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","closeCalls","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","AddParticipants","newArray","selectedItems","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","showArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","archiveTitle","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","link","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","InputBox","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","handleUnblock","handleStartBot","invokeScheduledAction","botStartMessage","botUserId","parameter","sendBotStartMessage","reply_to_message_id","input_message_content","disable_web_page_preview","clear_draft","isBotChat","permissions","can_send_messages","SCALE_BIG","SCALE_SMALL","SCALE_BIG_MIN","SCALE_SMALL_MIN","FORM_BIG_MAX","FORM_SMALL_MAX","LIGHT_GRADIENT_SIZE","rotateZ","angle","originX","originY","X","Y","BlobDrawable","maxRadius","minRadius","cubicBezierK","N","L","tan","radius","radiusNext","angleNext","progress","speed","pointStart","pointEnd","generateBlob","angleDif","radDif","random","amplitude","speedScale","cX","cY","canvas","paint","getContext","ctx","beginPath","progressNext","r1","r2","angle1","angle2","l","mapPoints","moveTo","bezierCurveTo","closePath","points","result1","result2","LineBlobDrawable","bottom","pinnedTop","progressToPinned","lineTo","MUTE_BUTTON_STATE_UNMUTE","MUTE_BUTTON_STATE_MUTE","MUTE_BUTTON_STATE_CONNECTING","MUTE_BUTTON_STATE_MUTED_BY_ADMIN","WeavingState","stateId","shader","createGradient","fillStyle","getGradientFromType","dt","x0","y0","gradient","createLinearGradient","addColorStop","TopBar","handleDevicePixelRatioChanged","scale","devicePixelRatio","topBar","handleResize","resizeHandler","clearTimeout","resizing","resizeCanvas","invokeDraw","handleBlur","raf","mounted","lbd","lbd1","lbd2","currentState","previousState","progressToState","newTime","lastUpdateTime","animateToAmplitude","animateAmplitudeDiff","amplitude2","animateAmplitudeDiff2","top1","top2","clearRect","alpha","paint1","globalAlpha","setCurrentState","animated","states","matchMedia","setAmplitude","GroupCallTopPanel","onClientUpdateGroupCallAmplitudeChange","amplitudes","topBarRef","onUpdateGroupCallParticipant","group_call_id","participant","getCallStatus","connected","switchButtonState","onClientUpdateGroupCall","onClientUpdateGroupCallConnectionState","saveMessagesScrollPosition","restoreMessagesScrollPosition","handleMicrophone","can_unmute_self","changeUserMuted","handleLeave","handleOpenGroupCall","openGroupCallPanel","elements","getElementsByClassName","openPanel","offsetHeightDiff","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","handleStartGroupCall","showAlert","startGroupCall","handleStartP2PCall","p2pStartCall","openReportChat","voice_chat_group_call_id","canClearHistory","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","manageVoiceChats","reported","canBeReported","called","canBeCalled","p2pCallsEnabled","Broom","Block","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","timingFunction","animateOnMount","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","canReport","PinnedMessageBorder","drawRect","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","is_permanent","animateText","textElement","text1Element","text2Element","currentMessageId","currentPrevMessageId","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","prevMessage","prevContent","CSSTransition","prevPropsChatId","Header","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","handlePinClick","getConnectionState","showProgressAnimation","HeaderProgress","PlaylistEdit","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","handlePlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","rate","Time","onClientUpdateMediaTime","currentTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","timestamp","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","HeaderPlayer","handleSeekForward","videoRef","handleSeek","PLAYER_SEEK_STEP_BIG","handleSeekBackward","handleSeekTo","seekTime","onClientUpdateRecordStart","paused","fadeOutVolume","pausedForRecord","onClientUpdateRecordStop","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","mimeType","getMediaMimeType","getCurrentTime","playing","srcSource","pause","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","setCurrentTime","handleLoadedMetadata","hasVoice","buffered","videoWidth","videoHeight","captureStream","mozCaptureStream","handleProgress","handleTimeUpdate","handleCanPlay","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","remote","unique_id","clearCurrentTime","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","disablePictureInPicture","onLoadedMetadata","onCanPlay","onPlay","onPause","onEnded","onTimeUpdate","onProgress","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","for_album","for_comment","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canSendMessages","canBePinned","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","isCall","isCallMessage","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Audio","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","end","sum","desiredWidth","totalWidth","totalHeight","trunc","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","diff","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","round","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","handleAttachDocumentComplete","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","GroupCallJoinPanelSubtitle","participantCount","participant_count","participantsOnly","GroupCallRecentParticipants","speakers","recent_speakers","updateSpeakers","PROFILE_PHOTO_PRELOAD_TIME_MS","lhs","rhs","is_speaking","speakersEquals","speaking","prevId","GroupCallJoinPanel","handleUpdateChatVoiceChat","handleUpdateGroupCall","handleClientUpdateGroupCall","isCurrent","is_joined","joinGroupCall","MessageContext","createContext","withMessage","MessageComponent","Consumer","handleCallbackQueryAnswer","via_bot_user_id","show_alert","showOpenGameAlert","is_verified","showOpenUrlAlert","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","onError","forward_text","skip_confirm","showRequestUrlAlert","in_current_chat","inline","setText","openChatSelect","switchInline","ArrowTopRight","ShareFilled","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","reply_markup","isMetaBubble","getMessageStyle","showMeta","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","isMobile","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","StickerStore","getItems","stickers","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","onClientUpdateFocusWindow","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","ignoreUnread","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","ttl","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","inputMessageContent","forward","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","handleInViewport","elementRect","contentRect","getBoundingClientRect","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","chatSelectOptions","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","ForwardTargetChat","ForwardDialog","getPublicMessageLink","getChatsPromise","publicMessageLink","getForwardPhotoSize","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchResults","globalSearchResults","chatsSource","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","OvershootInterpolator","tension","mTension","DecelerateInterpolator","factor","mFactor","pow","AccelerateInterpolator","mDoubleFactor","createRadialGradient","RadialProgressView","setUseSelfAlpha","useSelfAlpha","setAlpha","setNoProgress","noProgress","setProgress","currentProgress","animatedProgress","progressAnimationStart","progressTime","updateAnimation","radOffset","rotationTime","circle","circleProgress","currentProgressTime","risingTime","risingCircleLength","currentCircleLength","accelerateInterpolator","getInterpolation","decelerateInterpolator","old","progressDiff","setSize","setStrokeWidth","lineWidth","updateProgressPaint","setProgressColor","progressColor","toCircle","circleRect","translate","radStart","drawingCircleLength","radLength","arc","progressPaint","restore","isCircle","lineCap","strokeStyle","Button","switchProgress","tinyWaveDrawable","buttonDefaultRadius","buttonRadius","bigWaveDrawable","canSwitchProgress","radialProgressView","invalidateColors","lightingColor","fillColors","colorsTmp","oldLight","newLight","blendARGB","currentLightColor","radialGradient","showWaves","showLighting","showWavesProgress","showLightingProgress","showWavesProgressInterpolated","overshootInterpolator","resetTransform","paintTmp","scaleLight","drawCircle","updateMuteButton","muteButtonState","updateMuteButtonState","radialPaint","generateInitBlob","colorsToSet","s","color1","color2","c1","c2","inverseRatio","g","strToHex","justifyContent","cursor","GroupCallMicButtonHint","GroupCallMicButton","buttonRef","is_muted","GroupCallPanelButtons","GroupCallParticipant","handleOpenProfile","handleSendMessage","handleUnmute","is_muted_for_all_users","is_muted_for_current_user","can_be_muted_for_all_users","can_be_unmuted_for_all_users","prevUserId","participants","GroupCallParticipants","participantsMap","updateParticipants","preloadContent","manageGroupCalls","AddMember","GroupCallSettingsButton","Tune","GroupCallPanel","GroupCall","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","videoInfo","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","thumb","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","oldUrl","scrollToHash","handleBack","instantViewerRef","articleRef","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","scrollIntoView","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","PipPlayer","onClientUpdateMediaShortcut","PLAYER_SEEK_STEP_SMALL","handleVolume","PLAYER_VOLUME_STEP","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","handleLoadedData","waiting","handlePause","handleVolumeChange","onVolumeChange","handleWaiting","startStopPlayer","handlePlayerMouseDown","pip","offsetX","offsetY","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","connectPlayer","disconnectPlayer","pipPlayer","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","bufferedTime","Player","getBufferedTime","bufferedValue","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onBlur","Hint","rail","onChangeCommitted","FullScreen","Progress","prevVideo","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateCallPanel","onClientUpdateGroupCallPanel","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.1ad422e8.chunk.js","sourcesContent":["/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass Animator {\r\n    constructor(duration, options = []) {\r\n        this.options = options;\r\n        this.duration = duration;\r\n    }\r\n\r\n    static outSine(n) {\r\n        return Math.sin((n * Math.PI) / 2);\r\n    }\r\n\r\n    start = () => {\r\n        this.stopped = false;\r\n        this.id = requestAnimationFrame(this.startInternal);\r\n    };\r\n\r\n    startInternal = timeStamp => {\r\n        const { startTime, duration } = this;\r\n\r\n        this.startTime = timeStamp;\r\n        this.endTime = startTime + duration;\r\n        this.draw(timeStamp);\r\n    };\r\n\r\n    draw = now => {\r\n        const { stopped, duration, startTime, options } = this;\r\n\r\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\r\n            this.stopped = true;\r\n        }\r\n\r\n        if (stopped) return;\r\n\r\n        const time = Math.min(now - startTime, duration);\r\n        const p = duration === 0 ? 1.0 : time / duration;\r\n        const val = Animator.outSine(p);\r\n\r\n        options.forEach(x => {\r\n            const { from, to, func } = x;\r\n            x.last = from + (to - from) * val;\r\n            func(x.last);\r\n        });\r\n\r\n        this.id = requestAnimationFrame(this.draw);\r\n    };\r\n\r\n    stop = () => {\r\n        this.stopped = true;\r\n        cancelAnimationFrame(this.id);\r\n    };\r\n}\r\n\r\nexport default Animator;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerPreview.css';\r\n\r\nclass StickerPreview extends React.Component {\r\n    state = {\r\n        emoji: null,\r\n        prevPropsSticker: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { sticker } = props;\r\n        const { prevPropsSticker } = state;\r\n\r\n        if (sticker && prevPropsSticker) {\r\n            return {\r\n                prevPropsSticker: sticker,\r\n                emoji: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker && sticker !== prevProps.sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    loadStickerEmojis = sticker => {\r\n        const { sticker: file } = sticker;\r\n        const { id } = file;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getStickerEmojis',\r\n            sticker: { '@type': 'inputFileId', id }\r\n        }).then(result => {\r\n            if (this.props.sticker === sticker) {\r\n                this.setState({\r\n                    emoji: result.emojis.join(' ')\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { sticker } = this.props;\r\n        const { emoji } = this.state;\r\n\r\n        if (!sticker) return null;\r\n\r\n        return (\r\n            <div className='sticker-preview'>\r\n                <div className='sticker-preview-emoji'>{emoji}</div>\r\n                <Sticker\r\n                    sticker={sticker}\r\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\r\n                    source={StickerSourceEnum.PREVIEW}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStickerPreview.propTypes = {\r\n    sticker: PropTypes.object\r\n};\r\n\r\nexport default StickerPreview;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\r\n    'Smile'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { getDisplayName } from './Utils/HOC';\r\nimport { MAX_SNACK } from './Constants';\r\n\r\nfunction withSnackbarNotifications(WrappedComponent) {\r\n    class NotificationsWrapper extends React.Component {\r\n        render() {\r\n            return (\r\n                <SnackbarProvider maxSnack={MAX_SNACK}>\r\n                    <WrappedComponent {...this.props} />\r\n                </SnackbarProvider>\r\n            );\r\n        }\r\n    }\r\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\r\n\r\n    return NotificationsWrapper;\r\n}\r\n\r\nexport default withSnackbarNotifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { getFormattedText } from '../../Utils/Message';\r\nimport './AlertDialog.css';\r\n\r\nclass AlertDialog extends React.Component {\r\n\r\n    handleClose = result => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(result);\r\n    };\r\n\r\n    render() {\r\n        const { params, t } = this.props;\r\n        if (!params) return null;\r\n\r\n        let { title, message, ok, cancel } = params;\r\n\r\n        if (message['@type'] === 'formattedText') {\r\n            message = getFormattedText(message, t, {});\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {message}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    { cancel && (\r\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\r\n                            {cancel}\r\n                        </Button>\r\n                    )}\r\n                    { ok && (\r\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\r\n                            {ok}\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nAlertDialog.propTypes = {\r\n    params: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(AlertDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getUserShortName } from '../../Utils/User';\r\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\r\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './BlockSenderDialog.css';\r\n\r\nclass BlockSenderDialog extends React.Component {\r\n    state = {\r\n        reportSpam: true,\r\n        deleteChat: true\r\n    };\r\n\r\n    handleReportSpamChange = () => {\r\n        const { reportSpam } = this.state;\r\n\r\n        this.setState({\r\n            reportSpam: !reportSpam\r\n        });\r\n    };\r\n\r\n    handleDeleteChatChange = () => {\r\n        const { deleteChat } = this.state;\r\n\r\n        this.setState({\r\n            deleteChat: !deleteChat\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { sender, onClose, t } = this.props;\r\n        if (!sender) return null;\r\n\r\n        const { reportSpam, deleteChat } = this.state;\r\n\r\n        let title = null;\r\n        let text = null;\r\n        const entities = [];\r\n        let reportText = null;\r\n        switch (sender['@type']) {\r\n            case 'messageSenderUser': {\r\n                const { user_id } = sender;\r\n\r\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\r\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\r\n                text = getSimpleMarkupEntities(text, entities);\r\n                reportText = LStore.getString('BlockContact');\r\n                break;\r\n            }\r\n            case 'messageSenderChat': {\r\n                const { chat_id } = sender;\r\n\r\n                const location = getChatLocation(chat_id);\r\n                if (location) {\r\n                    title = LStore.getString('ReportUnrelatedGroup');\r\n                    if (location.address) {\r\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\r\n                        text = getSimpleMarkupEntities(text, entities);\r\n                    } else {\r\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\r\n                    }\r\n                } else {\r\n                    title = LStore.getString('ReportSpamTitle');\r\n                    if (isChannelChat(chat_id)) {\r\n                        text = LStore.getString('ReportSpamAlertChannel');\r\n                    } else {\r\n                        text = LStore.getString('ReportSpamAlertGroup');\r\n                    }\r\n                }\r\n                reportText = LStore.getString('ReportChat');\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, null)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>\r\n                    {title}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\r\n                    </DialogContentText>\r\n                    { sender['@type'] === 'messageSenderUser' && (\r\n                        <div className='block-sender-params'>\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\r\n                                label={t('DeleteReportSpam')}\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\r\n                                label={t('DeleteThisChat')}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, null)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\r\n                        {reportText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nBlockSenderDialog.propTypes = {\r\n    sender: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(BlockSenderDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\n\r\nclass ClearHistoryDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n        const { prevChatId } = state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\r\n\r\n        if (prevChatId !== chatId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                canBeDeletedForAllUsers,\r\n                revoke: canBeDeletedForAllUsers\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n        const { canBeDeletedForAllUsers, revoke } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                open={true}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTile chatId={chatId} />\r\n                        <div>\r\n                            <DialogContentText id='delete-dialog-description'>\r\n                                Are you sure you want clear history?\r\n                            </DialogContentText>\r\n                            {\r\n                                canBeDeletedForAllUsers && (\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\r\n                                        }\r\n                                        label={\r\n                                            isPrivateChat(chatId)\r\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\r\n                                                : 'Delete for all members'\r\n                                        }\r\n                                        style={{ marginLeft: 0 }}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nClearHistoryDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(ClearHistoryDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport OptionStore from '../Stores/OptionStore';\r\n\r\nexport function sprintf(t, key, ...args) {\r\n    return t(key, { postProcess: 'sprintf', sprintf: args });\r\n}\r\n\r\nlet cyrillicInput = null;\r\n\r\nfunction getCyrillicInputMap() {\r\n    return new Map([\r\n        ['q', 'й'],\r\n        ['w', 'ц'],\r\n        ['e', 'у'],\r\n        ['r', 'к'],\r\n        ['t', 'е'],\r\n        ['y', 'н'],\r\n        ['u', 'г'],\r\n        ['i', 'ш'],\r\n        ['o', 'щ'],\r\n        ['p', 'з'],\r\n        ['[', 'х'],\r\n        [']', 'ъ'],\r\n        ['a', 'ф'],\r\n        ['s', 'ы'],\r\n        ['d', 'в'],\r\n        ['f', 'а'],\r\n        ['g', 'п'],\r\n        ['h', 'р'],\r\n        ['j', 'о'],\r\n        ['k', 'л'],\r\n        ['l', 'д'],\r\n        [';', 'ж'],\r\n        [\"'\", 'э'],\r\n        ['\\\\', 'ё'],\r\n        ['z', 'я'],\r\n        ['x', 'ч'],\r\n        ['c', 'с'],\r\n        ['v', 'м'],\r\n        ['b', 'и'],\r\n        ['n', 'т'],\r\n        ['m', 'ь'],\r\n        [',', 'б'],\r\n        ['.', 'ю']\r\n    ]);\r\n}\r\n\r\nfunction isCyrillicPackId(packId) {\r\n    if (!packId) return false;\r\n\r\n    const { value } = packId;\r\n    if (!value) return false;\r\n\r\n    return value.value === 'ru';\r\n}\r\n\r\nfunction getCyrillicInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    const currentPackId = OptionStore.get('language_pack_id');\r\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\r\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\r\n    if (!hasCyrillicPackId) return null;\r\n\r\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (cyrillicInput.has(input[i])) {\r\n            output += cyrillicInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nlet latinInput = null;\r\n\r\nfunction getLatinInputMap() {\r\n    return new Map([\r\n        ['й', 'q'],\r\n        ['ц', 'w'],\r\n        ['у', 'e'],\r\n        ['к', 'r'],\r\n        ['е', 't'],\r\n        ['н', 'y'],\r\n        ['г', 'u'],\r\n        ['ш', 'i'],\r\n        ['щ', 'o'],\r\n        ['з', 'p'],\r\n        ['х', '['],\r\n        ['ъ', ']'],\r\n        ['ф', 'a'],\r\n        ['ы', 's'],\r\n        ['в', 'd'],\r\n        ['а', 'f'],\r\n        ['п', 'g'],\r\n        ['р', 'h'],\r\n        ['о', 'j'],\r\n        ['л', 'k'],\r\n        ['д', 'l'],\r\n        ['ж', ';'],\r\n        ['э', \"'\"],\r\n        ['ё', '\\\\'],\r\n        ['я', 'z'],\r\n        ['ч', 'x'],\r\n        ['с', 'c'],\r\n        ['м', 'v'],\r\n        ['и', 'b'],\r\n        ['т', 'n'],\r\n        ['ь', 'm'],\r\n        ['б', ','],\r\n        ['ю', '.']\r\n    ]);\r\n}\r\n\r\nfunction getLatinInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    latinInput = latinInput || getLatinInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (latinInput.has(input[i])) {\r\n            output += latinInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nexport { getCyrillicInput, getLatinInput };\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\r\nimport { sprintf } from '../../Utils/Language';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\n\r\nclass DeleteMessagesDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageIds } = props;\r\n        const { prevChatId, prevMessageIds } = state;\r\n\r\n        let canBeDeletedForAllUsers = true;\r\n        for (let messageId of messageIds) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_for_all_users) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageIds: messageIds,\r\n                canBeDeletedForAllUsers,\r\n                revoke: canBeDeletedForAllUsers\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageIds, onClose, t } = this.props;\r\n        const { canBeDeletedForAllUsers, revoke } = this.state;\r\n\r\n        const count = messageIds ? messageIds.length : 0;\r\n\r\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\r\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\r\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {confirm}\r\n                    </DialogContentText>\r\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\r\n                            label={\r\n                                isPrivateChat(chatId)\r\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\r\n                                    : t('DeleteForAll')\r\n                            }\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nDeleteMessagesDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageIds: PropTypes.array,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(DeleteMessagesDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './InputPasswordDialog.css';\r\n\r\nclass InputPasswordDialog extends React.Component {\r\n\r\n    state = { };\r\n\r\n    handleChange = e => {\r\n        this.password = e.target.value;\r\n    };\r\n\r\n    handleClickShowPassword = () => {\r\n        const { showPassword } = this.state;\r\n\r\n        this.setState({ showPassword: !showPassword });\r\n    };\r\n\r\n    getErrorMessage = error => {\r\n        const { t } = this.props;\r\n\r\n        if (!error) return null;\r\n\r\n        if (error.message === 'PASSWORD_HASH_INVALID') {\r\n            return t('InvalidPassword');\r\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\r\n            const str = error.message.replace('Too Many Requests: retry after ', '');\r\n            try {\r\n                const time = parseInt(str);\r\n                const timeString = time < 60\r\n                    ? LStore.formatPluralString('Seconds', time)\r\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\r\n\r\n                return LStore.formatString('FloodWaitTime', timeString);\r\n            } catch (e) {\r\n                return error.message;\r\n            }\r\n        }\r\n\r\n        return error.message;\r\n    }\r\n\r\n    render() {\r\n        const { state, error, onClose, t } = this.props;\r\n        if (!state) return null;\r\n\r\n        const { showPassword, loading } = this.state;\r\n        const { password_hint: passwordHint } = state;\r\n\r\n        const errorMessage = this.getErrorMessage(error);\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {t('PleaseEnterCurrentPasswordTransfer')}\r\n                    </DialogContentText>\r\n                    <FormControl className='auth-input' fullWidth>\r\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\r\n                        <Input\r\n                            fullWidth\r\n                            autoFocus\r\n                            autoComplete='off'\r\n                            id='adornment-password'\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            disabled={loading}\r\n                            error={Boolean(error)}\r\n                            onChange={this.handleChange}\r\n                            endAdornment={\r\n                                <InputAdornment position='end'>\r\n                                    <IconButton\r\n                                        aria-label='Toggle password visibility'\r\n                                        onClick={this.handleClickShowPassword}\r\n                                        edge='end'>\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\r\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\r\n                        {t('OK')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nInputPasswordDialog.propTypes = {\r\n    state: PropTypes.object,\r\n    error: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(InputPasswordDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\n\r\nclass LeaveChatDialog extends React.Component {\r\n    getDeleteDialogText = (chatId, t) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n        if (!chat.type) return null;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return `Are you sure you want to leave group ${chat.title}?`;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel\r\n                        ? `Are you sure you want to leave channel ${chat.title}?`\r\n                        : `Are you sure you want to leave group ${chat.title}?`;\r\n                }\r\n\r\n                return null;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                open={true}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTile chatId={chatId} />\r\n                        <DialogContentText id='delete-dialog-description'>\r\n                            {this.getDeleteDialogText(chatId, t)}\r\n                        </DialogContentText>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nLeaveChatDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(LeaveChatDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './LeaveVoiceChatDialog.css';\r\n\r\nclass LeaveVoiceChatDialog extends React.Component {\r\n    state = {\r\n        discard: false\r\n    };\r\n\r\n    handleDiscardChange = () => {\r\n        const { discard } = this.state;\r\n\r\n        this.setState({\r\n            discard: !discard\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, t } = this.props;\r\n        const { discard } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, null)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>\r\n                    {LStore.getString('VoipGroupLeaveAlertTitle')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {LStore.getString('VoipGroupLeaveAlertText')}\r\n                    </DialogContentText>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={discard} onChange={this.handleDiscardChange} color='primary' />}\r\n                        label={t('VoipGroupEndChat')}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, null)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, { discard })} color='secondary'>\r\n                        {t('VoipGroupLeave')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nLeaveVoiceChatDialog.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(LeaveVoiceChatDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './NotificationTimer.css';\r\n\r\nclass NotificationTimer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            seconds: this.props.timeout / 1000,\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startTime = new Date();\r\n        this.expire = this.startTime;\r\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\r\n        this.timerId = setInterval(this.handleTimer, 100);\r\n    }\r\n\r\n    handleTimer = () => {\r\n        const now = new Date();\r\n        const seconds = this.expire - now;\r\n        const value = 100 - (seconds / this.props.timeout) * 100;\r\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\r\n        this.setState({\r\n            seconds: seconds > 0 ? seconds : 0,\r\n            value: value > 100 ? 100 : value\r\n        });\r\n\r\n        if (now >= this.expire) {\r\n            if (this.timerId) {\r\n                clearInterval(this.timerId);\r\n                this.timerId = null;\r\n\r\n                const { onTimeout } = this.props;\r\n                if (onTimeout) {\r\n                    onTimeout();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        if (this.timerId) {\r\n            clearInterval(this.timerId);\r\n            this.timerId = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { value, seconds } = this.state;\r\n\r\n        return (\r\n            <div className='notification-timer'>\r\n                <div className='notification-timer-text'>\r\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\r\n                </div>\r\n                <div className='notification-timer-progress'>\r\n                    <CircularProgress size={32} value={100 - value} variant='static' />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNotificationTimer.propTypes = {\r\n    timeout: PropTypes.number.isRequired,\r\n    onTimeout: PropTypes.func\r\n};\r\n\r\nexport default NotificationTimer;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './OpenGameDialog.css';\r\n\r\nclass OpenGameDialog extends React.Component {\r\n    render() {\r\n        const { game, params, onClose, t } = this.props;\r\n        if (!game) return null;\r\n\r\n        const { userId } = params;\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('AppName')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true)} color='primary'>\r\n                        {t('OK')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nOpenGameDialog.propTypes = {\r\n    game: PropTypes.object,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(OpenGameDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './OpenUrlDialog.css';\r\n\r\nclass OpenUrlDialog extends React.Component {\r\n    render() {\r\n        const { url, onClose, t } = this.props;\r\n        if (!url) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\r\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('OpenUrlAlert2', url)}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true)} color='primary'>\r\n                        {t('Open')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nOpenUrlDialog.propTypes = {\r\n    url: PropTypes.string,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(OpenUrlDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './PinMessageDialog.css';\r\n\r\nclass PinMessageDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId } = props;\r\n        const { prevChatId, prevMessageId } = state;\r\n\r\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageIds: messageId,\r\n                revoke: !isPrivateChat(chatId)\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n        const { revoke } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        let text = '';\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                text = t('PinMessageAlertChat');\r\n                break;\r\n            }\r\n            case 'chatTypeBasicGroup': {\r\n                text = t('PinMessageAlert');\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                if (isChannelChat(chatId)) {\r\n                    text = t('PinMessageAlertChannel');\r\n                } else {\r\n                    text = t('PinMessageAlert');\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {text}\r\n                    </DialogContentText>\r\n                    <>\r\n                        {\r\n                            isPrivateChat(chatId) && (\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\r\n                                    }\r\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\r\n                                />\r\n                            )\r\n                        }\r\n                    </>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nPinMessageDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(PinMessageDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './ReportChatDialog.css';\r\n\r\nclass ReportChatDialog extends React.Component {\r\n\r\n    handleReport = type => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(true, { '@type': type });\r\n    }\r\n\r\n    render() {\r\n        const { onClose, t } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>{t('ReportChat')}</DialogTitle>\r\n                <div className='report-chat-dialog-content'>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonSpam')}>\r\n                        <ListItemText primary={t('ReportChatSpam')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonFake')}>\r\n                        <ListItemText primary={t('ReportChatFakeAccount')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonViolence')}>\r\n                        <ListItemText primary={t('ReportChatViolence')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonPornography')}>\r\n                        <ListItemText primary={t('ReportChatPornography')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonChildAbuse')}>\r\n                        <ListItemText primary={t('ReportChatChild')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonCustom')}>\r\n                        <ListItemText primary={t('ReportChatOther')}/>\r\n                    </ListItem>\r\n                </div>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('ReportChat')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nReportChatDialog.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(ReportChatDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\r\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './RequestUrlDialog.css';\r\n\r\nclass RequestUrlDialog extends React.Component {\r\n    state = {\r\n        value1: true,\r\n        value2: true\r\n    };\r\n\r\n    handleValue1Change = () => {\r\n        const { value1 } = this.state;\r\n\r\n        this.setState({ value1: !value1 });\r\n    };\r\n\r\n    handleValue2Change = () => {\r\n        const { value2 } = this.state;\r\n\r\n        this.setState({ value2: !value2 });\r\n    };\r\n\r\n    render() {\r\n        const { url, params, onClose, t } = this.props;\r\n        if (!url) return null;\r\n\r\n        const { value1, value2 } = this.state;\r\n\r\n        const { result } = params;\r\n        if (!result) return null;\r\n\r\n        const { domain, bot_user_id, request_write_access } = result;\r\n\r\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\r\n        const entities1 = [];\r\n        text1 = getSimpleMarkupEntities(text1, entities1);\r\n        const option1 = (\r\n            <FormControlLabel\r\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\r\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\r\n            />\r\n        );\r\n\r\n        let option2 = null;\r\n        if (request_write_access) {\r\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\r\n            const entities2 = [];\r\n            text2 = getSimpleMarkupEntities(text2, entities2);\r\n            option2 = (\r\n                <FormControlLabel\r\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\r\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\r\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('OpenUrlAlert2', url)}\r\n                    </DialogContentText>\r\n                    {option1}\r\n                    {option2}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\r\n                        {t('Open')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nRequestUrlDialog.propTypes = {\r\n    url: PropTypes.string,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(RequestUrlDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './UnpinMessageDialog.css';\r\n\r\nclass UnpinMessageDialog extends React.Component {\r\n\r\n    render() {\r\n        const { messageId, onClose, t } = this.props;\r\n\r\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {text}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nUnpinMessageDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(UnpinMessageDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { compose } from '../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AlertDialog from './Popup/AlertDialog';\r\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\r\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\r\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\r\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\r\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\r\nimport LeaveVoiceChatDialog from './Popup/LeaveVoiceChatDialog';\r\nimport NotificationTimer from './Additional/NotificationTimer';\r\nimport OpenGameDialog from './Popup/OpenGameDialog';\r\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\r\nimport PinMessageDialog from './Popup/PinMessageDialog';\r\nimport ReportChatDialog from './Popup/ReportChatDialog';\r\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\r\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\r\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\r\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\r\nimport { clearSelection, closePinned, showSnackbar } from '../Actions/Client';\r\nimport { openGameInBrowser } from '../Utils/Game';\r\nimport { reportChat } from '../Actions/Chat';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\r\nimport AppStore from '../Stores/ApplicationStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport SupergroupStore from '../Stores/SupergroupStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport CloseIcon from '../Assets/Icons/Close';\r\n\r\nclass Actions extends React.PureComponent {\r\n    state = {\r\n        leaveChat: null,\r\n        clearHistory: null,\r\n        deleteMessages: null,\r\n        pinMessage: null,\r\n        unpinMessage: null,\r\n        alert: null,\r\n        openUrlAlert: null,\r\n        openGameAlert: null,\r\n        requestUrlAlert: null,\r\n        inputPasswordAlert: null,\r\n        requestBlockSenderAlert: null,\r\n        leaveVoiceChatAlert: null,\r\n        reportChatAlert: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\r\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\r\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\r\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\r\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\r\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\r\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\r\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\r\n        AppStore.on('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\r\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\r\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\r\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\r\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\r\n        AppStore.on('clientUpdateReportChat', this.onClientUpdateReportChat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\r\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\r\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\r\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\r\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\r\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\r\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\r\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\r\n        AppStore.off('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\r\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\r\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\r\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\r\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\r\n        AppStore.off('clientUpdateReportChat', this.onClientUpdateReportChat);\r\n    }\r\n\r\n    onClientUpdateReportChat = update => {\r\n        const { chatId, messageIds } = update;\r\n\r\n        this.setState({ reportChatAlert: { chatId, messageIds }});\r\n    };\r\n\r\n    onClientUpdateBlockSender = update => {\r\n        const { sender_id } = update;\r\n\r\n        this.setState({ requestBlockSenderAlert: { sender: sender_id }});\r\n    }\r\n\r\n    onClientUpdateInputPasswordAlert = update => {\r\n        const { state, onPassword } = update;\r\n\r\n        this.setState({ inputPasswordAlert: { state, onPassword } });\r\n    }\r\n\r\n    onClientUpdateLeaveVoiceChatAlert = update => {\r\n        const { params } = update;\r\n\r\n        this.setState({ leaveVoiceChatAlert: { params }});\r\n    }\r\n\r\n    onClientUpdateOpenGameAlert = update => {\r\n        const { game, params } = update;\r\n\r\n        if (params && params.isVerified) {\r\n            this.openGameAlert = { game, params };\r\n            this.handleOpenGameContinue(null, true);\r\n        } else {\r\n            this.setState({ openGameAlert: { game, params } });\r\n        }\r\n    }\r\n\r\n    onClientUpdateOpenUrlAlert = update => {\r\n        const { url, params } = update;\r\n\r\n        if (params && !params.ask) {\r\n            this.openUrlAlert = { url, params };\r\n            this.handleOpenUrlContinue(null, true);\r\n        } else {\r\n            this.setState({ openUrlAlert: { url, params } });\r\n        }\r\n    };\r\n\r\n    onClientUpdateRequestUrlAlert = update => {\r\n        const { url, params } = update;\r\n\r\n        this.setState({ requestUrlAlert: { url, params } });\r\n    }\r\n\r\n    onClientUpdateSnackbar = update => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n        const { message, action } = update;\r\n\r\n        enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: action(closeSnackbar)\r\n        });\r\n    };\r\n\r\n    onClientUpdateAlert = update => {\r\n        const { params } = update;\r\n\r\n        this.setState({ alert: { params } });\r\n    };\r\n\r\n    onClientUpdateUnpinMessage = update => {\r\n        const { chatId, messageId } = update;\r\n\r\n        if (isMeChat(chatId)) {\r\n            this.unpinMessage = {\r\n                chatId,\r\n                messageId\r\n            };\r\n            this.handleUnpinMessageContinue(true, false);\r\n        } else {\r\n            this.setState({\r\n                unpinMessage: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdatePinMessage = update => {\r\n        const { chatId, messageId } = update;\r\n\r\n        if (isMeChat(chatId)) {\r\n            this.pinMessage = {\r\n                chatId,\r\n                messageId\r\n            };\r\n            this.handlePinMessageContinue(true, false);\r\n        } else {\r\n            this.setState({\r\n                pinMessage: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateDeleteMessages = update => {\r\n        const { chatId, messageIds } = update;\r\n\r\n        this.setState({\r\n            deleteMessages: {\r\n                chatId,\r\n                messageIds\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateLeaveChat = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ leaveChat : { chatId } });\r\n    };\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ clearHistory : { chatId } });\r\n    };\r\n\r\n    handleClearHistoryContinue = (result, revoke) => {\r\n        const { t } = this.props;\r\n\r\n        const { clearHistory } = this.state;\r\n        if (!clearHistory) return;\r\n\r\n        this.setState({ clearHistory: null });\r\n\r\n        if (!result) return;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const message = t('HistoryClearedUndo');\r\n        const request = {\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: false,\r\n            revoke\r\n        };\r\n\r\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\r\n    };\r\n\r\n    handleLeaveContinue = async (result, undo = true) => {\r\n        const { leaveChat } = this.state || this;\r\n        if (!leaveChat) return;\r\n\r\n        const { chatId } = leaveChat;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        this.leaveChat = null;\r\n        this.setState({ leaveChat: null });\r\n\r\n        if (!result) return;\r\n\r\n        const message = this.getLeaveChatNotification(chatId);\r\n        const requests = [];\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                if (isChatMember(chatId)) {\r\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\r\n                }\r\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                if (isCreator(chatId)) {\r\n                    requests.push({\r\n                        '@type': 'setChatMemberStatus',\r\n                        chat_id: chatId,\r\n                        user_id: UserStore.getMyId(),\r\n                        status: {\r\n                            '@type': 'chatMemberStatusCreator',\r\n                            is_member: false\r\n                        }\r\n                    });\r\n                } else if (isChatMember(chatId)) {\r\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\r\n                }\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\r\n            }\r\n        }\r\n\r\n        if (undo) {\r\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\r\n        } else {\r\n            try {\r\n                for (let i = 0; i < requests.length; i++) {\r\n                    await TdLibController.send(requests[i]);\r\n                }\r\n            } finally {\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    handleDeleteMessagesContinue = (result, revoke) => {\r\n        const { deleteMessages } = this.state;\r\n        if (!deleteMessages) return;\r\n\r\n        const { chatId, messageIds } = deleteMessages;\r\n\r\n        clearSelection();\r\n        this.setState({ deleteMessages: null });\r\n\r\n        if (!result) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: messageIds,\r\n            revoke\r\n        });\r\n    };\r\n\r\n    getLeaveChatNotification = chatId => {\r\n        const { t } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return t('ChatDeletedUndo');\r\n        if (!chat.type) return t('ChatDeletedUndo');\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return t('ChatDeletedUndo');\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\r\n                }\r\n\r\n                return t('ChatDeletedUndo');\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return t('ChatDeletedUndo');\r\n            }\r\n        }\r\n\r\n        return t('ChatDeletedUndo');\r\n    };\r\n\r\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\r\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\r\n        if (!clientUpdateType) return;\r\n\r\n        const key = `${clientUpdateType} chatId=${chatId}`;\r\n        const action = async () => {\r\n            try {\r\n                for (let i = 0; i < requests.length; i++) {\r\n                    await TdLibController.send(requests[i]);\r\n                }\r\n            } finally {\r\n                closeSnackbar(snackKey);\r\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\r\n            }\r\n        };\r\n        const cancel = () => {\r\n            closeSnackbar(snackKey);\r\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\r\n        };\r\n\r\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\r\n\r\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\r\n        const snackKey = enqueueSnackbar(message, {\r\n            persist: true,\r\n            key,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='progress'\r\n                    color='inherit'\r\n                    className='progress-button'>\r\n                    <NotificationTimer\r\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\r\n                        onTimeout={() => {\r\n                            action();\r\n                            AppStore.removeScheduledAction(key);\r\n                        }}/>\r\n                </IconButton>,\r\n                <Button\r\n                    key='undo'\r\n                    color='primary'\r\n                    size='small'\r\n                    onClick={() => {\r\n                        cancel();\r\n                        AppStore.removeScheduledAction(key);\r\n                    }}>\r\n                    {t('Undo')}\r\n                </Button>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handlePinMessageContinue = (result, revoke) => {\r\n        let { pinMessage } = this.state;\r\n        pinMessage = pinMessage || this.pinMessage;\r\n        if (!pinMessage) return;\r\n\r\n        const { chatId, messageId } = pinMessage;\r\n\r\n        clearSelection();\r\n        this.setState({ pinMessage: null });\r\n        this.pinMessage = null;\r\n\r\n        if (!result) return;\r\n\r\n        pinMessageAction(chatId, messageId, false, !revoke);\r\n    };\r\n\r\n    handleUnpinMessageContinue = async result => {\r\n        let { unpinMessage } = this.state;\r\n        unpinMessage = unpinMessage || this.unpinMessage;\r\n        if (!unpinMessage) return;\r\n\r\n        const { chatId, messageId } = unpinMessage;\r\n\r\n        clearSelection();\r\n        this.setState({ unpinMessage: null });\r\n        this.unpinMessage = null;\r\n\r\n        if (!result) return;\r\n\r\n        if (canPinMessages(chatId)) {\r\n            if (messageId) {\r\n                await unpinMessageAction(chatId, messageId);\r\n            } else {\r\n                closePinned();\r\n\r\n                await unpinAllMessages(chatId);\r\n            }\r\n        } else {\r\n            closePinned();\r\n\r\n            const data = ChatStore.getClientData(chatId);\r\n            await TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateSetChatClientData',\r\n                chatId,\r\n                clientData: { ...data, ...{ unpinned: true } }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleAlertContinue = result => {\r\n        const { alert } = this.state;\r\n        if (!alert) return;\r\n\r\n        const { params } = alert;\r\n        this.setState({ alert: null });\r\n\r\n        const { onResult } = params;\r\n        onResult && onResult(result);\r\n    };\r\n\r\n    handleOpenUrlContinue = (event, result) => {\r\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\r\n\r\n        this.setState({ openUrlAlert: null });\r\n        this.openUrlAlert = null;\r\n\r\n        if (!result) return;\r\n\r\n        const { url, onClick } = openUrlAlert;\r\n        if (!url) return;\r\n\r\n        if (onClick) {\r\n            onClick(event);\r\n        } else {\r\n            event && event.preventDefault();\r\n\r\n            const newWindow = window.open();\r\n            newWindow.opener = null;\r\n            newWindow.location = url;\r\n        }\r\n    };\r\n\r\n    handleOpenGameContinue = (event, result) => {\r\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\r\n\r\n        this.setState({ openGameAlert: null });\r\n        this.openGameAlert = null;\r\n\r\n        if (!result) return;\r\n\r\n        const { game, params } = openGameAlert;\r\n        if (!game) return;\r\n        if (!params) return;\r\n\r\n        const { url, message } = params;\r\n        if (!url) return;\r\n        if (!message) return;\r\n\r\n        openGameInBrowser(url, message);\r\n    };\r\n\r\n    handleRequestUrlContinue = async (event, open, values) => {\r\n        const { requestUrlAlert } = this.state;\r\n        this.setState({ requestUrlAlert: null });\r\n\r\n        if (!open) return;\r\n\r\n        const { params } = requestUrlAlert;\r\n        if (!params) return;\r\n\r\n        const { result, chatId, messageId, buttonId } = params;\r\n        if (!result) return;\r\n\r\n        if (!values.value1) {\r\n            this.openUrlAlert = { url: result.url };\r\n            this.handleOpenUrlContinue(event, open);\r\n        } else {\r\n            const httpUrl = await TdLibController.send({\r\n                '@type': 'getLoginUrl',\r\n                chat_id: chatId,\r\n                message_id: messageId,\r\n                button_id: buttonId,\r\n                allow_write_access: result.request_write_access && values.value2\r\n            });\r\n\r\n            this.openUrlAlert = { url: httpUrl.url };\r\n            this.handleOpenUrlContinue(event, open);\r\n        }\r\n    };\r\n\r\n    handleInputPasswordContinue = (result, password) => {\r\n        const { inputPasswordAlert } = this.state;\r\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\r\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\r\n\r\n        if (!result) {\r\n            onCloseDialog();\r\n            return;\r\n        }\r\n\r\n        const { onPassword } = inputPasswordAlert;\r\n        onPassword && onPassword(password, onCloseDialog, onError);\r\n    };\r\n\r\n    handleBlockSenderContinue = async (result, params) => {\r\n        const { requestBlockSenderAlert } = this.state;\r\n\r\n        this.setState({ requestBlockSenderAlert: null });\r\n\r\n        if (!result) {\r\n            return;\r\n        }\r\n\r\n        const { sender } = requestBlockSenderAlert;\r\n        if (!sender) return;\r\n\r\n        let chatId = null;\r\n        switch (sender['@type']) {\r\n            case 'messageSenderUser': {\r\n                blockSender(sender);\r\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\r\n                break;\r\n            }\r\n            case 'messageSenderChat': {\r\n                chatId = sender.chat_id;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!params || params.reportSpam) {\r\n            const reason = getChatLocation(chatId)\r\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\r\n                : { '@type': 'chatReportReasonSpam' };\r\n\r\n            reportChat(chatId, reason);\r\n        }\r\n\r\n        if (!params || params.deleteChat) {\r\n            const deleteChat = canDeleteChat(chatId);\r\n            if (!deleteChat) return;\r\n\r\n            this.leaveChat = { chatId };\r\n            this.handleLeaveContinue(true, false);\r\n        }\r\n    };\r\n\r\n    handleLeaveVoiceChatContinue = (result, resultParams) => {\r\n        const { leaveVoiceChatAlert } = this.state;\r\n\r\n        this.setState({ leaveVoiceChatAlert: null });\r\n\r\n        const { params } = leaveVoiceChatAlert;\r\n        if (!params) return;\r\n\r\n        const { onResult } = params;\r\n\r\n        onResult && onResult(resultParams);\r\n    };\r\n\r\n    handleReportChatContinue = (result, params) => {\r\n        const { t } = this.props;\r\n        const { reportChatAlert } = this.state;\r\n\r\n        this.setState({ reportChatAlert: null });\r\n        if (!result) return;\r\n\r\n        const { chatId, messageIds } = reportChatAlert;\r\n\r\n        showSnackbar(t('ReportChatSent'), closeSnackbar => snackKey => {\r\n            return (\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => { closeSnackbar(snackKey); }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            )\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            leaveChat,\r\n            clearHistory,\r\n            deleteMessages,\r\n            pinMessage,\r\n            unpinMessage,\r\n            alert,\r\n            openUrlAlert,\r\n            openGameAlert,\r\n            requestUrlAlert,\r\n            inputPasswordAlert,\r\n            requestBlockSenderAlert,\r\n            leaveVoiceChatAlert,\r\n            reportChatAlert\r\n        } = this.state;\r\n        if (leaveChat) {\r\n            const { chatId } = leaveChat;\r\n\r\n            return (\r\n                <LeaveChatDialog\r\n                    chatId={chatId}\r\n                    onClose={this.handleLeaveContinue} />\r\n                );\r\n        } else if (clearHistory) {\r\n            const { chatId } = clearHistory;\r\n\r\n            return (\r\n                <ClearHistoryDialog\r\n                    chatId={chatId}\r\n                    onClose={this.handleClearHistoryContinue} />\r\n                );\r\n        } else if (deleteMessages) {\r\n            const { chatId, messageIds } = deleteMessages;\r\n\r\n            return (\r\n                <DeleteMessagesDialog\r\n                    chatId={chatId}\r\n                    messageIds={messageIds}\r\n                    onClose={this.handleDeleteMessagesContinue} />\r\n                );\r\n        } else if (pinMessage) {\r\n            const { chatId, messageId } = pinMessage;\r\n\r\n            return (\r\n                <PinMessageDialog\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    onClose={this.handlePinMessageContinue} />\r\n            );\r\n        } else if (unpinMessage) {\r\n            const { chatId, messageId } = unpinMessage;\r\n\r\n            return (\r\n                <UnpinMessageDialog\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    onClose={this.handleUnpinMessageContinue} />\r\n            );\r\n        } else if (alert) {\r\n            const { params } = alert;\r\n\r\n            return (\r\n                <AlertDialog\r\n                    params={params}\r\n                    onClose={this.handleAlertContinue} />\r\n            );\r\n        } else if (openUrlAlert) {\r\n            const { url, params } = openUrlAlert;\r\n\r\n            return (\r\n                <OpenUrlDialog\r\n                    url={url}\r\n                    params={params}\r\n                    onClose={this.handleOpenUrlContinue}/>\r\n            );\r\n        } else if (openGameAlert) {\r\n            const { game, params } = openGameAlert;\r\n\r\n            return (\r\n                <OpenGameDialog\r\n                    game={game}\r\n                    params={params}\r\n                    onClose={this.handleOpenGameContinue}/>\r\n            );\r\n        } else if (requestUrlAlert) {\r\n            const { url, params } = requestUrlAlert;\r\n\r\n            return (\r\n                <RequestUrlDialog\r\n                    url={url}\r\n                    params={params}\r\n                    onClose={this.handleRequestUrlContinue}/>\r\n            );\r\n        } else if (inputPasswordAlert) {\r\n            const { state, error } = inputPasswordAlert;\r\n\r\n            return (\r\n                <InputPasswordDialog\r\n                    state={state}\r\n                    error={error}\r\n                    onClose={this.handleInputPasswordContinue}/>\r\n            );\r\n        } else if (requestBlockSenderAlert) {\r\n            const { sender } = requestBlockSenderAlert;\r\n\r\n            return (\r\n                <BlockSenderDialog\r\n                    sender={sender}\r\n                    onClose={this.handleBlockSenderContinue}/>\r\n            );\r\n        } else if (leaveVoiceChatAlert) {\r\n            const { params } = leaveVoiceChatAlert;\r\n\r\n            return (\r\n                <LeaveVoiceChatDialog\r\n                    params={params}\r\n                    onClose={this.handleLeaveVoiceChatContinue}/>\r\n            );\r\n        } else if (reportChatAlert) {\r\n            const { chatId, messageIds } = reportChatAlert;\r\n\r\n            return (\r\n                <ReportChatDialog\r\n                    chatId={chatId}\r\n                    messageIds={messageIds}\r\n                    onClose={this.handleReportChatContinue}/>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withSnackbar,\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(Actions);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function openGameInBrowser(url, message) {\r\n    let sharedPreferences = {};\r\n    try {\r\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\r\n    } catch (e) { }\r\n\r\n    const existing = sharedPreferences['' + message.id];\r\n    let hash = existing ? existing : ''\r\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\r\n    if (!existing) {\r\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        const array = new Uint8Array(1);\r\n        for (let i = 0; i < 20; i++) {\r\n            window.crypto.getRandomValues(array)\r\n            hash += chars[array[0] % chars.length];\r\n        }\r\n\r\n        sharedPreferences['' + message.id] = hash;\r\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\r\n    }\r\n    addHash += hash;\r\n    const index = url.indexOf('#');\r\n    if (index < 0) {\r\n        url += '#' + addHash;\r\n    } else {\r\n        const curHash = url.substring(0, index + 1);\r\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\r\n            url += '&' + addHash;\r\n        } else {\r\n            if (curHash.length > 0) {\r\n                url += '?' + addHash;\r\n            } else {\r\n                url += addHash;\r\n            }\r\n        }\r\n    }\r\n\r\n    const newWindow = window.open();\r\n    newWindow.opener = null;\r\n    newWindow.location = url;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,9C10.4,9 8.85,9.25 7.4,9.72V12.82C7.4,13.22 7.17,13.56 6.84,13.72C5.86,14.21 4.97,14.84 4.17,15.57C4,15.75 3.75,15.86 3.5,15.86C3.2,15.86 2.95,15.74 2.77,15.56L0.29,13.08C0.11,12.9 0,12.65 0,12.38C0,12.1 0.11,11.85 0.29,11.67C3.34,8.77 7.46,7 12,7C16.54,7 20.66,8.77 23.71,11.67C23.89,11.85 24,12.1 24,12.38C24,12.65 23.89,12.9 23.71,13.08L21.23,15.56C21.05,15.74 20.8,15.86 20.5,15.86C20.25,15.86 20,15.75 19.82,15.57C19.03,14.84 18.14,14.21 17.16,13.72C16.83,13.56 16.6,13.22 16.6,12.82V9.72C15.15,9.25 13.6,9 12,9Z' />,\r\n    'CallEnd'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './CallSettingsVideoPreview.css';\r\n\r\nclass CallSettingsVideoPreview extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const { stream } = this.props;\r\n        if (stream) {\r\n            const video = document.getElementById('call-settings-video');\r\n            if (video) {\r\n                video.srcObject = stream;\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { stream } = this.props;\r\n        if (prevProps.stream !== stream) {\r\n            const video = document.getElementById('call-settings-video');\r\n            if (video) {\r\n                video.srcObject = stream;\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <video id='call-settings-video' autoPlay={true} muted={true}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCallSettingsVideoPreview.propTypes = {\r\n    stream: PropTypes.object\r\n};\r\n\r\nexport default CallSettingsVideoPreview;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getAmplitude } from '../../Calls/Utils';\r\nimport './GroupCallMicAmplitude.css';\r\n\r\nclass GroupCallMicAmplitude extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n        this.timer = null;\r\n\r\n        this.state = {\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { stream } = this.props;\r\n        if (stream) {\r\n            this.addAnalyser(stream);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { stream } = this.props;\r\n        if (stream) {\r\n            this.removeAnalyser(stream);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { stream } = this.props;\r\n        if (prevProps.stream !== stream) {\r\n            this.removeAnalyser(prevProps.stream);\r\n            this.addAnalyser(stream);\r\n        }\r\n    }\r\n\r\n    addAnalyser(stream) {\r\n        if (!stream) return;\r\n\r\n        const { audioContext } = this;\r\n        if (!audioContext) return;\r\n\r\n        this.streamSource = audioContext.createMediaStreamSource(stream);\r\n        if (!this.analyser) {\r\n            const analyser = audioContext.createAnalyser();\r\n            analyser.minDecibels = -100;\r\n            analyser.maxDecibels = -30;\r\n            analyser.smoothingTimeConstant = 0.05;\r\n            analyser.fftSize = 1024;\r\n\r\n            this.analyser = analyser;\r\n        }\r\n        this.streamSource.connect(this.analyser);\r\n\r\n        this.timer = setInterval(() => this.analyse(), 100);\r\n    }\r\n\r\n    removeAnalyser(stream) {\r\n        if (!stream) return;\r\n\r\n        if (this.analyser && this.streamSource) {\r\n            this.streamSource.disconnect(this.analyser);\r\n        }\r\n\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    analyse() {\r\n        const { analyser } = this;\r\n        if (!analyser) return;\r\n\r\n        const array = new Uint8Array(analyser.frequencyBinCount);\r\n        analyser.getByteFrequencyData(array);\r\n        const value = getAmplitude(array, 1.5);\r\n\r\n        this.setState({\r\n            value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n\r\n        let d = '';\r\n        for (let i = 0; i < 35; i++) {\r\n            const x = i * 8 + 1.5;\r\n            d += `M${x},0v15Z`;\r\n        }\r\n\r\n        const bars = (\r\n            <svg className='group-call-mic-amplitude-bars' viewBox='0 0 275 15'>\r\n                <path d={d} fill='currentColor' strokeWidth={3}/>\r\n            </svg>\r\n        );\r\n\r\n        return (\r\n            <div className='group-call-mic-amplitude'>\r\n                {bars}\r\n                <div className='group-call-mic-amplitude-bars-accent' style={{ width: 275 * value }}>\r\n                    {bars}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallMicAmplitude.propTypes = {\r\n    stream: PropTypes.object\r\n};\r\n\r\nexport default GroupCallMicAmplitude;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport async function copy(text) {\r\n    try {\r\n        if (navigator.clipboard) {\r\n            await navigator.clipboard.writeText(text);\r\n            return true;\r\n        }\r\n    } catch (e) {\r\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\r\n    }\r\n\r\n    return copyOld(text);\r\n}\r\n\r\nfunction copyOld(text) {\r\n    let element;\r\n    let successful;\r\n    try {\r\n        element = document.createElement('textarea');\r\n        element.contentEditable = true;\r\n        element.readOnly = true;\r\n        element.value = text;\r\n        element.style.all = 'unset';\r\n        element.style.position = 'fixed';\r\n        element.style.top = 0;\r\n        element.style.clip = 'rect(0, 0, 0, 0)';\r\n        element.style.whiteSpace = 'pre';\r\n        element.style.webkitUserSelect = 'text';\r\n        element.style.MozUserSelect = 'text';\r\n        element.style.msUserSelect = 'text';\r\n        element.style.userSelect = 'text';\r\n\r\n        document.body.appendChild(element);\r\n\r\n        element.focus();\r\n        element.select();\r\n\r\n        successful = document.execCommand('copy');\r\n        if (!successful) {\r\n            throw new Error();\r\n        }\r\n        return true;\r\n    } catch {\r\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\r\n    } finally {\r\n        if (element) {\r\n            document.body.removeChild(element);\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CallSettingsVideoPreview from './CallSettingsVideoPreview';\r\nimport GroupCallMicAmplitude from './GroupCallMicAmplitude';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { copy } from '../../Utils/Text';\r\nimport { canManageVoiceChats, getChatUsername } from '../../Utils/Chat';\r\nimport { getStream } from '../../Calls/Utils';\r\nimport { showSnackbar } from '../../Actions/Client';\r\nimport { stopPropagation } from '../../Utils/Message';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport './GroupCallSettings.css';\r\n\r\nclass GroupCallSettings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n\r\n        this.state = { };\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n                const { openDeviceSelect } = this.state;\r\n                if (openDeviceSelect) {\r\n                    this.handleCloseDeviceSelect();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n\r\n                this.handleCancel();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { groupCallId, callId } = props;\r\n        const { prevGroupCallId, prevCallId } = state;\r\n\r\n        if (prevGroupCallId !== groupCallId) {\r\n            const { devices } = CallStore;\r\n\r\n            const outputDeviceId = CallStore.getOutputDeviceId();\r\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\r\n\r\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\r\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\r\n\r\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\r\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\r\n\r\n            let muteSettings = { };\r\n            const groupCall = CallStore.get(groupCallId);\r\n            if (groupCall) {\r\n                const {\r\n                    mute_new_participants: muteNewParticipants,\r\n                    allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\r\n                } = groupCall;\r\n\r\n                muteSettings = {\r\n                    muteNewParticipants,\r\n                    allowedChangeMuteNewParticipants\r\n                }\r\n            }\r\n\r\n            return {\r\n                prevGroupCallId: groupCallId,\r\n                devices,\r\n                outputDeviceId,\r\n                output,\r\n                inputAudioDeviceId,\r\n                inputAudio,\r\n                inputVideoDeviceId,\r\n                inputVideo,\r\n                ...muteSettings\r\n            };\r\n        } else if (prevCallId !== callId) {\r\n            const { devices } = CallStore;\r\n\r\n            const outputDeviceId = CallStore.getOutputDeviceId();\r\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\r\n\r\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\r\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\r\n\r\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\r\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\r\n\r\n            return {\r\n                prevCallId: callId,\r\n                devices,\r\n                outputDeviceId,\r\n                output,\r\n                inputAudioDeviceId,\r\n                inputAudio,\r\n                inputVideoDeviceId,\r\n                inputVideo\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleSelectDevice('inputAudio', CallStore.getInputAudioDeviceId());\r\n        this.handleSelectDevice('inputVideo', CallStore.getInputVideoDeviceId());\r\n        navigator.mediaDevices.addEventListener('devicechange', this.onDeviceChange);\r\n        // navigator.permissions.addEventListener('onchange', this.onDeviceChange);\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        navigator.mediaDevices.removeEventListener('devicechange', this.onDeviceChange);\r\n        // navigator.permissions.removeEventListener('onchange', this.onDeviceChange);\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n\r\n        this.closeStreams();\r\n    }\r\n\r\n    closeStreams() {\r\n        const { inputAudioStream, inputAudioDeviceId, inputVideoStream, inputVideoDeviceId } = this.state;\r\n        if (inputAudioStream) {\r\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputAudioDeviceId === CallStore.getInputAudioDeviceId()) {\r\n                inputAudioStream.getAudioTracks().forEach(x => {\r\n                    x.stop();\r\n                });\r\n            }\r\n        }\r\n\r\n        if (inputVideoStream) {\r\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputVideoDeviceId === CallStore.getInputVideoDeviceId()) {\r\n                inputVideoStream.getVideoTracks().forEach(x => {\r\n                    x.stop();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { groupCallId } = this.props;\r\n        const { group_call } = update;\r\n        if (!group_call) return;\r\n\r\n        const {\r\n            id,\r\n            mute_new_participants: muteNewParticipants,\r\n            allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\r\n        } = group_call;\r\n        if (id !== groupCallId) return;\r\n\r\n        this.setState({\r\n            muteNewParticipants,\r\n            allowedChangeMuteNewParticipants\r\n        });\r\n    };\r\n\r\n    onDeviceChange = async () => {\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        CallStore.devices = devices;\r\n\r\n        const outputDeviceId = CallStore.getOutputDeviceId();\r\n        const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\r\n\r\n        const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\r\n        const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\r\n\r\n        const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\r\n        const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\r\n\r\n        this.setState({\r\n            devices,\r\n            outputDeviceId,\r\n            output,\r\n            inputAudioDeviceId,\r\n            inputAudio,\r\n            inputVideoDeviceId,\r\n            inputVideo\r\n        });\r\n    };\r\n\r\n    handleOutputChange = event => {\r\n        const outputDeviceId = event.target.value;\r\n\r\n        this.setState({ outputDeviceId });\r\n    }\r\n\r\n    handleCopyLink = () => {\r\n        const { t } = this.props;\r\n        const { currentGroupCall } = CallStore;\r\n\r\n        const username = getChatUsername(currentGroupCall ? currentGroupCall.chatId : 0);\r\n        if (!username) return;\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\r\n\r\n        copy(usernameLink + username);\r\n        showSnackbar(t('LinkCopied'), closeSnackbar => snackKey => {\r\n            return (\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => { closeSnackbar(snackKey); }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            )\r\n        });\r\n    };\r\n\r\n    handleOpenDeviceSelect = async type => {\r\n        switch (type) {\r\n            case 'inputAudio': {\r\n                const { inputAudio } = this.state;\r\n                if (!inputAudio.length) {\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n            case 'output': {\r\n                const { output } = this.state;\r\n                if (!output.length) {\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            openDeviceSelect: { type }\r\n        });\r\n    };\r\n\r\n    handleCloseDeviceSelect = () => {\r\n        this.setState({\r\n            openDeviceSelect: null\r\n        });\r\n    };\r\n\r\n    handleSelectDevice = async (type, deviceId) => {\r\n        this.handleCloseDeviceSelect();\r\n\r\n        switch (type) {\r\n            case 'output': {\r\n                CallStore.setOutputDeviceId(deviceId);\r\n                this.setState({\r\n                    outputDeviceId: deviceId\r\n                });\r\n                break;\r\n            }\r\n            case 'inputAudio': {\r\n                const { currentGroupCall, currentCall } = CallStore;\r\n                if (currentGroupCall) {\r\n                    const { streamManager } = currentGroupCall;\r\n                    if (!streamManager) return;\r\n\r\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\r\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\r\n\r\n                    if (inputAudioStream) {\r\n                        inputAudioStream.getAudioTracks().forEach(t => {\r\n                            t.stop()\r\n                        });\r\n                    }\r\n\r\n                    const stream = await getStream({\r\n                        audio: { deviceId: { exact: deviceId } },\r\n                        video: false\r\n                    });\r\n\r\n                    this.setState({\r\n                        inputAudioDeviceId: deviceId,\r\n                        inputAudioStream: stream\r\n                    });\r\n                } else if (currentCall) {\r\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\r\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\r\n\r\n                    if (inputAudioStream) {\r\n                        inputAudioStream.getAudioTracks().forEach(t => {\r\n                            t.stop()\r\n                        });\r\n                    }\r\n\r\n                    const stream = await getStream({\r\n                        audio: { deviceId: { exact: deviceId } },\r\n                        video: false\r\n                    });\r\n\r\n                    this.setState({\r\n                        inputAudioDeviceId: deviceId,\r\n                        inputAudioStream: stream\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case 'inputVideo': {\r\n                const { currentCall } = CallStore;\r\n                if (!currentCall) return;\r\n\r\n                const { inputVideoStream, inputVideoDeviceId } = this.state;\r\n\r\n                if (inputVideoDeviceId === deviceId && inputVideoStream) return;\r\n\r\n                if (inputVideoStream) {\r\n                    inputVideoStream.getVideoTracks().forEach(t => {\r\n                        t.stop()\r\n                    });\r\n                }\r\n\r\n                const stream = await getStream({\r\n                    audio: false,\r\n                    video: { deviceId: { exact: deviceId } }\r\n                });\r\n\r\n                this.setState({\r\n                    inputVideoDeviceId: deviceId,\r\n                    inputVideoStream: stream\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleEnd = () => {\r\n        const { currentGroupCall: call } = CallStore;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId } = call;\r\n\r\n        CallStore.leaveGroupCall(chatId, groupCallId, true);\r\n    };\r\n\r\n    handleMuteNewParticipants = () => {\r\n        const { groupCallId } = this.props;\r\n        const { muteNewParticipants } = this.state;\r\n\r\n        this.setState({\r\n            muteNewParticipants: !muteNewParticipants\r\n        });\r\n\r\n        CallStore.toggleMuteNewParticipants(groupCallId, !muteNewParticipants);\r\n    };\r\n\r\n    handleDone = async () => {\r\n        const { onClose } = this.props;\r\n        const { inputAudioDeviceId, inputAudioStream, inputVideoDeviceId, inputVideoStream } = this.state;\r\n\r\n        if (inputAudioStream && inputAudioDeviceId !== CallStore.getInputAudioDeviceId()) {\r\n            await CallStore.setInputAudioDeviceId(inputAudioDeviceId, inputAudioStream);\r\n        }\r\n\r\n        if (inputVideoStream && inputVideoDeviceId !== CallStore.getInputVideoDeviceId()) {\r\n            await CallStore.setInputVideoDeviceId(inputVideoDeviceId, inputVideoStream);\r\n        }\r\n\r\n        onClose && onClose();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose();\r\n    };\r\n\r\n    render() {\r\n        const { callId, t } = this.props;\r\n        const {\r\n            inputAudioDeviceId,\r\n            inputAudioStream,\r\n            inputAudio,\r\n            inputVideoDeviceId,\r\n            inputVideoStream,\r\n            inputVideo,\r\n            outputDeviceId,\r\n            output,\r\n            openDeviceSelect,\r\n            muteNewParticipants,\r\n            allowedChangeMuteNewParticipants\r\n        } = this.state;\r\n\r\n\r\n        const outputDeviceInfo = output.find(x => x.deviceId === outputDeviceId || !outputDeviceId && x.deviceId === 'default');\r\n        const outputString = !outputDeviceInfo || outputDeviceInfo.deviceId === 'default' || !outputDeviceInfo.deviceId || !outputDeviceInfo.label ? t('Default') : outputDeviceInfo.label;\r\n\r\n        const inputAudioDeviceInfo = inputAudio.find(x => x.deviceId === inputAudioDeviceId || !inputAudioDeviceId && x.deviceId === 'default');\r\n        const inputAudioString = !inputAudioDeviceInfo || inputAudioDeviceInfo.deviceId === 'default' || !inputAudioDeviceInfo.deviceId || !inputAudioDeviceInfo.label ? t('Default') : inputAudioDeviceInfo.label;\r\n\r\n        const inputVideoDeviceInfo = inputVideo.find(x => x.deviceId === inputVideoDeviceId || !inputVideoDeviceId && x.deviceId === 'default');\r\n        const inputVideoString = !inputVideoDeviceInfo || inputVideoDeviceInfo.deviceId === 'default' || !inputVideoDeviceInfo.deviceId || !inputVideoDeviceInfo.label ? t('Default') : inputVideoDeviceInfo.label;\r\n\r\n        const { currentGroupCall } = CallStore;\r\n        const chatId = currentGroupCall ? currentGroupCall.chatId : 0;\r\n\r\n        const username = getChatUsername(chatId);\r\n\r\n        if (openDeviceSelect) {\r\n            const { type } = openDeviceSelect;\r\n            let items = [];\r\n            let deviceId = null;\r\n            switch (type) {\r\n                case 'output': {\r\n                    items = output;\r\n                    deviceId = outputDeviceId;\r\n                    break;\r\n                }\r\n                case 'inputAudio': {\r\n                    items = inputAudio;\r\n                    deviceId = inputAudioDeviceId;\r\n                    break;\r\n                }\r\n                case 'inputVideo': {\r\n                    items = inputVideo;\r\n                    deviceId = inputVideoDeviceId;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return (\r\n                <div className='group-call-settings-device-select'>\r\n                    <div className='group-call-settings-panel'>\r\n                        <div className='group-call-settings-panel-header'>\r\n                            <div className='group-call-panel-caption'>\r\n                                <div className='group-call-title'>{type === 'output' ? t('OutputDevice') : t('InputDevice')}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='group-call-settings-panel-content'>\r\n                            {items.map(x => (\r\n                                <div key={x.deviceId} className='group-call-settings-panel-item' onClick={() => this.handleSelectDevice(type, x.deviceId)}>\r\n                                    <div className='group-call-settings-panel-item-title'>{x.label || t('Default')}</div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className='group-call-settings-panel-buttons'>\r\n                            <div className='group-call-settings-panel-done' onClick={this.handleCloseDeviceSelect}>\r\n                                {t('OK')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n\r\n        const canManage = canManageVoiceChats(chatId);\r\n        // console.log('[call][GroupCallSettings] render', muteNewParticipants, allowedChangeMuteNewParticipants);\r\n\r\n        return (\r\n            <div className='group-call-settings' onMouseDown={stopPropagation} onClick={this.handleCancel}>\r\n                <div className='group-call-settings-panel' onClick={stopPropagation}>\r\n                    <div className='group-call-settings-panel-header'>\r\n                        <div className='group-call-panel-caption'>\r\n                            <div className='group-call-title'>{t('Settings')}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='group-call-settings-panel-content'>\r\n                        { canManage && allowedChangeMuteNewParticipants && (\r\n                            <div className='group-call-settings-panel-item' onClick={this.handleMuteNewParticipants}>\r\n                                <div className='group-call-settings-panel-item-title'>{t('VoipGroupOnlyAdminsCanSpeak')}</div>\r\n                                <Switch\r\n                                    disableRipple\r\n                                    classes={{\r\n                                        root: 'group-call-settings-panel-switch-root',\r\n                                        switchBase: 'group-call-settings-panel-switch-base',\r\n                                        colorSecondary: 'group-call-settings-panel-switch-color-secondary',\r\n                                        checked: 'group-call-settings-panel-switch-checked',\r\n                                        track: 'group-call-settings-panel-switch-track'\r\n                                    }}\r\n                                    checked={muteNewParticipants}\r\n                                    onChange={this.handleMuteNewParticipants}/>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('output')}>\r\n                            <div className='group-call-settings-panel-item-title'>{t('Speaker')}</div>\r\n                            <div className='group-call-settings-panel-item-subtitle'>{outputString}</div>\r\n                        </div>\r\n\r\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputAudio')}>\r\n                            <div className='group-call-settings-panel-item-title'>{t('Microphone')}</div>\r\n                            <div className='group-call-settings-panel-item-subtitle'>{inputAudioString}</div>\r\n                        </div>\r\n\r\n                        <GroupCallMicAmplitude stream={inputAudioStream}/>\r\n\r\n                        { callId && (\r\n                            <>\r\n                                <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputVideo')}>\r\n                                    <div className='group-call-settings-panel-item-title'>{t('Camera')}</div>\r\n                                    <div className='group-call-settings-panel-item-subtitle'>{inputVideoString}</div>\r\n                                </div>\r\n                                <CallSettingsVideoPreview stream={inputVideoStream}/>\r\n                                {/*<div>*/}\r\n                                {/*    <video id='call-settings-video' autoPlay={true} muted={true}/>*/}\r\n                                {/*</div>*/}\r\n                            </>\r\n                        )}\r\n                        { username && (\r\n                            <div className='group-call-settings-panel-item' onClick={this.handleCopyLink}>\r\n                                {t('VoipGroupCopyInviteLink')}\r\n                            </div>\r\n                        )}\r\n                        { canManage && (\r\n                            <div className='group-call-settings-panel-item group-call-settings-panel-item-secondary' onClick={this.handleEnd}>\r\n                                {t('VoipGroupEndChat')}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className='group-call-settings-panel-buttons'>\r\n                        <div className='group-call-settings-panel-done' onClick={this.handleDone}>\r\n                            {t('Done')}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallSettings.propTypes = {\r\n    callId: PropTypes.number,\r\n    groupCallId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(GroupCallSettings);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\r\n    'More'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z' />,\r\n    'Mic'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,11C19,12.19 18.66,13.3 18.1,14.28L16.87,13.05C17.14,12.43 17.3,11.74 17.3,11H19M15,11.16L9,5.18V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V11L15,11.16M4.27,3L21,19.73L19.73,21L15.54,16.81C14.77,17.27 13.91,17.58 13,17.72V21H11V17.72C7.72,17.23 5,14.41 5,11H6.7C6.7,14 9.24,16.1 12,16.1C12.81,16.1 13.6,15.91 14.31,15.58L12.65,13.92L12,14A3,3 0 0,1 9,11V10.28L3,4.27L4.27,3Z' />,\r\n    'MicOff'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport VideocamIcon from '@material-ui/icons/VideocamOutlined';\r\nimport VideocamOffIcon from '@material-ui/icons/VideocamOffOutlined';\r\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport GroupCallSettings from './GroupCallSettings';\r\nimport MenuIcon from '../../Assets/Icons/More';\r\nimport MicIcon from '../../Assets/Icons/Mic';\r\nimport MicOffIcon from '../../Assets/Icons/MicOff';\r\nimport { closeCallPanel } from '../../Actions/Call';\r\nimport { isFirefox } from '../../Calls/P2P/P2PSdpBuilder';\r\nimport { p2pGetCallStatus, p2pIsCallReady } from '../../Calls/Utils';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport { stopPropagation } from '../../Utils/Message';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './CallPanel.css';\r\n\r\nconst SUPPORTS_ROTATION = true;\r\n\r\nclass CallPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.callPanelRef = React.createRef();\r\n\r\n        const { callId } = props;\r\n\r\n        this.state = {\r\n            openSettings: false,\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0,\r\n            fullScreen: false,\r\n\r\n            inputMediaState: CallStore.p2pGetMediaState(callId, 'input'),\r\n            outputMediaState: CallStore.p2pGetMediaState(callId, 'output')\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const callPanel = this.callPanelRef.current;\r\n        if (callPanel) {\r\n            const prefixes = ['', 'moz', 'webkit', 'ms']\r\n            prefixes.forEach(x => {\r\n                callPanel.addEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\r\n            });\r\n        }\r\n\r\n        CallStore.on('updateCall', this.handleUpdateCall);\r\n        CallStore.on('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const callPanel = this.callPanelRef.current;\r\n        if (callPanel) {\r\n            const prefixes = ['', 'moz', 'webkit', 'ms']\r\n            prefixes.forEach(x => {\r\n                callPanel.removeEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\r\n            });\r\n        }\r\n\r\n        CallStore.off('updateCall', this.handleUpdateCall);\r\n        CallStore.off('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\r\n    }\r\n\r\n    onClientUpdateCallMediaState = update => {\r\n        const { callId: currentCallId } = this.props;\r\n        const { callId, mediaState, type } = update;\r\n        if (callId !== currentCallId) return;\r\n\r\n        if (type === 'input') {\r\n            this.setState({ inputMediaState: mediaState });\r\n        } else {\r\n            this.setState({ outputMediaState: mediaState });\r\n        }\r\n    };\r\n\r\n    handleUpdateCall = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleFullScreenChange = () => {\r\n        this.setState({\r\n            fullScreen: this.isFullScreen()\r\n        });\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.handleClose();\r\n    }\r\n\r\n    handleAccept = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { callId } = this.props;\r\n        if (!callId) return;\r\n\r\n        await CallStore.p2pAcceptCall(callId);\r\n    };\r\n\r\n    handleDiscard = async event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { callId } = this.props;\r\n        if (!callId) return;\r\n\r\n        closeCallPanel();\r\n        setTimeout(() => {\r\n            CallStore.p2pHangUp(callId, true);\r\n        }, 100);\r\n    };\r\n\r\n    handleOpenSettings = async event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\r\n\r\n        this.setState({\r\n            openSettings: true\r\n        });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        this.setState({\r\n            openSettings: false\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        if (this.isFullScreen()) {\r\n            this.exitFullscreen();\r\n            return;\r\n        }\r\n\r\n        this.handleDiscard(null);\r\n    };\r\n\r\n    handleShareScreen = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { currentCall } = CallStore;\r\n        if (!currentCall) return;\r\n\r\n        const { screenStream } = currentCall;\r\n        if (screenStream) {\r\n            CallStore.p2pStopScreenSharing();\r\n        } else {\r\n            CallStore.p2pStartScreenSharing();\r\n        }\r\n    };\r\n\r\n    handleFullScreen = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        setTimeout(() => {\r\n            if (this.isFullScreen()) {\r\n                this.exitFullscreen();\r\n                return;\r\n            }\r\n\r\n            this.requestFullscreen();\r\n        }, 250);\r\n    }\r\n\r\n    isFullScreen() {\r\n        const callPanel = this.callPanelRef.current;\r\n        if (!callPanel) return false;\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        return fullscreenElement === callPanel;\r\n    }\r\n\r\n    requestFullscreen() {\r\n        const callPanel = this.callPanelRef.current;\r\n        if (!callPanel) return false;\r\n\r\n        const method = callPanel.requestFullscreen || callPanel.mozRequestFullScreen || callPanel.webkitRequestFullscreen;\r\n\r\n        method && method.call(callPanel);\r\n    }\r\n\r\n    exitFullscreen() {\r\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\r\n\r\n        method && method.call(document);\r\n    }\r\n\r\n    handleOpenContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { currentTarget } = event;\r\n\r\n        const { userId } = this.props;\r\n        if (userId === UserStore.getMyId()) return;\r\n\r\n        const { anchorEl } = this.state;\r\n\r\n        if (anchorEl) {\r\n            this.setState({ anchorEl: null });\r\n        } else {\r\n            this.setState({\r\n                anchorEl: currentTarget\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleAudio = () => {\r\n        const { inputMediaState } = this.state;\r\n        if (!inputMediaState) return;\r\n\r\n        const { muted } = inputMediaState;\r\n\r\n        CallStore.p2pAudioEnabled(muted);\r\n    };\r\n\r\n    handleVideo = () => {\r\n        const { inputMediaState } = this.state;\r\n        if (!inputMediaState) return;\r\n\r\n        const muted = inputMediaState.videoState === 'inactive';\r\n\r\n        CallStore.p2pVideoEnabled(muted)\r\n    };\r\n\r\n    render() {\r\n        const { callId, t } = this.props;\r\n        const { openSettings, anchorEl, fullScreen, inputMediaState, outputMediaState } = this.state;\r\n        const { currentCall } = CallStore;\r\n\r\n        const call = CallStore.p2pGet(callId);\r\n        if (!call) return null;\r\n\r\n        const { user_id: userId, is_outgoing, state } = call;\r\n\r\n        let screenSharing = currentCall && Boolean(currentCall.screenStream);\r\n\r\n        let outputVideoStyle = null;\r\n        if (SUPPORTS_ROTATION && outputMediaState && isFirefox() && !is_outgoing) {\r\n            outputVideoStyle = {\r\n                transform: `rotate(${outputMediaState.videoRotation}deg)`\r\n            };\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('group-call-panel', { 'full-screen': fullScreen })} ref={this.callPanelRef}>\r\n                <div className='group-call-panel-header'>\r\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </div>\r\n                    <div className='group-call-panel-caption' onMouseDown={stopPropagation} onClick={stopPropagation}>\r\n                        <div className='group-call-title'>{getUserFullName(userId, null)}</div>\r\n                        <div className='group-call-join-panel-subtitle'>\r\n                            {p2pGetCallStatus(callId)}\r\n                        </div>\r\n                    </div>\r\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleOpenContextMenu}>\r\n                        <MenuIcon />\r\n                    </div>\r\n                    <Popover\r\n                        container={this.callPanelRef.current}\r\n                        classes={{\r\n                            paper: 'group-call-participant-menu-root'\r\n                        }}\r\n                        anchorEl={anchorEl}\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={this.handleCloseContextMenu}\r\n                        getContentAnchorEl={null}\r\n                        disableRestoreFocus={true}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right'\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right'\r\n                        }}\r\n                        onMouseDown={e => e.stopPropagation()}>\r\n                        <MenuList onClick={e => e.stopPropagation()}>\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleOpenSettings}>\r\n                                <ListItemText primary={t('Settings')} />\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleFullScreen}>\r\n                                <ListItemText primary={fullScreen ? t('ExitFullScreen') : t('EnterFullScreen')} />\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleShareScreen}>\r\n                                <ListItemText primary={screenSharing ? t('StopScreenSharing') : t('StartScreenSharing')} />\r\n                            </MenuItem>\r\n                        </MenuList>\r\n                    </Popover>\r\n                </div>\r\n                <div className='call-panel-content scrollbars-hidden' onDoubleClick={this.handleFullScreen}>\r\n                    <video id='call-output-video' style={outputVideoStyle} className={outputMediaState && outputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={false}/>\r\n                    <video id='call-input-video' className={inputMediaState && inputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={true}/>\r\n                </div>\r\n                { outputMediaState && outputMediaState.muted && (\r\n                    <div className='call-panel-microphone-hint'>\r\n                        <div className='call-panel-microphone-hint-wrapper'>\r\n                            <MicOffIcon/>\r\n                            <div className='call-panel-microphone-hint-text'>\r\n                                {LStore.formatString('VoipUserMicrophoneIsOff', getUserFullName(userId, null))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div className='group-call-panel-buttons'>\r\n                    <div className='group-call-panel-button'>\r\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleVideo}>\r\n                            {inputMediaState && inputMediaState.videoState === 'active' ? <VideocamIcon/> : <VideocamOffIcon/>}\r\n                        </div>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {inputMediaState && inputMediaState.videoState === 'active' ? t('VoipStopVideo') : t('VoipStartVideo')}\r\n                        </div>\r\n                    </div>\r\n                    <div className='group-call-panel-button'>\r\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleDiscard}>\r\n                            <CallEndIcon />\r\n                        </div>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {(p2pIsCallReady(callId) || is_outgoing) ? t('VoipEndCall') : t('VoipDeclineCall')}\r\n                        </div>\r\n                    </div>\r\n                    {!is_outgoing && state['@type'] === 'callStatePending' && (\r\n                        <div className='group-call-panel-button'>\r\n                            <div className='group-call-panel-button-answer' onMouseDown={stopPropagation} onClick={this.handleAccept}>\r\n                                <CallIcon />\r\n                            </div>\r\n                            <div className='group-call-panel-button-text'>\r\n                                {t('VoipAnswerCall')}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <div className='group-call-panel-button'>\r\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleAudio}>\r\n                            {inputMediaState && !inputMediaState.muted ? <MicIcon/> : <MicOffIcon/>}\r\n                        </div>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {inputMediaState && !inputMediaState.muted ? t('Mute') : t('Unmute')}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {openSettings && <GroupCallSettings callId={callId} onClose={this.handleCloseSettings}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCallPanel.propTypes = {\r\n    callId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(CallPanel);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CallPanel from './CallPanel';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { clamp } from '../../Utils/Common';\r\nimport { closeGroupCallPanel } from '../../Actions/Call';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport './GroupCall.css';\r\n\r\nclass Call extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n\r\n        this.state = {\r\n            fullScreen: false\r\n        };\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setPosition();\r\n\r\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        window.addEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n    onClientUpdateGroupCallFullScreen = update => {\r\n        const { fullscreen } = update;\r\n\r\n        this.setState({ fullscreen });\r\n    };\r\n\r\n    handleClose = () => {\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        const element = document.getElementById('call');\r\n        if (element) element.focus();\r\n\r\n        this.mouseDownRoot = true;\r\n        event.preventDefault();\r\n\r\n        this.left = parseInt(element.style.left, 10);\r\n        this.top = parseInt(element.style.top, 10);\r\n        this.pageX = event.nativeEvent.pageX;\r\n        this.pageY = event.nativeEvent.pageY;\r\n\r\n        document.onmousemove = this.handleMouseMove;\r\n        document.onmouseup = this.handleMouseUp;\r\n\r\n        this.windowDragging = true;\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) return;\r\n\r\n        const player = document.getElementById('call');\r\n\r\n        const oldLeft = parseInt(player.style.left, 10);\r\n        const oldTop = parseInt(player.style.top, 10);\r\n\r\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\r\n\r\n        if (oldLeft === left && oldTop === top) return;\r\n\r\n        // console.log('[pip] windowResize', left, top);\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseMove = event => {\r\n        event.preventDefault();\r\n\r\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\r\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\r\n\r\n        const element = document.getElementById('call');\r\n        element.style.left = left + 'px';\r\n        element.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseUp = event => {\r\n        event.preventDefault();\r\n\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n\r\n        this.windowDragging = false;\r\n    };\r\n\r\n    setPosition() {\r\n        const element = document.getElementById('call');\r\n        let { pipParams } = CallStore;\r\n        if (!pipParams) {\r\n            pipParams = {\r\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\r\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\r\n            }\r\n        }\r\n\r\n        const { left: prevLeft, top: prevTop } = pipParams;\r\n\r\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\r\n\r\n        element.style.left = left + 'px';\r\n        element.style.top = top + 'px';\r\n    }\r\n\r\n    normalizePosition(left, top, checkGlue = true) {\r\n        const player = document.getElementById('call');\r\n        const playerWidth = player ? player.clientWidth : 300;\r\n        const playerHeight = player ? player.clientHeight : 300;\r\n\r\n        const { clientWidth: documentWidth } = document.documentElement;\r\n        const { clientHeight: documentHeight } = document.documentElement;\r\n\r\n        if (checkGlue && this.glueLeft) {\r\n            left = 0;\r\n        } else if (checkGlue && this.glueRight) {\r\n            left = documentWidth - playerWidth;\r\n        } else {\r\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\r\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\r\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\r\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\r\n            left = clamp(left, 0, documentWidth - playerWidth);\r\n        }\r\n\r\n        if (checkGlue && this.glueTop) {\r\n            top = 0;\r\n        } else if (checkGlue && this.glueBottom) {\r\n            top = documentHeight - playerHeight;\r\n        } else {\r\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\r\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\r\n            top = clamp(top, 0, documentHeight - playerHeight);\r\n        }\r\n\r\n        this.glueLeft = left === 0;\r\n        this.glueRight = left === documentWidth - playerWidth;\r\n        this.glueTop = top === 0;\r\n        this.glueBottom = top === documentHeight - playerHeight;\r\n\r\n        CallStore.pipParams = { left, top };\r\n\r\n        return { left, top };\r\n    }\r\n\r\n    render() {\r\n        const { callId } = this.props;\r\n        const { fullscreen } = this.state;\r\n\r\n        return (\r\n            <div\r\n                id='call'\r\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\r\n                onMouseDown={this.handleMouseDown}\r\n            >\r\n                <CallPanel callId={callId}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCall.propTypes = {\r\n    callId: PropTypes.number\r\n};\r\n\r\nexport default Call;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\r\n    'Document2'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\r\n    'SharedMedia'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\r\n    'Verified'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\r\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogTitle.css';\r\n\r\nclass DialogTitle extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, showSavedMessages } = this.props;\r\n\r\n        const isVerified = isChatVerified(chatId);\r\n        const title = getChatTitle(chatId, showSavedMessages, t);\r\n\r\n        return (\r\n            <div className='dialog-title'>\r\n                <span className='dialog-title-span'>{title}</span>\r\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogTitle.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nDialogTitle.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(DialogTitle);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './DialogStatus.css';\r\n\r\nclass DialogStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                subtitle: getChatSubtitleWithoutTyping(chatId),\r\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.subtitle !== subtitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isAccent !== isAccent) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        let updateSubtitle = false;\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        updateSubtitle = true;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (updateSubtitle) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    updateSubtitle = chatId => {\r\n        this.setState({\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n        });\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (\r\n            type &&\r\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\r\n            type.user_id === update.user_id\r\n        ) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { subtitle: externalSubtitle } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        return (\r\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\r\n                {externalSubtitle ? externalSubtitle + ', ' : null}\r\n                {subtitle}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogStatus;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogStatus from './DialogStatus';\r\nimport { isMeChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './Chat.css';\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n        this.state = {\r\n            chat: ChatStore.get(chatId)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.chatId !== this.props.chatId;\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { chatId, onSelect } = this.props;\r\n        if (!onSelect) return;\r\n\r\n        onSelect(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\r\n\r\n        const isSavedMessages = isMeChat(chatId);\r\n\r\n        return (\r\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\r\n                <div className='chat-wrapper'>\r\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\r\n                    {showTitle && (\r\n                        <div className='chat-inner-wrapper'>\r\n                            <div className='tile-first-row'>\r\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\r\n                            </div>\r\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\r\n                                <div className='tile-second-row'>\r\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    subtitle: PropTypes.string,\r\n    showSavedMessages: PropTypes.bool,\r\n    showStatus: PropTypes.bool,\r\n    showTitle: PropTypes.bool,\r\n    onSelect: PropTypes.func,\r\n    onTileSelect: PropTypes.func\r\n};\r\n\r\nChat.defaultProps = {\r\n    showSavedMessages: true,\r\n    showStatus: true,\r\n    showTitle: true\r\n};\r\n\r\nexport default Chat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\r\n    'Back'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport './ChatDetailsHeader.css';\r\n\r\nclass ChatDetailsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, t, backButton, onClick, onClose } = this.props;\r\n\r\n        let info = t('ChatInfo');\r\n        if (isPrivateChat(chatId)) {\r\n            info = t('Info');\r\n        } else if (isChannelChat(chatId)) {\r\n            info = t('ChannelInfo');\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {backButton && (\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                )}\r\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                    <span className='header-status-content'>{info}</span>\r\n                </div>\r\n                {!backButton && (\r\n                    <IconButton className='header-right-button' onClick={onClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(ChatDetailsHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { isChatMuted } from '../../Utils/Chat';\r\nimport { debounce } from '../../Utils/Common';\r\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\r\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport NotificationStore from '../../Stores/NotificationStore';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            isMuted: isChatMuted(chatId)\r\n        };\r\n\r\n        this.debouncedSetChatNotificationSettings = debounce(\r\n            this.setChatNotificationSettings,\r\n            NOTIFICATION_DEBOUNCE_DELAY_MS\r\n        );\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                isMuted: isChatMuted(chatId)\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onUpdateChatNotificationSettings = update => {\r\n        const { chat_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (!chat_id) return;\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({ isMuted: isChatMuted(chatId) });\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.setState({ isMuted: isChatMuted(chatId) });\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.setState({ isMuted: isChatMuted(chatId) });\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSetChatNotifications = () => {\r\n        this.setState({ isMuted: !this.state.isMuted });\r\n        this.debouncedSetChatNotificationSettings();\r\n    };\r\n\r\n    setChatNotificationSettings = () => {\r\n        const { chatId } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        toggleChatNotificationSettings(chatId, isMuted);\r\n    };\r\n}\r\n\r\nexport default Notifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Notifications from '../ColumnMiddle/Notifications';\r\nimport './NotificationsListItem.css';\r\n\r\nclass NotificationsListItem extends Notifications {\r\n    render() {\r\n        const { t } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        return (\r\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\r\n                <ListItemIcon>\r\n                    <Checkbox\r\n                        className='notifications-checkbox'\r\n                        edge='start'\r\n                        checked={!isMuted}\r\n                        color='primary'\r\n                        tabIndex={-1}\r\n                        disableRipple\r\n                        onChange={this.handleSetChatNotifications}\r\n                    />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                    primary={\r\n                        <Typography variant='inherit' noWrap>\r\n                            {t('Notifications')}\r\n                        </Typography>\r\n                    }\r\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\r\n                />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NotificationsListItem);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Animator from '../../../Utils/Animatior';\r\nimport { clamp, throttle } from '../../../Utils/Common';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaTabs.css';\r\n\r\nclass SharedMediaTabs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.filterRef = new Map();\r\n        this.filtersRef = React.createRef();\r\n        this.filterSelectionRef = React.createRef();\r\n\r\n        this.state = { }\r\n\r\n        this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n\r\n        if (chatId !== state.prevChatId) {\r\n            const media = MessageStore.getMedia(props.chatId);\r\n\r\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\r\n            const photoAndVideo = media ? media.photoAndVideo : [];\r\n            const document = media ? media.document : [];\r\n            const audio = media ? media.audio : [];\r\n            const url = media ? media.url : [];\r\n            const voiceNote = media ? media.voiceNote : [];\r\n            const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n            let selectedIndex = -1;\r\n            if (members.length > 0) {\r\n                selectedIndex = 0;\r\n            } else if (photoAndVideo.length > 0) {\r\n                selectedIndex = 1;\r\n            } else if (document.length > 0) {\r\n                selectedIndex = 2;\r\n            } else if (audio.length > 0) {\r\n                selectedIndex = 3;\r\n            } else if (url.length > 0) {\r\n                selectedIndex = 4;\r\n            } else if (voiceNote.length > 0) {\r\n                selectedIndex = 5;\r\n            } else if (groupsInCommon.length > 0) {\r\n                selectedIndex = 6;\r\n            }\r\n\r\n            return {\r\n                prevChatId: props.chatId,\r\n                selectedIndex,\r\n                members,\r\n                photoAndVideo,\r\n                document,\r\n                audio,\r\n                url,\r\n                voiceNote,\r\n                groupsInCommon,\r\n                isSmallWidth: false\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.observeResize();\r\n        this.setSelection();\r\n\r\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.unobserveResize();\r\n        this.observeResize();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unobserveResize();\r\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    hasObserver = () => {\r\n        return 'ResizeObserver' in window;\r\n    };\r\n\r\n    observeResize() {\r\n        if (!this.hasObserver()) return;\r\n        const filters = this.filtersRef.current;\r\n        if (!filters) return;\r\n\r\n        const observer = new ResizeObserver(this.onWindowResize);\r\n        observer.observe(filters);\r\n\r\n        this.resizeObserver = { observer, filters }\r\n    }\r\n\r\n    unobserveResize() {\r\n        if (!this.hasObserver()) return;\r\n        if (!this.resizeObserver) return;\r\n\r\n        const { observer, filters } = this.resizeObserver;\r\n        if (!observer) return;\r\n        if (!filters) return;\r\n\r\n        observer.unobserve(filters);\r\n    }\r\n\r\n    onWindowResize = () => {\r\n        this.setSelection(true);\r\n    };\r\n\r\n    setMediaState = (media, selectedIndex) => {\r\n        const { chatId } = this.props;\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        const hasMembers = members.length > 0;\r\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\r\n        const hasDocument = document.length > 0;\r\n        const hasAudio = audio.length > 0;\r\n        const hasUrl = url.length > 0;\r\n        const hasVoiceNote = voiceNote.length > 0;\r\n        const hasGroupsInCommon = groupsInCommon.length > 0;\r\n\r\n        const replaceSelectedIndex =\r\n            selectedIndex === -1\r\n            || selectedIndex === 0 && !hasMembers\r\n            || selectedIndex === 1 && !hasPhotoAndVideo\r\n            || selectedIndex === 2 && !hasDocument\r\n            || selectedIndex === 3 && !hasAudio\r\n            || selectedIndex === 4 && !hasUrl\r\n            || selectedIndex === 5 && !hasVoiceNote\r\n            || selectedIndex === 6 && !hasGroupsInCommon;\r\n        if (replaceSelectedIndex) {\r\n            if (hasMembers) {\r\n                selectedIndex = 0;\r\n            } else if (hasPhotoAndVideo) {\r\n                selectedIndex = 1;\r\n            } else if (hasDocument) {\r\n                selectedIndex = 2;\r\n            } else if (hasAudio) {\r\n                selectedIndex = 3;\r\n            } else if (hasUrl) {\r\n                selectedIndex = 4;\r\n            } else if (hasVoiceNote) {\r\n                selectedIndex = 5;\r\n            } else if (hasGroupsInCommon) {\r\n                selectedIndex = 6;\r\n            }\r\n\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaTab',\r\n                chatId,\r\n                index: selectedIndex\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    }\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chatId, media } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onClientUpdateMediaTab = update => {\r\n        const { chatId, index } = update;\r\n        if (chatId !== this.props.chatId) return;\r\n\r\n        this.setState({\r\n            selectedIndex: index\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    };\r\n\r\n    setSelection = (transition = true) => {\r\n        const { selectedIndex, isSmallWidth } = this.state;\r\n        if (selectedIndex === -1) return;\r\n\r\n        const padding = 3;\r\n\r\n        const scroll = this.filtersRef.current;\r\n\r\n        let item = null;\r\n        let left = 0;\r\n        const membersFilter = this.filterRef.get('members');\r\n        if (selectedIndex === 0 && membersFilter) {\r\n            item = membersFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\r\n        if (selectedIndex === 1 && photoAndVideoFilter) {\r\n            item = photoAndVideoFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const documentFilter = this.filterRef.get('document');\r\n        if (selectedIndex === 2 && documentFilter) {\r\n            item = documentFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const audioFilter = this.filterRef.get('audio');\r\n        if (selectedIndex === 3 && audioFilter) {\r\n            item = audioFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const urlFilter = this.filterRef.get('url');\r\n        if (selectedIndex === 4 && urlFilter) {\r\n            item = urlFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\r\n        if (selectedIndex === 5 && voiceNoteFilter) {\r\n            item = voiceNoteFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\r\n        if (selectedIndex === 6 && groupsInCommonFilter) {\r\n            item = groupsInCommonFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        if (!item) return;\r\n\r\n        const filterSelection = this.filterSelectionRef.current;\r\n        if (filterSelection) {\r\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\r\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\r\n        }\r\n\r\n        if (item && transition){\r\n            const { animator } = this;\r\n\r\n            if (animator) {\r\n                animator.stop();\r\n            }\r\n\r\n            this.animator = new Animator(250, [\r\n                {\r\n                    from: scroll.scrollLeft,\r\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\r\n                    func: left => (scroll.scrollLeft = left)\r\n                }\r\n            ]);\r\n\r\n            setTimeout(() => {\r\n                if (!this.animator) return;\r\n\r\n                this.animator.start();\r\n            }, 0);\r\n\r\n\r\n            // item.scrollIntoView();\r\n        }\r\n    };\r\n\r\n    handleFilterClick = (event, id) => {\r\n        if (event && event.button !== 0) return;\r\n        const { chatId, onClick } = this.props;\r\n\r\n        onClick && onClick(event);\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTab',\r\n            chatId,\r\n            index: id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\r\n\r\n        const tabsCount =\r\n            (members.length > 0 ? 1 : 0) +\r\n            (photoAndVideo.length > 0 ? 1 : 0) +\r\n            (document.length > 0 ? 1 : 0) +\r\n            (audio.length > 0 ? 1 : 0) +\r\n            (url.length > 0 ? 1 : 0) +\r\n            (voiceNote.length > 0 ? 1 : 0) +\r\n            (groupsInCommon.length > 0 ? 1 : 0);\r\n\r\n        const hasSharedMedia =\r\n            members.length > 0\r\n            || photoAndVideo.length > 0\r\n            || document.length > 0\r\n            || audio.length > 0\r\n            || url.length > 0\r\n            || voiceNote.length > 0\r\n            || groupsInCommon.length > 0;\r\n\r\n        if (!hasSharedMedia) {\r\n            return null;\r\n        }\r\n\r\n        this.filterRef = new Map();\r\n        return (\r\n            <div className={classNames('tabs', 'shared-media-tabs')}>\r\n                <div className='tabs-bottom-border'/>\r\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\r\n                    {members.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('members', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\r\n                            <span>{t('GroupMembers')}</span>\r\n                        </div>\r\n                    )}\r\n                    {photoAndVideo.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\r\n                            <span>{t('SharedMediaTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {document.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('document', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\r\n                            <span>{t('SharedFilesTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {audio.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('audio', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\r\n                            <span>{t('SharedMusicTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {url.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('url', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\r\n                            <span>{t('SharedLinksTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {voiceNote.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('voiceNote', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\r\n                            <span>{t('SharedVoiceTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {groupsInCommon.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\r\n                            <span>{t('SharedGroupsTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSharedMediaTabs.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedMediaTabs);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\r\n    'Delete'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\r\n    'Share'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport DeleteIcon from '../../../Assets/Icons/Delete';\r\nimport ShareIcon from '../../../Assets/Icons/Share';\r\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './ContextMenu.css';\r\n\r\nclass ContextMenu extends React.Component {\r\n    handleOpenMessage = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        openChat(chatId, messageId);\r\n    };\r\n\r\n    handleForward = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        forwardMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        deleteMessages(chatId, [messageId]);\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n\r\n        return (\r\n            <Popover\r\n                open={open}\r\n                onClose={onClose}\r\n                anchorReference='anchorPosition'\r\n                anchorPosition={anchorPosition}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n                onMouseDown={e => e.stopPropagation()}\r\n                onClick={e => e.stopPropagation()}>\r\n                <MenuList>\r\n                    {showOpenMessage && (\r\n                        <MenuItem onClick={this.handleOpenMessage}>\r\n                            <ListItemIcon>\r\n                                <ChatBubbleOutlineOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('GoToMessage')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {can_be_forwarded && (\r\n                        <MenuItem onClick={this.handleForward}>\r\n                            <ListItemIcon>\r\n                                <ShareIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Forward')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\r\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </MenuList>\r\n            </Popover>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nContextMenu.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    anchorPosition: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    showOpenMessage: PropTypes.bool\r\n};\r\n\r\nexport default withTranslation()(ContextMenu);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContextMenu from './ContextMenu';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedPhoto.css';\r\n\r\nclass SharedPhoto extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { photo, size, thumbnailSize } = props;\r\n        const { prevPhoto } = state;\r\n        if (photo !== prevPhoto) {\r\n            return {\r\n                prevPhoto: photo,\r\n\r\n                contextMenu: false,\r\n                left: 0,\r\n                top: 0,\r\n\r\n                photoSize: getSize(photo.sizes, size),\r\n                thumbSize: getSize(photo.sizes, thumbnailSize),\r\n                minithumbnail: photo.minithumbnail\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (photo !== nextProps.photo) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { photoSize, thumbSize } = this.state;\r\n        const { fileId } = update;\r\n\r\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\r\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\r\n\r\n        if (!photoSize) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\r\n        const src = getSrc(photoSize.photo);\r\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\r\n                        {src !== thumbSrc && (\r\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedPhoto.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nSharedPhoto.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\r\n};\r\n\r\nexport default SharedPhoto;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ContextMenu from './ContextMenu';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport { getMedia } from '../../../Utils/Media';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedDocument.css';\r\n\r\nclass SharedDocument extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { date } = message;\r\n\r\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            hour12: false\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\r\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedDocument.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    showOpenMessage: PropTypes.bool\r\n};\r\n\r\nexport default withTranslation()(SharedDocument);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { hasVideoNote } from '../../../Utils/Message';\r\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedLinkTile.css';\r\n\r\nclass SharedLinkTile extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { thumbnail } = this.props;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.file || thumbnail.photo;\r\n        if (!file) return;\r\n\r\n        if (update.fileId === file.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\r\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\r\n        const isVideoNote = hasVideoNote(chatId, messageId);\r\n        const hasSrc = Boolean(src || miniSrc);\r\n\r\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\r\n\r\n        return (\r\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\r\n                {hasSrc? (\r\n                    <img\r\n                        className={classNames(\r\n                            'shared-link-tile-photo',\r\n                            { 'shared-link-tile-photo-round': isVideoNote },\r\n                            { 'media-blurred': src && isBlurred },\r\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\r\n                        )}\r\n                        draggable={false}\r\n                        src={src || miniSrc}\r\n                        alt=''\r\n                    />\r\n                ) : (\r\n                    <span>{title}</span>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedLinkTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    minithumbnail: PropTypes.object,\r\n    thumbnail: PropTypes.object,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default SharedLinkTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContextMenu from './ContextMenu';\r\nimport SafeLink from '../../Additional/SafeLink';\r\nimport SharedLinkTile from './SharedLinkTile';\r\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\r\nimport { getFormattedText, substring } from '../../../Utils/Message';\r\nimport punycode from '../../../Utils/Punycode';\r\nimport { PHOTO_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedLink.css';\r\n\r\nclass SharedLink extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (webPage !== nextProps.webPage) {\r\n            return true;\r\n        }\r\n\r\n        if (caption !== nextProps.caption) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    static isValidEntity(entity) {\r\n        if (!entity) return false;\r\n\r\n        const { type } = entity;\r\n        if (!type) return false;\r\n\r\n        return (\r\n            type['@type'] === 'textEntityTypeUrl' ||\r\n            type['@type'] === 'textEntityTypeTextUrl' ||\r\n            type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    getTitleFromUrl(url) {\r\n        try {\r\n            url = url.startsWith('http') ? url : 'http://' + url;\r\n            const decodedUrl = decodeURI(url);\r\n\r\n            const hostname = new URL(decodedUrl).hostname.split('.');\r\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\r\n\r\n            return punycode.ToUnicode(domain);\r\n        } catch (error) {\r\n            console.error('url: ' + url + '\\n' + error);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        let thumbnail = null;\r\n        let minithumbnail = null;\r\n        let content = null;\r\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\r\n            title: '',\r\n            description: {\r\n                '@type': 'formattedText',\r\n                text: '',\r\n                entities: []\r\n            },\r\n            photo: null,\r\n            animation: null,\r\n            audio: null,\r\n            document: null,\r\n            sticker: null,\r\n            video: null,\r\n            video_note: null,\r\n            url: ''\r\n        };\r\n\r\n        if (animation) {\r\n            minithumbnail = animation.minithumbnail;\r\n            thumbnail = animation.thumbnail;\r\n        } else if (audio) {\r\n            minithumbnail = audio.album_cover_minithumbnail;\r\n            thumbnail = audio.album_cover_thumbnail;\r\n        } else if (document) {\r\n            minithumbnail = document.minithumbnail;\r\n            thumbnail = document.thumbnail;\r\n        } else if (sticker) {\r\n            minithumbnail = sticker.minithumbnail;\r\n            thumbnail = sticker.thumbnail;\r\n        } else if (video) {\r\n            minithumbnail = video.minithumbnail;\r\n            thumbnail = video.thumbnail;\r\n        } else if (videoNote) {\r\n            minithumbnail = videoNote.minithumbnail;\r\n            thumbnail = videoNote.thumbnail;\r\n        }\r\n\r\n        if (!thumbnail && !minithumbnail && photo) {\r\n            minithumbnail = photo.minithumbnail;\r\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\r\n        }\r\n\r\n        let { text, caption } = message.content;\r\n        text = text || caption;\r\n        if (text) {\r\n            const { entities } = text;\r\n            if (entities && entities.length > 0) {\r\n                const longTextMaxLength = 40;\r\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\r\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\r\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\r\n\r\n                const nonEmptyUrlEntities = urlEntities\r\n                    .filter(x => {\r\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\r\n                        entityText = entityText.replace(/\\u200B/g,'');\r\n\r\n                        return entityText.length > 0;\r\n                    });\r\n\r\n                const links = nonEmptyUrlEntities.map((x, i) => {\r\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\r\n                        url = entityText;\r\n                        let mail = false;\r\n\r\n                        switch (x.type['@type']) {\r\n                            case 'textEntityTypeTextUrl': {\r\n                                const { url: typeUrl } = x.type;\r\n                                if (typeUrl) {\r\n                                    url = typeUrl;\r\n                                }\r\n                                break;\r\n                            }\r\n                            case 'textEntityTypeUrl': {\r\n                                break;\r\n                            }\r\n                            case 'textEntityTypeEmailAddress':\r\n                                mail = true;\r\n                                break;\r\n                        }\r\n\r\n                        title = title || this.getTitleFromUrl(url) || ' ';\r\n\r\n                        return (\r\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\r\n                                {entityText}\r\n                            </SafeLink>\r\n                        );\r\n                    });\r\n\r\n                if (showLinks) {\r\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\r\n                    d = d.trim();\r\n                    content = (\r\n                        <>\r\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\r\n                            <div>{links}</div>\r\n                        </>);\r\n                } else {\r\n                    let d = description.text || '';\r\n                    d = d.trim();\r\n                    content = (\r\n                        <>\r\n                            {d && <div className='web-page-description'>{d}</div>}\r\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\r\n                        </>);\r\n                }\r\n\r\n                if (webPage) {\r\n                    title = title || this.getTitleFromUrl(url);\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\r\n                    <SharedLinkTile\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        minithumbnail={minithumbnail}\r\n                        thumbnail={thumbnail}\r\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\r\n                    />\r\n                    <div className='shared-link-content'>\r\n                        {title && <div className='web-page-title'>{title}</div>}\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedLink.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    webPage: PropTypes.object,\r\n    caption: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n};\r\n\r\nexport default SharedLink;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AudioAction from '../../Message/Media/AudioAction';\r\nimport ContextMenu from './ContextMenu';\r\nimport MediaStatus from '../../Message/Media/MediaStatus';\r\nimport MessageAuthor from '../../Message/MessageAuthor';\r\nimport VoiceNoteTile from '../VoiceNoteTile';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedVoiceNote.css';\r\n\r\nclass SharedVoiceNote extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (voiceNote !== nextProps.voiceNote) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        if (!voiceNote) return null;\r\n\r\n        const { date, sender_id } = message;\r\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            hour12: false\r\n        });\r\n\r\n        const { duration, voice: file } = voiceNote;\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\r\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\r\n                    <div className='voice-note-content'>\r\n                        <div className='document-title'><MessageAuthor sender={sender_id} messageId={messageId} /></div>\r\n                        <div className='voice-note-meta'>\r\n                            <AudioAction\r\n                                chatId={chatId}\r\n                                messageId={messageId}\r\n                                duration={duration}\r\n                                file={file}\r\n                                date={dateString}\r\n                            />\r\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nSharedVoiceNote.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    voiceNote: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedVoiceNote);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ContextMenu from './ContextMenu';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { getDurationString } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedVideo.css';\r\n\r\nclass SharedVideo extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, video, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (video !== nextProps.video) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    onClientUpdateVideoThumbnailBlob = update => {\r\n        const { thumbnail } = this.props.video;\r\n        const { fileId } = update;\r\n\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (file && file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\r\n        const { minithumbnail, thumbnail, duration } = this.props.video;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='shared-video-wrapper'>\r\n                        <div\r\n                            className={classNames('shared-video-content', {\r\n                                'media-blurred': isBlurred,\r\n                                'media-mini-blurred': !thumbSrc && isBlurred\r\n                            })}\r\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\r\n                        />\r\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedVideo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    video: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nSharedVideo.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\r\n};\r\n\r\nexport default SharedVideo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport User from '../../Tile/User';\r\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\r\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\r\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\r\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\r\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\r\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport { openChat, openUser } from '../../../Actions/Client';\r\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaContent.css';\r\nimport Chat from '../../Tile/Chat';\r\n\r\nconst overScanCount = 5;\r\n\r\nclass SharedMediaContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        this.state = {\r\n            scrollTop: 0\r\n        }\r\n\r\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    static getItemHeight(item) {\r\n        if (!item) return undefined;\r\n\r\n        switch (item['@type']) {\r\n            case 'message': {\r\n                const { content } = item;\r\n                switch (content['@type']) {\r\n                    case 'messagePhoto': {\r\n                        return undefined;\r\n                    }\r\n                    case 'messageVideo': {\r\n                        return undefined;\r\n                    }\r\n                    case 'messageDocument': {\r\n                        return 78;\r\n                    }\r\n                    case 'messageAudio': {\r\n                        return 94;\r\n                    }\r\n                    case 'messageVoiceNote': {\r\n                        return 74;\r\n                    }\r\n                    default: {\r\n                        return undefined;\r\n                    }\r\n                }\r\n            }\r\n            case 'chat': {\r\n                return 74;\r\n            }\r\n            case 'user': {\r\n                return 74;\r\n            }\r\n            default: {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getRowHeight(selectedIndex) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return 74;\r\n            }\r\n            case 1: {\r\n                return undefined;\r\n            }\r\n            case 2: {\r\n                return 78;\r\n            }\r\n            case 3: {\r\n                return 94;\r\n            }\r\n            case 4: {\r\n                return undefined;\r\n            }\r\n            case 5: {\r\n                return 74;\r\n            }\r\n            case 6: {\r\n                return 74;\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\r\n        const migratedChatId = -1;\r\n\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                const { user_id: id } = item;\r\n                return (\r\n                    <ListItem\r\n                        button\r\n                        key={`user_id=${id}`}\r\n                        className='groups-in-common-item'>\r\n                        <User userId={id} onSelect={onOpen}/>\r\n                    </ListItem>\r\n                );\r\n            }\r\n            case 1: {\r\n                const { chat_id, id, content } = item;\r\n                if (content['@type'] === 'messageVideo') {\r\n                    return (\r\n                        <SharedVideo\r\n                            key={`chat_id=${chat_id}_message_id=${id}`}\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            video={content.video}\r\n                            openMedia={onOpen}\r\n                            showOpenMessage={chat_id !== migratedChatId}\r\n                        />\r\n                    );\r\n                }\r\n\r\n                return (\r\n                    <SharedPhoto\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        photo={content.photo}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 2: {\r\n                const { chat_id, id } = item;\r\n                return (\r\n                    <SharedDocument\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 3: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedDocument\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 4: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedLink\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        webPage={content.web_page}\r\n                        caption={content.caption}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 5: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedVoiceNote\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        voiceNote={content.voice_note}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 6: {\r\n                const { id } = item;\r\n                return (\r\n                    <ListItem\r\n                        button\r\n                        key={`chat_id=${id}`}\r\n                        className='groups-in-common-item'>\r\n                        <Chat chatId={id} onSelect={onOpen} />\r\n                    </ListItem>\r\n                );\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    static isValidMessage(selectedIndex, message) {\r\n        if (!message) return false;\r\n\r\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\r\n    };\r\n\r\n    static isValidContent(selectedIndex, content) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return true;\r\n            }\r\n            case 1: {\r\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\r\n            }\r\n            case 2: {\r\n                return SharedMediaContent.isValidDocumentContent(content);\r\n            }\r\n            case 3: {\r\n                return SharedMediaContent.isValidAudioContent(content);\r\n            }\r\n            case 4: {\r\n                return SharedMediaContent.isValidUrlContent(content);\r\n            }\r\n            case 5: {\r\n                return SharedMediaContent.isValidVoiceNoteContent(content);\r\n            }\r\n            case 6: {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static isValidPhotoAndVideoContent(content) {\r\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\r\n    }\r\n\r\n    static isValidAudioContent(content) {\r\n        return content && content['@type'] === 'messageAudio';\r\n    }\r\n\r\n    static isValidDocumentContent(content) {\r\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\r\n    }\r\n\r\n    static isValidUrlContent(content) {\r\n        if (!content) return false;\r\n\r\n        const { web_page, text, caption } = content;\r\n        if (web_page) return true;\r\n        if (!text && !caption) return false;\r\n\r\n        const { entities } = text || caption;\r\n        if (!entities) return false;\r\n\r\n        return entities.find(\r\n            x =>\r\n                x.type['@type'] === 'textEntityTypeUrl' ||\r\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\r\n                x.type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    static isValidVoiceNoteContent(content) {\r\n        return content && content['@type'] === 'messageVoiceNote';\r\n    }\r\n\r\n    static getFilter(selectedIndex) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return null;\r\n            }\r\n            case 1: {\r\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\r\n            }\r\n            case 2: {\r\n                return { '@type': 'searchMessagesFilterDocument' };\r\n            }\r\n            case 3: {\r\n                return { '@type': 'searchMessagesFilterAudio' };\r\n            }\r\n            case 4: {\r\n                return { '@type': 'searchMessagesFilterUrl' };\r\n            }\r\n            case 5: {\r\n                return { '@type': 'searchMessagesFilterVoiceNote' };\r\n            }\r\n            case 6: {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static getSource(selectedIndex, media) {\r\n        if (!media) {\r\n            return [];\r\n        }\r\n\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\r\n            }\r\n            case 1: {\r\n                return media.photoAndVideo || [];\r\n            }\r\n            case 2: {\r\n                return media.document || [];\r\n            }\r\n            case 3: {\r\n                return media.audio || [];\r\n            }\r\n            case 4: {\r\n                return media.url || [];\r\n            }\r\n            case 5: {\r\n                return media.voiceNote || [];\r\n            }\r\n            case 6: {\r\n                return media.groupsInCommon || [];\r\n            }\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n\r\n        if (chatId !== state.prevChatId) {\r\n            const media = MessageStore.getMedia(props.chatId);\r\n\r\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n            const photoAndVideo = media ? media.photoAndVideo : [];\r\n            const document = media ? media.document : [];\r\n            const audio = media ? media.audio : [];\r\n            const url = media ? media.url : [];\r\n            const voiceNote = media ? media.voiceNote : [];\r\n            const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n            let selectedIndex = -1;\r\n            if (members.length > 0) {\r\n                selectedIndex = 0;\r\n            } else if (photoAndVideo.length > 0) {\r\n                selectedIndex = 1;\r\n            } else if (document.length > 0) {\r\n                selectedIndex = 2;\r\n            } else if (audio.length > 0) {\r\n                selectedIndex = 3;\r\n            } else if (url.length > 0) {\r\n                selectedIndex = 4;\r\n            } else if (voiceNote.length > 0) {\r\n                selectedIndex = 5;\r\n            } else if (groupsInCommon.length > 0) {\r\n                selectedIndex = 6;\r\n            }\r\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n\r\n            return {\r\n                prevChatId: props.chatId,\r\n                selectedIndex,\r\n                renderIds: new Map(),\r\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\r\n                members,\r\n                photoAndVideo,\r\n                document,\r\n                audio,\r\n                url,\r\n                voiceNote,\r\n                groupsInCommon,\r\n                isSmallWidth: false,\r\n                params: {\r\n                    loading: false,\r\n                    completed: false,\r\n                    migrateCompleted: false,\r\n                    filter: SharedMediaContent.getFilter(selectedIndex)\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onWindowResize);\r\n\r\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n\r\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        const { items, selectedIndex } = this.state;\r\n        if (!items.some(x => x.id === message_id)) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onWindowResize = event => {\r\n        const { items, scrollTop } = this.state;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\r\n\r\n        this.setState({ ...renderIds });\r\n    };\r\n\r\n    onUpdateMessageSend = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    setMediaState = (media, selectedIndex) => {\r\n        const { scrollTop } = this.state;\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        const hasMembers = members.length > 0;\r\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\r\n        const hasDocument = document.length > 0;\r\n        const hasAudio = audio.length > 0;\r\n        const hasUrl = url.length > 0;\r\n        const hasVoiceNote = voiceNote.length > 0;\r\n        const hasGroupsInCommon = groupsInCommon.length > 0;\r\n\r\n        const replaceSelectedIndex =\r\n            selectedIndex === -1\r\n            || selectedIndex === 0 && !hasMembers\r\n            || selectedIndex === 1 && !hasPhotoAndVideo\r\n            || selectedIndex === 2 && !hasDocument\r\n            || selectedIndex === 3 && !hasAudio\r\n            || selectedIndex === 4 && !hasUrl\r\n            || selectedIndex === 5 && !hasVoiceNote\r\n            || selectedIndex === 6 && !hasGroupsInCommon;\r\n        if (replaceSelectedIndex) {\r\n            if (hasMembers) {\r\n                selectedIndex = 0;\r\n            } else if (hasPhotoAndVideo) {\r\n                selectedIndex = 1;\r\n            } else if (hasDocument) {\r\n                selectedIndex = 2;\r\n            } else if (hasAudio) {\r\n                selectedIndex = 3;\r\n            } else if (hasUrl) {\r\n                selectedIndex = 4;\r\n            } else if (hasVoiceNote) {\r\n                selectedIndex = 5;\r\n            } else if (hasGroupsInCommon) {\r\n                selectedIndex = 6;\r\n            }\r\n        }\r\n\r\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\r\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n            items,\r\n            params: {\r\n                loading: false,\r\n                completed: false,\r\n                migrateCompleted: false,\r\n                filter: SharedMediaContent.getFilter(selectedIndex)\r\n            },\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\r\n            const { items } = this.state;\r\n\r\n            const store = FileStore.getStore();\r\n            switch (this.state.selectedIndex) {\r\n                case 0: {\r\n                    loadUsersContent(store, items.map(x => x.user_id));\r\n                    break;\r\n                }\r\n                case 1:\r\n                case 2:\r\n                case 3:\r\n                case 4:\r\n                case 5: {\r\n                    loadMessageContents(store, items);\r\n                    break;\r\n                }\r\n                case 6: {\r\n                    loadChatsContent(store, items);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // this.unobserveResize();\r\n        // this.observeResize();\r\n    }\r\n\r\n    onClientUpdateMediaTab = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId, index: selectedIndex } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        const media = MessageStore.getMedia(currentChatId);\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        let source = [];\r\n        if (selectedIndex === 0) {\r\n            source = members;\r\n        } else if (selectedIndex === 1) {\r\n            source = photoAndVideo;\r\n        } else if (selectedIndex === 2) {\r\n            source = document;\r\n        } else if (selectedIndex === 3) {\r\n            source = audio;\r\n        } else if (selectedIndex === 4) {\r\n            source = url;\r\n        } else if (selectedIndex === 5) {\r\n            source = voiceNote;\r\n        } else if (selectedIndex === 6) {\r\n            source = groupsInCommon;\r\n        }\r\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            renderIds: new Map(),\r\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon,\r\n            params: {\r\n                loading: false,\r\n                completed: false,\r\n                migrateCompleted: false,\r\n                filter: SharedMediaContent.getFilter(selectedIndex)\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n\r\n        const { chatId } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    handleScroll = (event, container) => {\r\n        const { params } = this.state;\r\n\r\n        if (params && !params.completed) {\r\n            this.onLoadNext(params);\r\n        } else {\r\n            // this.onLoadMigratedNext(params);\r\n        }\r\n    };\r\n\r\n    handleVirtScroll = (event, container) => {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        this.setScrollPosition(container.scrollTop);\r\n    };\r\n\r\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\r\n        const { rowHeight } = this.state;\r\n\r\n        const itemTop = index * rowHeight;\r\n        const itemBottom = (index + 1) * rowHeight;\r\n\r\n        return (\r\n            itemTop > scrollTop - overScanCount * rowHeight &&\r\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\r\n        );\r\n    };\r\n\r\n    getRenderIds(source, viewportHeight, scrollTop) {\r\n        const renderIds = new Map();\r\n        const renderIdsList = [];\r\n        source.forEach((item, index) => {\r\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\r\n                renderIds.set(index, index);\r\n                renderIdsList.push(index);\r\n            }\r\n        });\r\n\r\n        return { renderIds, renderIdsList };\r\n    }\r\n\r\n    setScrollPosition = scrollTop => {\r\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\r\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\r\n\r\n            this.setState({\r\n                scrollTop,\r\n                ...renderIds\r\n            });\r\n        }\r\n    };\r\n\r\n    onLoadNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { items, selectedIndex } = this.state;\r\n        const { completed, filter, loading, messages: lastMessages } = params;\r\n\r\n        if (selectedIndex === 0) return;\r\n        if (selectedIndex === 6) return;\r\n        if (!filter) return;\r\n        if (loading) return;\r\n        if (completed) return;\r\n\r\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        if (lastMessages) {\r\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\r\n        }\r\n        params.loading = true;\r\n        params.requestId = new Date();\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\r\n            filter\r\n        });\r\n\r\n        const { params: currentParams } = this.state;\r\n        if (!currentParams || currentParams.requestId !== params.requestId) {\r\n            return;\r\n        }\r\n\r\n        const { messages } = result;\r\n        params.messages = messages;\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        MessageStore.setItems(result.messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n\r\n        this.setState({ items: params.items });\r\n\r\n        if (params.completed) {\r\n            this.onLoadMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onLoadNext(params, false);\r\n        }\r\n    };\r\n\r\n    onLoadMigratedNext(params, loadIncomplete) {\r\n\r\n    }\r\n\r\n    handleOpen = item => {\r\n        const { popup } = this.props;\r\n\r\n        switch (item['@type']) {\r\n            case 'message': {\r\n                const { chat_id, id } = item;\r\n\r\n                openMedia(chat_id, id, false);\r\n                break;\r\n            }\r\n            case 'chat': {\r\n                const { id } = item;\r\n                openChat(id);\r\n\r\n                if (popup) {\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateDialogChatId',\r\n                        chatId: 0\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case 'chatMember': {\r\n                const { user_id } = item;\r\n                openUser(user_id, true);\r\n\r\n                if (popup) {\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateDialogChatId',\r\n                        chatId: 0\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            selectedIndex,\r\n            items = [],\r\n            renderIds,\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        } = this.state;\r\n\r\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\r\n\r\n        const hasItems = members && members.length > 0\r\n            || photoAndVideo && photoAndVideo.length > 0\r\n            || document && document.length > 0\r\n            || audio && audio.length > 0\r\n            || url && url.length > 0\r\n            || voiceNote && voiceNote.length > 0\r\n            || groupsInCommon && groupsInCommon.length > 0;\r\n        if (!hasItems) {\r\n            return (<div ref={this.listRef}/>);\r\n        }\r\n\r\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\r\n            let contentHeight = 0;\r\n            const controls = items.map((x, index) => {\r\n                const { chat_id, id } = x;\r\n                const itemHeight = SharedMediaContent.getItemHeight(x);\r\n                if (!itemHeight) {\r\n                    return null;\r\n                }\r\n                contentHeight += itemHeight;\r\n\r\n                return ((!renderIds.size || renderIds.has(index)) && (\r\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\r\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\r\n                    </div>\r\n                ));\r\n            });\r\n\r\n            return (\r\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\r\n                    {controls}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\r\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaContent.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default SharedMediaContent;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport HeadsetIcon from '@material-ui/icons/Headset';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\r\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport User from '../Tile/User';\r\nimport Chat from '../Tile/Chat';\r\nimport ChatDetailsHeader from './ChatDetailsHeader';\r\nimport NotificationsListItem from './NotificationsListItem';\r\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\r\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\r\nimport { copy } from '../../Utils/Text';\r\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\r\nimport {\r\n    getChatUsername,\r\n    getChatPhoneNumber,\r\n    getChatBio,\r\n    isGroupChat,\r\n    getGroupChatMembers,\r\n    getChatFullInfo,\r\n    isPrivateChat,\r\n    isMeChat, isChannelChat\r\n} from '../../Utils/Chat';\r\nimport { getUserStatusOrder } from '../../Utils/User';\r\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\r\nimport { formatPhoneNumber } from '../../Utils/Phone';\r\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MoreListItem.css';\r\nimport './ChatDetails.css';\r\n\r\nclass ChatDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.dividerRef = React.createRef();\r\n        this.mediaRef = React.createRef();\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.members = new Map();\r\n        this.state = {\r\n            prevChatId: chatId\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            return {\r\n                prevChatId: props.chatId\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { chatId } = this.props;\r\n\r\n        const { current: list } = this.listRef;\r\n        const { scrollTop, scrollHeight, offsetHeight } = list;\r\n        const snapshot = {\r\n            scrollTop,\r\n            scrollHeight,\r\n            offsetHeight\r\n        };\r\n\r\n        // console.log(\r\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\r\n        // );\r\n\r\n        return snapshot;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, theme, counters, migratedCounters } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.counters !== counters) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.migratedCounters !== migratedCounters) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.props;\r\n        if (prevProps.chatId !== chatId) {\r\n            this.loadContent();\r\n        }\r\n\r\n        const { current: list } = this.listRef;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n        if (prevProps.chatId === chatId) {\r\n            list.scrollTop = scrollTop;\r\n        } else {\r\n            list.scrollTop = 0;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\r\n            chat.type.basic_group_id === update.basic_group_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeSupergroup' &&\r\n            chat.type.supergroup_id === update.supergroup_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        if (this.members.has(update.user_id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    loadContent = () => {\r\n        this.loadChatContents();\r\n    };\r\n\r\n    loadChatContents = () => {\r\n        const { chatId, popup } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadChatsContent(store, [chatId]);\r\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\r\n        loadUsersContent(store, members);\r\n\r\n        if (popup) {\r\n            getChatFullInfo(chatId);\r\n        }\r\n    };\r\n\r\n    handleUsernameHint = () => {\r\n        const { t, chatId } = this.props;\r\n        const username = getChatUsername(chatId);\r\n        if (!username) return;\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\r\n\r\n        copy(usernameLink + username);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => {\r\n                        closeSnackbar(snackKey);\r\n                    }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handlePhoneHint = () => {\r\n        const { t, chatId } = this.props;\r\n        const phoneNumber = getChatPhoneNumber(chatId);\r\n        if (!phoneNumber) return;\r\n\r\n        copy(formatPhoneNumber(phoneNumber));\r\n\r\n        this.handleScheduledAction(t('PhoneCopied'));\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        this.listRef.current.scrollTop = 0;\r\n    };\r\n\r\n    handleOpenViewer = () => {\r\n        const { chatId, popup } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.photo) return;\r\n\r\n        setProfileMediaViewerContent({ chatId });\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    handleOpenChat = () => {\r\n        const { chatId, popup } = this.props;\r\n\r\n        openChat(chatId, null, false);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    handleOpenUser = userId => {\r\n        openUser(userId, true);\r\n    };\r\n\r\n    getContentHeight = () => {\r\n        if (!this.listRef) return 0;\r\n\r\n        return this.listRef.current.clientHeight;\r\n    };\r\n\r\n    handleTabClick = event => {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const { current: divider } = this.dividerRef;\r\n        if (!divider) return;\r\n        if (divider.offsetTop === list.scrollTop) return;\r\n\r\n        if (list.scrollTop < divider.offsetTop) {\r\n            list.scrollTo({\r\n                top: divider.offsetTop,\r\n                behavior: 'smooth'\r\n            });\r\n        } else {\r\n            list.scrollTop = divider.offsetTop + 70;\r\n            setTimeout(() => {\r\n                list.scrollTo({\r\n                    top: divider.offsetTop,\r\n                    behavior: 'smooth'\r\n                });\r\n            }, 0);\r\n        }\r\n        // requestAnimationFrame(() => {\r\n        //     list.scrollTo({\r\n        //         top: divider.offsetTop,\r\n        //         behavior: 'smooth'\r\n        //     });\r\n        // });\r\n    };\r\n\r\n    handleScroll = event => {\r\n        if (!this.listRef) return;\r\n        if (!this.mediaRef) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const { current: media } = this.mediaRef;\r\n        if (!media) return;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            media.handleScroll(event);\r\n        }\r\n\r\n        media.handleVirtScroll(event, list);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            backButton,\r\n            className,\r\n            chatId,\r\n            onClose,\r\n            popup,\r\n            t\r\n        } = this.props;\r\n\r\n        let { counters, migratedCounters } = this.props;\r\n        counters = counters || [0, 0, 0, 0, 0, 0];\r\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\r\n\r\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\r\n            (el, i) => el + migratedCounters[i]\r\n        );\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) {\r\n            return (\r\n                <div className='chat-details'>\r\n                    <ChatDetailsHeader onClose={onClose} />\r\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let groupInCommonCount = 0;\r\n        if (isPrivateChat(chatId)) {\r\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\r\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\r\n        }\r\n\r\n        const username = getChatUsername(chatId);\r\n        const phoneNumber = getChatPhoneNumber(chatId);\r\n        let bio = getChatBio(chatId);\r\n        const isGroup = isGroupChat(chatId);\r\n        const isMe = isMeChat(chatId);\r\n\r\n        const members = getGroupChatMembers(chatId);\r\n        const users = [];\r\n        this.members = new Map();\r\n        members.forEach(member => {\r\n            const user = UserStore.get(member.user_id);\r\n            if (user) {\r\n                this.members.set(user.id, user.id);\r\n                users.push(user);\r\n            }\r\n        });\r\n\r\n        const sortedUsers = users.sort((x, y) => {\r\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\r\n        });\r\n        const items = sortedUsers.map(user => (\r\n            <ListItem button className='list-item' key={user.id}>\r\n                <User userId={user.id} onSelect={this.handleOpenUser} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const { photo } = chat;\r\n\r\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\r\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\r\n            if (bioEntities.length > 0) {\r\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\r\n            }\r\n        }\r\n\r\n        let openChatTitle = t('SendMessage');\r\n        if (isChannelChat(chatId)) {\r\n            openChatTitle = t('OpenChannel');\r\n        } else if (isGroupChat(chatId)) {\r\n            openChatTitle = t('OpenGroup');\r\n        }\r\n\r\n        let chatUrl = ''\r\n        if (username) {\r\n            if (isPrivateChat(chatId)) {\r\n                chatUrl = username;\r\n            } else {\r\n                const tMeUrl = OptionStore.get('t_me_url')\r\n                    .value\r\n                    .toLowerCase()\r\n                    .replace('https://', '')\r\n                    .replace('http://', '');\r\n\r\n                chatUrl = tMeUrl + username;\r\n            }\r\n        }\r\n\r\n        const content = (\r\n            <>\r\n                <ChatDetailsHeader\r\n                    chatId={chatId}\r\n                    backButton={backButton}\r\n                    onClose={onClose}\r\n                    onClick={this.handleHeaderClick}\r\n                />\r\n                <div\r\n                    ref={this.listRef}\r\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\r\n                    onScroll={this.handleScroll}>\r\n                    <div className='chat-details-info'>\r\n                        <Chat\r\n                            chatId={chatId}\r\n                            big={true}\r\n                            showStatus={true}\r\n                            showSavedMessages={!popup}\r\n                            onTileSelect={photo ? this.handleOpenViewer : null}\r\n                        />\r\n                        {!isMe && (\r\n                            <List className='chat-details-items'>\r\n                                {bio && (\r\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\r\n                                        <ListItemIcon>\r\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={bio}\r\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\r\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {username && (\r\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\r\n                                        <ListItemIcon>\r\n                                            <AlternateEmailIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {chatUrl}\r\n                                                </Typography>\r\n                                            }\r\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {isPrivateChat(chatId) && (\r\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\r\n                                        <ListItemIcon>\r\n                                            <CallIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {phoneNumber ? formatPhoneNumber(phoneNumber) : t('PhoneHidden')}\r\n                                                </Typography>\r\n                                            }\r\n                                            secondary={t('Phone')}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                <NotificationsListItem chatId={chatId} />\r\n                                {popup && (\r\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography color='primary' variant='inherit' noWrap>\r\n                                                    {openChatTitle.toUpperCase()}\r\n                                                </Typography>\r\n                                            }\r\n                                            style={{ paddingLeft: 40 }}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                            </List>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div ref={this.dividerRef}/>\r\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\r\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\r\n    }\r\n}\r\n\r\nChatDetails.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onOpenGroupInCommon: PropTypes.func,\r\n    onOpenSharedDocuments: PropTypes.func,\r\n    onOpenSharedMedia: PropTypes.func,\r\n    onOpenSharedLinks: PropTypes.func,\r\n    onOpenSharedPhotos: PropTypes.func,\r\n    onOpenSharedVideos: PropTypes.func,\r\n    onOpenSharedVoiceNotes: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withSnackbar,\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ChatDetails);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport './GroupsInCommonHeader.css';\r\n\r\nclass GroupsInCommonHeader extends React.Component {\r\n    render() {\r\n        const { onClose } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className='header-left-button' onClick={onClose}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Groups in common</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupsInCommonHeader.propTypes = {\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default GroupsInCommonHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Chat from '../Tile/Chat';\r\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './GroupsInCommon.css';\r\n\r\nclass GroupsInCommon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getGroupsInCommon',\r\n            user_id: userId,\r\n            offset_chat_id: 0,\r\n            limit: 100\r\n        }).then(result => {\r\n            const store = FileStore.getStore();\r\n            loadChatsContent(store, result.chat_ids);\r\n\r\n            this.setState({ chatIds: result.chat_ids });\r\n        });\r\n    }\r\n\r\n    handleSelect = chatId => {\r\n        const { popup } = this.props;\r\n\r\n        openChat(chatId);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { chatIds } = this.state;\r\n\r\n        const chats = chatIds.map(x => (\r\n            <ListItem button key={x}>\r\n                <Chat chatId={x} onSelect={this.handleSelect} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const content = (\r\n            <>\r\n                <GroupsInCommonHeader onClose={onClose} />\r\n                <div className='groups-in-common-list' style={{ minHeight }}>\r\n                    {chats}\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\r\n    }\r\n}\r\n\r\nGroupsInCommon.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nGroupsInCommon.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default GroupsInCommon;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\r\n    'Search'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport SearchIcon from '../../../Assets/Icons/Search';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\r\nimport './SharedMediaHeader.css';\r\n\r\nclass SharedMediaHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n\r\n        this.state = {\r\n            openSearch: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { openSearch } = this.state;\r\n\r\n        if (openSearch && openSearch !== prevProps.openSearch) {\r\n            setTimeout(() => {\r\n                if (this.searchInputRef.current) {\r\n                    this.searchInputRef.current.focus();\r\n                }\r\n            }, ANIMATION_DURATION_200MS);\r\n        }\r\n    }\r\n\r\n    handleSearch = () => {\r\n        if (this.searchInputRef.current) {\r\n            const innerText = this.searchInputRef.current.innerText;\r\n            if (innerText) {\r\n                this.searchInputRef.current.innerText = '';\r\n\r\n                const { onSearch } = this.props;\r\n                if (!onSearch) return;\r\n\r\n                onSearch('');\r\n                return;\r\n            }\r\n        }\r\n\r\n        const { onCloseSearch } = this.props;\r\n        const { openSearch } = this.state;\r\n\r\n        this.setState({ openSearch: !openSearch });\r\n\r\n        if (onCloseSearch) {\r\n            onCloseSearch();\r\n        }\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleKeyUp = () => {\r\n        const element = this.searchInputRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        const { onSearch } = this.props;\r\n        if (!onSearch) return;\r\n\r\n        onSearch(innerText);\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, title, onClick, onClose, onSearch } = this.props;\r\n        const { openSearch } = this.state;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {!openSearch ? (\r\n                    <>\r\n                        <IconButton className='header-left-button' onClick={onClose}>\r\n                            <ArrowBackIcon />\r\n                        </IconButton>\r\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                            <span className='header-status-content'>{title}</span>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className='header-search-input grow'>\r\n                            <div\r\n                                id='header-search-inputbox'\r\n                                ref={this.searchInputRef}\r\n                                placeholder={t('Search')}\r\n                                contentEditable\r\n                                suppressContentEditableWarning\r\n                                onKeyDown={this.handleKeyDown}\r\n                                onKeyUp={this.handleKeyUp}\r\n                                onPaste={this.handlePaste}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n                {Boolean(onSearch) && (\r\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\r\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaHeader.propTypes = {\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    onClose: PropTypes.func,\r\n    onCloseSearch: PropTypes.func,\r\n    onSearch: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedMediaHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\r\nimport SharedMediaHeader from './SharedMediaHeader';\r\nimport { between, insertByOrder } from '../../../Utils/Common';\r\nimport { loadMessageContents } from '../../../Utils/File';\r\nimport { messageComparatorDesc } from '../../../Utils/Message';\r\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaBase.css';\r\n\r\nclass SharedMediaBase extends React.Component {\r\n    getListClassName() {\r\n        return null;\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return null;\r\n    }\r\n\r\n    constructor(props) {\r\n        if (new.target === SharedMediaBase) {\r\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\r\n        }\r\n\r\n        // console.log('SharedMediaBase.ctor');\r\n\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n\r\n        this.state = {\r\n            items: [],\r\n            migratedItems: [],\r\n            searchItems: [],\r\n            searchMigratedItems: []\r\n        };\r\n    }\r\n\r\n    hasSearch() {\r\n        return true;\r\n    }\r\n\r\n    isValidContent(content) {\r\n        throw new Error('Virtual method isValidContent is not implemented');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, id } = message;\r\n\r\n        return (\r\n            <SharedDocument\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n\r\n    getSearchFilter() {\r\n        throw new Error('Virtual method getSearchFilter is not implemented');\r\n    }\r\n\r\n    getHeader() {\r\n        throw new Error('Virtual method getHeader is not implemented');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { chat_id, message_id, old_content, new_content } = update;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\r\n\r\n        if (chat_id === chatId) {\r\n            if (!items.length) return;\r\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\r\n\r\n            const index = items.findIndex(x => x.id === message_id);\r\n            if (this.isValidContent(new_content)) {\r\n                if (index === -1) {\r\n                    // add new document\r\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\r\n                } else {\r\n                    // replace document\r\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\r\n                }\r\n            } else {\r\n                if (index === -1) {\r\n                } else {\r\n                    // remove none document\r\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\r\n                }\r\n            }\r\n        } else if (chat_id === migratedChatId) {\r\n            if (!migratedItems.length) return;\r\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\r\n\r\n            const index = migratedItems.findIndex(x => x.id === message_id);\r\n            if (this.isValidContent(new_content)) {\r\n                if (index === -1) {\r\n                    // add new document\r\n                    this.setState({\r\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\r\n                    });\r\n                } else {\r\n                    // replace document\r\n                    this.setState({\r\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\r\n                    });\r\n                }\r\n            } else {\r\n                if (index === -1) {\r\n                } else {\r\n                    // remove none document\r\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { message } = update;\r\n        const { chat_id } = message;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!this.isValidMessage(message)) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n\r\n        if (chat_id === chatId) {\r\n            this.setState({ items: [message].concat(items) });\r\n        } else if (chat_id === migratedChatId) {\r\n            this.setState({ migratedItems: [message].concat(migratedItems) });\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { chat_id, message_ids } = update;\r\n\r\n        const map = new Map(message_ids.map(x => [x, x]));\r\n        const callback = () => {\r\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\r\n                this.onLoadNext(this.params);\r\n            }\r\n        };\r\n\r\n        if (chat_id === chatId) {\r\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\r\n        } else if (chat_id === migratedChatId) {\r\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\r\n        }\r\n    };\r\n\r\n    loadContent = () => {\r\n        this.params = {\r\n            loading: false,\r\n            completed: false,\r\n            migrateCompleted: false,\r\n            items: [],\r\n            migratedItems: [],\r\n            filter: this.getSearchFilter()\r\n        };\r\n        this.onLoadNext(this.params);\r\n    };\r\n\r\n    onLoadNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { completed, filter, items, loading } = params;\r\n\r\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\r\n\r\n        if (loading) return;\r\n        if (completed) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\r\n            filter\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        params.items = items.concat(messages.filter(this.isValidMessage));\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        MessageStore.setItems(result.messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n\r\n        this.setState({ items: params.items });\r\n\r\n        if (params.completed) {\r\n            this.onLoadMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onLoadNext(params, false);\r\n        }\r\n    };\r\n\r\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\r\n        const { migratedChatId } = this.props;\r\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\r\n\r\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\r\n\r\n        if (!migratedChatId) return;\r\n        if (loading) return;\r\n        if (migrateCompleted) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: migratedChatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\r\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (params.migrateCompleted) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ migratedItems: params.migratedItems });\r\n\r\n        if (incompleteResults) {\r\n            this.onLoadMigratedNext(params, false);\r\n        }\r\n    };\r\n\r\n    handleScroll = () => {\r\n        if (!this.listRef) return;\r\n\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { params } = this;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (params && !params.completed) {\r\n                this.onLoadNext(params);\r\n            } else {\r\n                this.onLoadMigratedNext(params);\r\n            }\r\n        }\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        list.scrollTop = 0;\r\n    };\r\n\r\n    handleSearchScroll = () => {\r\n        if (!this.searchListRef) return;\r\n\r\n        const list = this.searchListRef.current;\r\n        if (!list) return;\r\n\r\n        const { searchParams } = this;\r\n        if (!searchParams) return;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (!searchParams.completed) {\r\n                this.onSearchNext(searchParams);\r\n            } else {\r\n                this.onSearchMigratedNext(searchParams);\r\n            }\r\n        }\r\n    };\r\n\r\n    onSearchNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { completed, filter, items, loading, query } = params;\r\n\r\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\r\n\r\n        if (completed) return;\r\n        if (loading) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query,\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.items = items.concat(messages.filter(this.isValidMessage));\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (this.searchParams !== params) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\r\n\r\n        if (params.completed) {\r\n            this.onSearchMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onSearchNext(params, false);\r\n        }\r\n    };\r\n\r\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\r\n        const { migratedChatId } = this.props;\r\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\r\n\r\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\r\n\r\n        if (!migratedChatId) return;\r\n        if (loading) return;\r\n        if (migrateCompleted) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: migratedChatId,\r\n            query,\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\r\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (this.searchParams !== params) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\r\n\r\n        if (incompleteResults) {\r\n            this.onSearchMigratedNext(params, false);\r\n        }\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text ? text.trim() : '';\r\n        if (!query) {\r\n            this.handleCloseSearch();\r\n            return;\r\n        }\r\n\r\n        this.searchParams = {\r\n            query,\r\n            completed: false,\r\n            migrateCompleted: false,\r\n            items: [],\r\n            migratedItems: [],\r\n            filter: this.getSearchFilter()\r\n        };\r\n        this.onSearchNext(this.searchParams, true);\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.searchParams = null;\r\n        this.setState({ searchItems: [], searchMigratedItems: [] });\r\n    };\r\n\r\n    isValidMessage = message => {\r\n        if (!message) return false;\r\n\r\n        return this.isValidContent(message.content);\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\r\n        const { searchParams } = this;\r\n\r\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\r\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\r\n\r\n        return (\r\n            <>\r\n                <SharedMediaHeader\r\n                    title={this.getHeader()}\r\n                    onClick={this.handleHeaderClick}\r\n                    onClose={onClose}\r\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\r\n                    onCloseSearch={this.handleCloseSearch}\r\n                />\r\n                <div\r\n                    ref={this.listRef}\r\n                    className={classNames('shared-media-list', this.getListClassName())}\r\n                    onScroll={this.handleScroll}\r\n                    style={{ minHeight: popup ? minHeight : null }}>\r\n                    {messages}\r\n                </div>\r\n                {Boolean(searchParams) && (\r\n                    <div\r\n                        ref={this.searchListRef}\r\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\r\n                        onScroll={this.handleSearchScroll}>\r\n                        {searchMessages}\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaBase.propTypes = {};\r\n\r\nexport default SharedMediaBase;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport './SharedAudios.css';\r\n\r\nclass SharedAudios extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageAudio';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterAudio' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('AudioTitle');\r\n    }\r\n}\r\n\r\nSharedAudios.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedAudios.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedAudios);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport './SharedDocuments.css';\r\n\r\nclass SharedDocuments extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageDocument';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterDocument' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('DocumentsTitle');\r\n    }\r\n}\r\n\r\nSharedDocuments.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedDocuments.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedDocuments);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedLinks.css';\r\n\r\nclass SharedLinks extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        if (!content) return false;\r\n\r\n        const { web_page, text } = content;\r\n        if (web_page) return true;\r\n        if (!text) return false;\r\n\r\n        const { entities } = text;\r\n        if (!entities) return false;\r\n\r\n        return entities.find(\r\n            x =>\r\n                x.type['@type'] === 'textEntityTypeUrl' ||\r\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\r\n                x.type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterUrl' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('LinksTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedLink\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                webPage={content.web_page}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedLinks.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedLinks.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedLinks);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport './SharedMediaHeader.css';\r\n\r\nclass SharedMediaHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { close } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className='header-left-button' onClick={close}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Shared Media</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SharedMediaHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport SharedMediaHeader from './SharedMediaHeader';\r\nimport './SharedMedia.css';\r\n\r\nclass SharedMedia extends React.Component {\r\n    state = {\r\n        value: 0\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, popup } = this.props;\r\n        const { value } = this.state;\r\n\r\n        const content = (\r\n            <>\r\n                <SharedMediaHeader close={onClose} />\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={this.handleChange}\r\n                    indicatorColor='primary'\r\n                    textColor='primary'\r\n                    scrollable\r\n                    scrollButtons='off'\r\n                    fullWidth>\r\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\r\n                </Tabs>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\r\n    }\r\n}\r\n\r\nSharedMedia.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedMedia.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default SharedMedia;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedPhotos.css';\r\n\r\nclass SharedPhotos extends SharedMediaBase {\r\n    getListClassName() {\r\n        return 'shared-photos-list';\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return 'shared-photos-search-list';\r\n    }\r\n\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messagePhoto';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterPhoto' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('PhotosTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedPhoto\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                photo={content.photo}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedPhotos.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedPhotos.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedPhotos);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedVideos.css';\r\n\r\nclass SharedVideos extends SharedMediaBase {\r\n    getListClassName() {\r\n        return 'shared-photos-list';\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return 'shared-photos-search-list';\r\n    }\r\n\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageVideo';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterVideo' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('VideosTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedVideo\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                video={content.video}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedVideos.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedVideos.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedVideos);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedVoiceNotes.css';\r\n\r\nclass SharedVoiceNotes extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageVoiceNote';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterVoiceNote' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('VoiceTitle');\r\n    }\r\n\r\n    hasSearch() {\r\n        return false;\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedVoiceNote\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                voiceNote={content.voice_note}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedVoiceNotes.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedVoiceNotes.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedVoiceNotes);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatDetails from './ChatDetails';\r\nimport GroupsInCommon from './GroupsInCommon';\r\nimport SharedAudios from './SharedMedia/SharedAudios';\r\nimport SharedDocuments from './SharedMedia/SharedDocuments';\r\nimport SharedLinks from './SharedMedia/SharedLinks';\r\nimport SharedMedia from './SharedMedia';\r\nimport SharedPhotos from './SharedMedia/SharedPhotos';\r\nimport SharedVideos from './SharedMedia/SharedVideos';\r\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\r\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\r\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\r\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfo.css';\r\n\r\nclass ChatInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.detailsRef = React.createRef();\r\n\r\n        const { popup } = props;\r\n        const { chatId, dialogChatId } = AppStore;\r\n\r\n        this.state = {\r\n            chatId: popup ? dialogChatId : chatId,\r\n            migratedChatId: 0,\r\n            userChatId: null,\r\n            openGroupInCommon: false,\r\n            openSharedAudios: false,\r\n            openSharedDocuments: false,\r\n            openSharedLinks: false,\r\n            openSharedMedia: false,\r\n            openSharedPhotos: false,\r\n            openSharedVideos: false,\r\n            openSharedVoiceNotes: false,\r\n            counters: null,\r\n            migratedCounters: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent(this.state.chatId);\r\n\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.state;\r\n        if (chatId !== prevState.chatId) {\r\n            this.loadContent(chatId);\r\n        }\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { popup } = this.props;\r\n        if (popup) return;\r\n\r\n        this.handleCloseChatDetails();\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { popup } = this.props;\r\n        const { chatId } = this.state;\r\n\r\n        if (popup) return;\r\n        if (chatId === update.nextChatId) return;\r\n\r\n        this.sharedAudios = null;\r\n        this.sharedDocuments = null;\r\n        this.sharedLinks = null;\r\n        this.sharedPhotos = null;\r\n        this.sharedVideos = null;\r\n        this.sharedVoiceNotes = null;\r\n\r\n        this.setState({\r\n            chatId: update.nextChatId,\r\n            migratedChatId: 0,\r\n            userChatId: null,\r\n            openGroupInCommon: false,\r\n            openSharedAudios: false,\r\n            openSharedDocuments: false,\r\n            openSharedLinks: false,\r\n            openSharedMedia: false,\r\n            openSharedPhotos: false,\r\n            openSharedVideos: false,\r\n            openSharedVoiceNotes: false,\r\n            counters: ChatStore.getCounters(update.nextChatId),\r\n            migratedCounters: null\r\n        });\r\n\r\n        if (!update.nextChatId) {\r\n            this.handleCloseChatDetails();\r\n        }\r\n    };\r\n\r\n    loadContent = chatId => {\r\n        this.loadChatCounters(chatId);\r\n        this.loadMigratedCounters(chatId);\r\n\r\n        const photo = getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n    };\r\n\r\n    loadChatCounters = async chatId => {\r\n        const counters = await getChatCounters(chatId);\r\n        ChatStore.setCounters(chatId, counters);\r\n\r\n        if (chatId !== this.state.chatId) return;\r\n\r\n        this.setState({ counters });\r\n    };\r\n\r\n    loadMigratedCounters = async chatId => {\r\n        if (!isSupergroup(chatId)) return;\r\n\r\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\r\n        if (!fullInfo) return;\r\n\r\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\r\n        if (!basic_group_id) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id,\r\n            force: true\r\n        });\r\n\r\n        if (!chat) return;\r\n\r\n        const counters = await getChatCounters(chat.id);\r\n        ChatStore.setCounters(chat.id, counters);\r\n\r\n        if (this.state.chatId !== chatId) return;\r\n\r\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\r\n    };\r\n\r\n    handleOpenSharedMedia = () => {\r\n        this.setState({ openSharedMedia: true });\r\n    };\r\n\r\n    handleCloseSharedMedia = () => {\r\n        this.setState({ openSharedMedia: false });\r\n    };\r\n\r\n    handleOpenGroupInCommon = () => {\r\n        this.setState({ openGroupInCommon: true });\r\n    };\r\n\r\n    handleCloseGroupsInCommon = () => {\r\n        this.setState({ openGroupInCommon: false });\r\n    };\r\n\r\n    handleCloseChatDetails = () => {\r\n        const { popup } = this.props;\r\n        const { userChatId } = this.state;\r\n\r\n        if (userChatId) {\r\n            this.setState({ userChatId: null });\r\n        } else if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        } else {\r\n            changeChatDetailsVisibility(false);\r\n        }\r\n    };\r\n\r\n    handleOpenSharedDocuments = () => {\r\n        this.setState({ openSharedDocuments: true });\r\n    };\r\n\r\n    handleCloseSharedDocuments = () => {\r\n        this.setState({ openSharedDocuments: false });\r\n    };\r\n\r\n    handleOpenSharedAudios = () => {\r\n        this.setState({ openSharedAudios: true });\r\n    };\r\n\r\n    handleCloseSharedAudios = () => {\r\n        this.setState({ openSharedAudios: false });\r\n    };\r\n\r\n    handleOpenSharedVoiceNotes = () => {\r\n        this.setState({ openSharedVoiceNotes: true });\r\n    };\r\n\r\n    handleCloseSharedVoiceNotes = () => {\r\n        this.setState({ openSharedVoiceNotes: false });\r\n    };\r\n\r\n    handleOpenSharedLinks = () => {\r\n        this.setState({ openSharedLinks: true });\r\n    };\r\n\r\n    handleCloseSharedLinks = () => {\r\n        this.setState({ openSharedLinks: false });\r\n    };\r\n\r\n    handleOpenSharedPhotos = () => {\r\n        this.setState({ openSharedPhotos: true });\r\n    };\r\n\r\n    handleCloseSharedPhotos = () => {\r\n        this.setState({ openSharedPhotos: false });\r\n    };\r\n\r\n    handleOpenSharedVideos = () => {\r\n        this.setState({ openSharedVideos: true });\r\n    };\r\n\r\n    handleCloseSharedVideos = () => {\r\n        this.setState({ openSharedVideos: false });\r\n    };\r\n\r\n    render() {\r\n        const { className, popup } = this.props;\r\n        const {\r\n            chatId,\r\n            counters,\r\n            migratedChatId,\r\n            migratedCounters,\r\n            userChatId,\r\n            openSharedAudios,\r\n            openSharedDocuments,\r\n            openSharedLinks,\r\n            openSharedMedia,\r\n            openSharedPhotos,\r\n            openSharedVideos,\r\n            openSharedVoiceNotes,\r\n            openGroupInCommon\r\n        } = this.state;\r\n\r\n        const currentChatId = chatId || userChatId;\r\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\r\n\r\n        let content = null;\r\n        if (openSharedMedia) {\r\n            content = (\r\n                <SharedMedia\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedMedia}\r\n                />\r\n            );\r\n        } else if (openSharedAudios) {\r\n            this.sharedAudios = this.sharedAudios || (\r\n                <SharedAudios\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedAudios}\r\n                />\r\n            );\r\n\r\n            content = this.sharedAudios;\r\n        } else if (openSharedDocuments) {\r\n            this.sharedDocuments = this.sharedDocuments || (\r\n                <SharedDocuments\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedDocuments}\r\n                />\r\n            );\r\n\r\n            content = this.sharedDocuments;\r\n        } else if (openSharedLinks) {\r\n            this.sharedLinks = this.sharedLinks || (\r\n                <SharedLinks\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedLinks}\r\n                />\r\n            );\r\n\r\n            content = this.sharedLinks;\r\n        } else if (openSharedPhotos) {\r\n            this.sharedPhotos = this.sharedPhotos || (\r\n                <SharedPhotos\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedPhotos}\r\n                />\r\n            );\r\n\r\n            content = this.sharedPhotos;\r\n        } else if (openSharedVideos) {\r\n            this.sharedVideos = this.sharedVideos || (\r\n                <SharedVideos\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedVideos}\r\n                />\r\n            );\r\n\r\n            content = this.sharedVideos;\r\n        } else if (openSharedVoiceNotes) {\r\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\r\n                <SharedVoiceNotes\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedVoiceNotes}\r\n                />\r\n            );\r\n\r\n            content = this.sharedVoiceNotes;\r\n        } else if (openGroupInCommon) {\r\n            content = (\r\n                <GroupsInCommon\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseGroupsInCommon}\r\n                />\r\n            );\r\n        } else {\r\n            content = (\r\n                <ChatDetails\r\n                    ref={this.detailsRef}\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    backButton={userChatId === chatId}\r\n                    counters={counters}\r\n                    migratedCounters={migratedCounters}\r\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\r\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\r\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\r\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\r\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\r\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\r\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\r\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\r\n                    onClose={this.handleCloseChatDetails}\r\n                />\r\n            );\r\n        }\r\n\r\n        return popup ? (\r\n            <>{content}</>\r\n        ) : (\r\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfo.propTypes = {\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nChatInfo.defaultProps = {\r\n    className: null,\r\n    classes: null,\r\n    popup: false\r\n};\r\n\r\nexport default ChatInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {\r\n    getChatTypingString,\r\n    getChatDraft,\r\n    getLastMessageSenderName,\r\n    getLastMessageContent,\r\n    showChatDraft, isPrivateChat\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './DialogContent.css';\r\n\r\nclass DialogContent extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateUserChatAction', this.onUpdate);\r\n        UserStore.on('updateUser', this.onUpdateUser);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateUserChatAction', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUser = update => {\r\n        const { chatId } = this.props;\r\n        const { user } = update;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (isPrivateChat(chatId)) return;\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return;\r\n\r\n        const { sender_id } = last_message;\r\n        if (sender_id.user_id !== user.id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        let contentControl = null;\r\n        const typingString = getChatTypingString(chatId);\r\n        if (typingString) {\r\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const draft = getChatDraft(chatId);\r\n            if (showChatDraft(chatId)) {\r\n                const text = draft.text || '\\u00A0';\r\n\r\n                contentControl = (\r\n                    <>\r\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\r\n                        {text}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\r\n            const senderName = getLastMessageSenderName(chat, t);\r\n            contentControl = (\r\n                <>\r\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\r\n                    {content}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return <div className='dialog-content'>{contentControl}</div>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(DialogContent);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\r\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\r\n        <path\r\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\r\n            strokeWidth='1.66'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n        />\r\n    </g>,\r\n    'Pin'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport PinIcon from '../../Assets/Icons/Pin';\r\nimport {\r\n    isChatMuted,\r\n    isChatPinned,\r\n    showChatUnreadCount,\r\n    showChatUnreadMentionCount\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport NotificationStore from '../../Stores/NotificationStore';\r\nimport './DialogBadge.css';\r\n\r\nclass DialogBadge extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, chatList } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatList !== chatList) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.on('updateChatPosition', this.onUpdate);\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.off('updateChatPosition', this.onUpdate);\r\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\r\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId, chatList } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { unread_count } = chat;\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n\r\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\r\n        const showUnreadCount = showChatUnreadCount(chatId);\r\n        const isMuted = isChatMuted(chatId);\r\n\r\n        return (\r\n            <>\r\n                {showUnreadMentionCount && (\r\n                    <div className='dialog-badge'>\r\n                        <div className='dialog-badge-mention'>@</div>\r\n                    </div>\r\n                )}\r\n                {showUnreadCount && (\r\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\r\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\r\n                    </div>\r\n                )}\r\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\r\n                    <div className='dialog-badge-pinned'>\r\n                        <PinIcon className='dialog-badge-pinned-icon' />\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogBadge;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\r\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\r\n        </g>\r\n    </g>,\r\n    'Error'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\r\n        <g transform='translate(-3.000000, 0.000000)'>\r\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\r\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\r\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\r\n        </g>\r\n    </g>,\r\n    'Pending'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-4.000000, -2.000000)'\r\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\r\n    />,\r\n    'Sent'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-1.000000, -2.000000)'\r\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\r\n    />,\r\n    'Succeeded'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '../../Assets/Icons/Error';\r\nimport PendingIcon from '../../Assets/Icons/Pending';\r\nimport SentIcon from '../../Assets/Icons/Sent';\r\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\r\nimport { isMessageUnread } from '../../Utils/Message';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Status.css';\r\n\r\nclass Status extends React.Component {\r\n    state = {};\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId } = props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const sendingState = message ? message.sending_state : null;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                sendingState,\r\n                unread: isMessageUnread(chatId, messageId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\r\n\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\r\n\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\r\n    }\r\n\r\n    onUpdateMessageSendAcknowledged = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        this.setState({ sendingState: null });\r\n    };\r\n\r\n    onUpdateMessageSend = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { old_message_id, message } = update;\r\n\r\n        if (messageId !== old_message_id) return;\r\n        if (!message) return;\r\n\r\n        const { chat_id, id, sending_state } = message;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.newMessageId = id;\r\n        this.setState({ sendingState: sending_state });\r\n    };\r\n\r\n    onUpdateChatReadOutbox = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { chat_id, last_read_outbox_message_id } = update;\r\n        const { newMessageId } = this;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\r\n            this.setState({ sendingState: null, unread: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n        const { sendingState, unread } = this.state;\r\n        if (!unread) {\r\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\r\n        }\r\n\r\n        if (sendingState) {\r\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\r\n                <ErrorIcon\r\n                    className='status'\r\n                    viewBox='0 0 14 14'\r\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\r\n                />\r\n            ) : (\r\n                <PendingIcon\r\n                    className='status'\r\n                    viewBox='0 0 14 14'\r\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\r\n                />\r\n            );\r\n        }\r\n\r\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\r\n    }\r\n}\r\n\r\nStatus.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number\r\n};\r\n\r\nexport default Status;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Status from '../Message/Status';\r\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogMeta.css';\r\n\r\nclass DialogMeta extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const isMe = isMeChat(chatId);\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return null;\r\n\r\n        const date = getLastMessageDate(chat);\r\n        if (!date) return null;\r\n\r\n        const { id, is_outgoing } = last_message;\r\n\r\n        return (\r\n            <div className='dialog-meta'>\r\n                {is_outgoing && !isMe && (\r\n                    <>\r\n                        <Status chatId={chatId} messageId={id} />\r\n                        <span> </span>\r\n                    </>\r\n                )}\r\n                {date}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(DialogMeta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\r\n    'Archive'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\r\n    'Unarchive'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\r\n    'Pin2'\r\n);\r\n\r\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\r\n// <title>Combined Shape</title>\r\n// <desc>Created with Sketch.</desc>\r\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\r\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\r\n// </g>\r\n// </g>\r\n// </svg>\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\r\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\r\n    </g>,\r\n    'PinOff'\r\n);\r\n\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\r\n    'Mute'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\r\n    'Unmute'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\r\n    'User'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\r\n    'Group'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\r\n    'Message'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\r\n    'Unread'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ChatTile from './ChatTile';\r\nimport DialogContent from './DialogContent';\r\nimport DialogBadge from './DialogBadge';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogMeta from './DialogMeta';\r\nimport ArchiveIcon from '../../Assets/Icons/Archive';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\r\nimport PinIcon from '../../Assets/Icons/Pin2';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport MuteIcon from '../../Assets/Icons/Mute';\r\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport MessageIcon from '../../Assets/Icons/Message';\r\nimport UnreadIcon from '../../Assets/Icons/Unread';\r\nimport {\r\n    canAddChatToList,\r\n    canDeleteChat,\r\n    getDeleteChatTitle,\r\n    getViewInfoTitle,\r\n    isChatArchived,\r\n    isChatMuted,\r\n    isChatPinned,\r\n    isChatSecret,\r\n    isChatUnread,\r\n    isMeChat,\r\n    isPrivateChat\r\n} from '../../Utils/Chat';\r\nimport {\r\n    addChatToList,\r\n    leaveChat,\r\n    toggleChatIsMarkedAsUnread,\r\n    toggleChatIsPinned,\r\n    toggleChatNotificationSettings\r\n} from '../../Actions/Chat';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { viewMessages } from '../../Actions/Message';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Dialog.css';\r\nimport { CHAT_IDS_AUTHORIZED } from '../../Constants';\r\n\r\nclass Dialog extends Component {\r\n    static contextMenuId;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialog = React.createRef();\r\n\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        this.state = {\r\n            chat,\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            // console.log('[vl] Dialog.shouldUpdate true t');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== hidden) {\r\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.isLastPinned !== isLastPinned) {\r\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chatList !== chatList) {\r\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\r\n            // console.log('[vl] Dialog.shouldUpdate true style');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[vl] Dialog.shouldUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelect = event => {\r\n        if (event.button === 0) {\r\n            openChat(this.props.chatId);\r\n        }\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { chatId, chatList } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const contextMenuId = new Date();\r\n            Dialog.contextMenuId = contextMenuId;\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const isPinned = isChatPinned(chatId, chatList);\r\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\r\n            const canToggleArchive = canAddChatToList(chatId);\r\n            const canMute = !isMeChat(chatId);\r\n\r\n            if (Dialog.contextMenuId !== contextMenuId) {\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                canTogglePin,\r\n                canToggleArchive,\r\n                canMute,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleMute = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\r\n    };\r\n\r\n    canPinChats = async chatId => {\r\n        const { chatList } = this.props;\r\n\r\n        const pinnedSumMaxOption = isChatArchived(chatId)\r\n            ? OptionStore.get('pinned_archived_chat_count_max')\r\n            : OptionStore.get('pinned_chat_count_max');\r\n        if (!pinnedSumMaxOption) return false;\r\n\r\n        const isSecret = isChatSecret(chatId);\r\n        const chats = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: chatList,\r\n            limit: pinnedSumMaxOption.value + 10\r\n        });\r\n        chats.chat_ids = chats.chat_ids.filter(x => CHAT_IDS_AUTHORIZED.includes(x));\r\n\r\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\r\n            if (isChatSecret(id) !== isSecret) return x;\r\n\r\n            const chat = ChatStore.get(id);\r\n\r\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\r\n        }, 0);\r\n\r\n        return pinnedSum < pinnedSumMaxOption.value;\r\n    };\r\n\r\n    handlePin = async event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId, chatList } = this.props;\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n\r\n        if (!isPinned && !this.canPinChats(chatId)) return;\r\n\r\n        toggleChatIsPinned(chatId, chatList, !isPinned);\r\n    };\r\n\r\n    handleArchive = async event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n        if (!canAddChatToList(chatId)) return;\r\n\r\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\r\n    };\r\n\r\n    handleViewInfo = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        openChat(chatId, null, true);\r\n    };\r\n\r\n    handleRead = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const isUnread = isChatUnread(chatId);\r\n        if (isUnread) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (!chat) return;\r\n\r\n            const { is_marked_as_unread, last_message, unread_count } = chat;\r\n            if (unread_count > 0 && last_message) {\r\n                viewMessages(chatId, [last_message.id], true);\r\n            } else if (is_marked_as_unread) {\r\n                toggleChatIsMarkedAsUnread(chatId, false);\r\n            }\r\n        } else {\r\n            toggleChatIsMarkedAsUnread(chatId, true);\r\n        }\r\n    };\r\n\r\n    handleDeleteChat = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        leaveChat(chatId)\r\n    };\r\n\r\n    render() {\r\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\r\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\r\n\r\n        const deleteChat = canDeleteChat(chatId);\r\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\r\n\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n        const currentChatId = ApplicationStore.getChatId();\r\n        const isSelected = currentChatId === chatId;\r\n        const isMuted = isChatMuted(chatId);\r\n        const isUnread = isChatUnread(chatId);\r\n        const isArchived = isChatArchived(chatId);\r\n        return (\r\n            <ListItem\r\n                button\r\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\r\n                onMouseDown={this.handleSelect}\r\n                onContextMenu={this.handleContextMenu}\r\n                style={style}\r\n                >\r\n                    <div className='dialog-wrapper'>\r\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline showGroupCall/>\r\n                        <div className='dialog-inner-wrapper'>\r\n                            <div className='tile-first-row'>\r\n                                <DialogTitle chatId={chatId} />\r\n                                <DialogMeta chatId={chatId} />\r\n                            </div>\r\n                            <div className='tile-second-row'>\r\n                                <DialogContent chatId={chatId} />\r\n                                <DialogBadge chatId={chatId} chatList={chatList} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Popover\r\n                        open={contextMenu}\r\n                        onClose={this.handleCloseContextMenu}\r\n                        anchorReference='anchorPosition'\r\n                        anchorPosition={{ top, left }}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right'\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'left'\r\n                        }}\r\n                        onMouseDown={e => e.stopPropagation()}>\r\n                        <MenuList onClick={e => e.stopPropagation()}>\r\n                            {canToggleArchive && (\r\n                                <MenuItem onClick={this.handleArchive}>\r\n                                    {isArchived ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnarchiveIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('Unarchive')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <ArchiveIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('Archive')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            {canTogglePin && (\r\n                                <MenuItem onClick={this.handlePin}>\r\n                                    {isPinned ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnpinIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('UnpinFromTop')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <PinIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('PinToTop')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            <MenuItem onClick={this.handleViewInfo}>\r\n                                <ListItemIcon>\r\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\r\n                            </MenuItem>\r\n                            { canMute && (\r\n                                <MenuItem onClick={this.handleMute}>\r\n                                    {isMuted ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnmuteIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('ChatsUnmute')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <MuteIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('ChatsMute')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            <MenuItem onClick={this.handleRead}>\r\n                                {isUnread ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <MessageIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('MarkAsRead')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnreadIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('MarkAsUnread')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                            {/*{clearHistory && (*/}\r\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\r\n                            {/*        <ListItemIcon>*/}\r\n                            {/*            <BroomIcon />*/}\r\n                            {/*        </ListItemIcon>*/}\r\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\r\n                            {/*    </MenuItem>*/}\r\n                            {/*)}*/}\r\n                            {deleteChat && deleteChatTitle && (\r\n                                <MenuItem onClick={this.handleDeleteChat}>\r\n                                    <ListItemIcon>\r\n                                        <DeleteIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={deleteChatTitle} />\r\n                                </MenuItem>\r\n                            )}\r\n                        </MenuList>\r\n                    </Popover>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nDialog.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    chatList: PropTypes.object.isRequired,\r\n    hidden: PropTypes.bool,\r\n    showSavedMessages: PropTypes.bool,\r\n    isLastPinned: PropTypes.bool,\r\n    style: PropTypes.object\r\n};\r\n\r\nDialog.defaultProps = {\r\n    hidden: false,\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(Dialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport './DialogPlaceholder.css';\r\n\r\nclass DialogPlaceholder extends React.Component {\r\n    render() {\r\n        const { chatId, index, showTitle } = this.props;\r\n\r\n        let title = null;\r\n        if (showTitle) {\r\n            title = getChatTitle(chatId, true);\r\n        }\r\n\r\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\r\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\r\n\r\n        return (\r\n            <div className='dialog-placeholder'>\r\n                <div className='dialog-placeholder-wrapper'>\r\n                    <div className='dialog-placeholder-tile' />\r\n                    <div className='dialog-placeholder-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {showTitle ? (\r\n                                title\r\n                            ) : (\r\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\r\n                            )}\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogPlaceholder.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    showTitle: PropTypes.bool\r\n};\r\n\r\nexport default DialogPlaceholder;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './VirtualizedList.css';\r\n\r\nconst style = {\r\n    listWrapper: height => ({\r\n        height,\r\n        position: 'relative'\r\n    }),\r\n    item: (index, height) => ({\r\n        height,\r\n        left: 0,\r\n        right: 0,\r\n        top: height * index,\r\n        position: 'absolute'\r\n    })\r\n};\r\n\r\nexport class VirtualizedList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        this.state = {\r\n            scrollTop: 0,\r\n            renderIds: new Map(),\r\n            renderIdsList: [],\r\n            viewportHeight: 0\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.source !== this.props.source) {\r\n            this.setViewportHeight();\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return true;\r\n\r\n        // const { renderIds } = this.state;\r\n        // const { renderIds: nextRenderIds } = nextState;\r\n        //\r\n        // if (renderIds.size === nextRenderIds.size) {\r\n        //     renderIds.forEach((value, key) => {\r\n        //         if (!nextRenderIds.has(key)) {\r\n        //             return true;\r\n        //         }\r\n        //     });\r\n        //\r\n        //     return false;\r\n        // }\r\n        //\r\n        // return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.setViewportHeight, true);\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n        current.addEventListener('scroll', this.setScrollPosition, true);\r\n\r\n        this.setViewportHeight();\r\n    }\r\n\r\n    setViewportHeight = () => {\r\n        const { source } = this.props;\r\n        const { scrollTop } = this.state;\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n\r\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\r\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\r\n\r\n        // console.log('[vl] setViewportHeight');\r\n        this.setState({ viewportHeight, ...renderIds });\r\n    };\r\n\r\n    getRenderIds(source, viewportHeight, scrollTop) {\r\n        const renderIds = new Map();\r\n        const renderIdsList = [];\r\n        source.forEach((item, index) => {\r\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\r\n                renderIds.set(index, index);\r\n                renderIdsList.push(index);\r\n            }\r\n        });\r\n\r\n        return { renderIds, renderIdsList };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.setViewportHeight);\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n        current.removeEventListener('scroll', this.setScrollPosition);\r\n    }\r\n\r\n    getListRenderIds() {\r\n        const { renderIds } = this.state;\r\n\r\n        return renderIds;\r\n    }\r\n\r\n    setScrollPosition = event => {\r\n        const { source, rowHeight, onScroll } = this.props;\r\n        const { viewportHeight, scrollTop } = this.state;\r\n\r\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\r\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\r\n\r\n            this.setState({\r\n                scrollTop: event.target.scrollTop,\r\n                ...renderIds\r\n            });\r\n        }\r\n\r\n        if (onScroll) {\r\n            onScroll(event);\r\n        }\r\n    };\r\n\r\n    getListRef() {\r\n        return this.listRef;\r\n    }\r\n\r\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\r\n        const { overScanCount, rowHeight } = this.props;\r\n\r\n        const itemTop = index * rowHeight;\r\n        const itemBottom = (index + 1) * rowHeight;\r\n\r\n        return (\r\n            itemTop > scrollTop - overScanCount * rowHeight &&\r\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, source, renderItem, rowHeight } = this.props;\r\n        const { renderIds } = this.state;\r\n\r\n        const items = (source || []).map((item, index) => {\r\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\r\n        });\r\n\r\n        // console.log('[vl] render', source, renderIds);\r\n\r\n        return (\r\n            <div ref={this.listRef} className={classNames('vlist', className)}>\r\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\r\n                    {items}\r\n                </div>\r\n                {/*<div className='vlist-top-border'/>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVirtualizedList.defaultProps = {\r\n    source: [],\r\n    rowHeight: 72,\r\n    overScanCount: 5\r\n};\r\n\r\nVirtualizedList.propTypes = {\r\n    renderItem: PropTypes.func,\r\n    onScroll: PropTypes.func,\r\n    rowHeight: PropTypes.number,\r\n    className: PropTypes.string,\r\n    source: PropTypes.array.isRequired,\r\n    overScanCount: PropTypes.number.isRequired\r\n};\r\n\r\nexport default VirtualizedList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function findLastTextNode(element) {\r\n    if (element.nodeType === Node.TEXT_NODE) {\r\n        return element;\r\n    }\r\n\r\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\r\n        const textNode = findLastTextNode(element.childNodes[i]);\r\n        if (textNode) {\r\n            return textNode;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function focusInput(element) {\r\n    if (!element) return;\r\n\r\n    const textNode = findLastTextNode(element);\r\n    if (textNode) {\r\n        const range = document.createRange();\r\n        range.setStart(textNode, textNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n    }\r\n\r\n    element.focus();\r\n}\r\n\r\nexport function scrollTop(element, behavior = 'smooth') {\r\n    if (!element) return;\r\n    if (element.scrollTop === 0) return;\r\n\r\n    element.scrollTop = Math.min(element.scrollTop, 50);\r\n    setTimeout(() => {\r\n        element.scrollTo({ top: 0, behavior });\r\n    }, 1);\r\n}\r\n\r\nexport function scrollBottom(element, behavior = 'smooth') {\r\n    if (!element) return;\r\n    if (element.scrollTop === element.scrollHeight - element.offsetHeight) return;\r\n\r\n    element.scrollTop = Math.max(element.scrollTop, element.scrollHeight - element.offsetHeight - 50);\r\n    setTimeout(() => {\r\n        element.scrollTo({ top: element.scrollHeight - element.offsetHeight, behavior });\r\n    }, 1);\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\r\n    'Channel'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\r\n    'Menu'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\r\n    'Help'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\r\n    'Settings'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass CacheManager {\r\n    async load(key) {\r\n        const value = localStorage.getItem(key);\r\n        if (!value) return null;\r\n\r\n        try {\r\n            return JSON.parse(value);\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async save(key, value) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    async remove(key) {\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n    async clear() {\r\n        localStorage.clear();\r\n    }\r\n}\r\n\r\nconst manager = new CacheManager();\r\nexport default manager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport EventEmitter from './EventEmitter';\r\nimport { debounce } from '../Utils/Common';\r\nimport CacheManager from '../Workers/CacheManager';\r\nimport {\r\n    STORAGE_CACHE_KEY,\r\n    STORAGE_CACHE_TEST_KEY,\r\n    STORAGE_CONTACTS_KEY,\r\n    STORAGE_CONTACTS_TEST_KEY,\r\n    STORAGE_FILES_KEY,\r\n    STORAGE_FILES_TEST_KEY,\r\n    STORAGE_FILTERS_KEY,\r\n    STORAGE_FILTERS_TEST_KEY, STORAGE_REGISTER_KEY, STORAGE_REGISTER_TEST_KEY\r\n} from '../Constants';\r\nimport BasicGroupStore from './BasicGroupStore';\r\nimport ChatStore from './ChatStore';\r\nimport FileStore from './FileStore';\r\nimport MessageStore from './MessageStore';\r\nimport OptionStore from './OptionStore';\r\nimport SupergroupStore from './SupergroupStore';\r\nimport UserStore from './UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass CacheStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.cacheContacts = false;\r\n\r\n        const { useTestDC } = TdLibController.parameters;\r\n        this.cacheKey = useTestDC ? STORAGE_CACHE_TEST_KEY : STORAGE_CACHE_KEY;\r\n        this.contactsKey = useTestDC ? STORAGE_CONTACTS_TEST_KEY : STORAGE_CONTACTS_KEY;\r\n        this.filesKey = useTestDC ? STORAGE_FILES_TEST_KEY : STORAGE_FILES_KEY;\r\n        this.filtersKey = useTestDC ? STORAGE_FILTERS_TEST_KEY : STORAGE_FILTERS_KEY;\r\n        this.registerKey = useTestDC ? STORAGE_REGISTER_TEST_KEY : STORAGE_REGISTER_KEY;\r\n\r\n        this.reset();\r\n\r\n        this.addTdLibListener();\r\n\r\n        this.saveInternal = debounce(this.saveInternal, 2000, {\r\n            leading: false,\r\n            trailing: true\r\n        });\r\n    }\r\n\r\n    reset = () => {\r\n        this.filters = null;\r\n        this.chatIds = [];\r\n        this.archiveChatIds = [];\r\n        this.meChat = null;\r\n        if (this.cacheContacts) {\r\n            this.contacts = null;\r\n        }\r\n\r\n        this.cache = null;\r\n    };\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateAuthorizationState': {\r\n                const { authorization_state } = update;\r\n                if (!authorization_state) break;\r\n\r\n                switch (authorization_state['@type']) {\r\n                    case 'authorizationStateClosed': {\r\n                        this.reset();\r\n                        this.clear();\r\n                        break;\r\n                    }\r\n                    case 'authorizationStateLoggingOut':\r\n                    case 'authorizationStateWaitCode':\r\n                    case 'authorizationStateWaitPhoneNumber':\r\n                    case 'authorizationStateWaitPassword':\r\n                    case 'authorizationStateWaitRegistration': {\r\n                        CacheManager.remove(this.cacheKey);\r\n                        CacheManager.remove(this.filesKey);\r\n                        if (this.cacheContacts) {\r\n                            CacheManager.remove(this.contactsKey);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateDialogsReady': {\r\n                this.clearDataUrls();\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.on('update', this.onUpdate);\r\n        TdLibController.on('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.off('update', this.onUpdate);\r\n        TdLibController.off('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    async load() {\r\n        const promises = [];\r\n        promises.push(CacheManager.load(this.cacheKey).catch(error => null));\r\n        promises.push(CacheManager.load(this.filesKey).catch(error => null));\r\n        promises.push(CacheManager.load(this.filtersKey).catch(error => null));\r\n        if (this.cacheContacts) {\r\n            promises.push(CacheManager.load(this.contactsKey).catch(error => null));\r\n        }\r\n        let [cache, files, filters, contacts] = await Promise.all(promises);\r\n        // console.log('[f] cache.load', files);\r\n\r\n        let dropCache = false;\r\n        if (cache && cache.chats) {\r\n            for (let i = 0; i < cache.chats.length; i++) {\r\n                const { last_message } = cache.chats[i];\r\n                if (last_message && last_message.sender_user_id) {\r\n                    dropCache = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (dropCache) {\r\n            cache = null;\r\n        }\r\n\r\n        this.cache = cache;\r\n        if (this.cache) {\r\n            this.cache.files = files || [];\r\n        }\r\n\r\n        if (this.cacheContacts) {\r\n            if (contacts) {\r\n                (contacts || []).forEach(x => {\r\n                    UserStore.set(x);\r\n                })\r\n\r\n                this.contacts = {\r\n                    '@type': 'users',\r\n                    user_ids: contacts.map(x => x.id),\r\n                    total_count: contacts.length\r\n                };\r\n            }\r\n        }\r\n\r\n        this.filters = filters;\r\n\r\n        if (this.cache) {\r\n            this.parseCache(this.cache);\r\n        }\r\n\r\n        // console.log('[cm] load', this.filters, filters);\r\n        return this.cache;\r\n    }\r\n\r\n    parseCache(cache) {\r\n        if (!cache) return;\r\n\r\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\r\n        // console.log('[f] cache.parse', cache.files);\r\n\r\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\r\n            FileStore.setDataUrl(id, url);\r\n        });\r\n\r\n        (users || []).forEach(x => {\r\n            UserStore.set(x);\r\n        });\r\n\r\n        (basicGroups || []).forEach(x => {\r\n            BasicGroupStore.set(x);\r\n        });\r\n\r\n        (supergroups || []).forEach(x => {\r\n            SupergroupStore.set(x);\r\n        });\r\n\r\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\r\n            if (x) {\r\n                delete x.OutputTypingManager;\r\n\r\n                ChatStore.set(x);\r\n                if (x.photo) {\r\n                    if (x.photo.small) FileStore.set(x.photo.small);\r\n                    if (x.photo.big) FileStore.set(x.photo.big);\r\n                }\r\n                if (x.position) {\r\n                    ChatStore.updateChatChatLists(x.id);\r\n                }\r\n                if (x.last_message) {\r\n                    MessageStore.set(x.last_message);\r\n                }\r\n            }\r\n        });\r\n\r\n        (options || []).forEach(([id, option]) => {\r\n            OptionStore.set(id, option);\r\n        });\r\n    }\r\n\r\n    async getCache(chatIds, archiveChatIds) {\r\n        const fileMap = new Map();\r\n        const userMap = new Map();\r\n        const basicGroupMap = new Map();\r\n        const supergroupMap = new Map();\r\n        const meChat = this.meChat;\r\n        const chats = chatIds.map(x => ChatStore.get(x));\r\n        const chatMap = new Map(chats.map(x => [x.id, x]));\r\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\r\n\r\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\r\n            const { photo, type, last_message } = x;\r\n            if (photo && photo.small) {\r\n                const { id } = photo.small;\r\n                if (id) {\r\n                    const blob = FileStore.getBlob(id);\r\n                    if (blob) {\r\n                        fileMap.set(id, blob);\r\n                    }\r\n                }\r\n            }\r\n\r\n            switch (type['@type']) {\r\n                case 'chatTypeBasicGroup': {\r\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n                    if (basicGroup) {\r\n                        basicGroupMap.set(basicGroup.id, basicGroup);\r\n                    }\r\n                }\r\n                case 'chatTypePrivate':\r\n                case 'chatTypeSecret': {\r\n                    const user = UserStore.get(type.user_id);\r\n                    if (user) {\r\n                        userMap.set(user.id, user);\r\n                    }\r\n                }\r\n                case 'chatTypeSupergroup': {\r\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\r\n                    if (supergroup) {\r\n                        supergroupMap.set(supergroup.id, supergroup);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (last_message) {\r\n                const { sender_id } = last_message;\r\n                switch (sender_id['@type']) {\r\n                    case 'messageSenderUser': {\r\n                        const user = UserStore.get(sender_id.user_id);\r\n                        if (user) {\r\n                            userMap.set(user.id, user);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'messageSenderChat': {\r\n                        const chat = ChatStore.get(sender_id.chat_id);\r\n                        if (chat) {\r\n                            chatMap.set(chat.id, chat);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return {\r\n            date: new Date(),\r\n            meChat,\r\n            chats: [...chatMap.values()],\r\n            archiveChats,\r\n            users: [...userMap.values()],\r\n            basicGroups: [...basicGroupMap.values()],\r\n            supergroups: [...supergroupMap.values()],\r\n            files: [...fileMap.entries()],\r\n            options: [...OptionStore.items.entries()]\r\n        };\r\n    }\r\n\r\n    async save(filters, chatIds, archiveChatIds) {\r\n        this.chatIds = chatIds;\r\n        this.archiveChatIds = archiveChatIds;\r\n        this.meChat = this.meChat || await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: false\r\n        });\r\n        if (this.cacheContacts) {\r\n            this.contacts = this.contacts || await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n        }\r\n        this.filters = filters;\r\n\r\n        // console.log('[cm] save');\r\n        this.saveInternal();\r\n    }\r\n\r\n    async saveInternal() {\r\n        // console.log('[cm] saveInternal');\r\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\r\n        const files = cache.files;\r\n        cache.files = [];\r\n        // console.log('[cm] save cache', cache);\r\n        await CacheManager.save(this.cacheKey, cache);\r\n\r\n        const promises = [];\r\n        files.forEach(x => {\r\n            const [id, blob] = x;\r\n            promises.push(\r\n                new Promise((resolve, reject) => {\r\n                    const fileReader = new FileReader();\r\n                    fileReader.readAsDataURL(blob);\r\n                    fileReader.onload = e => {\r\n                        resolve({ id, url: e.target.result });\r\n                    };\r\n                    fileReader.onerror = e => {\r\n                        resolve(null);\r\n                    };\r\n                })\r\n            );\r\n        });\r\n        const results = await Promise.all(promises);\r\n        await CacheManager.save(this.filesKey, results);\r\n\r\n        if (this.cacheContacts) {\r\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\r\n            await CacheManager.save(this.contactsKey, contacts);\r\n        }\r\n\r\n        if (this.filters) {\r\n            await CacheManager.save(this.filtersKey, this.filters);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        const promises = [];\r\n        promises.push(CacheManager.remove(this.cacheKey).catch(error => null));\r\n        promises.push(CacheManager.remove(this.filesKey).catch(error => null));\r\n        promises.push(CacheManager.remove(this.filtersKey).catch(error => null));\r\n        promises.push(CacheManager.remove(this.contactsKey).catch(error => null));\r\n        promises.push(CacheManager.remove(this.registerKey).catch(error => null));\r\n\r\n        Promise.all(promises);\r\n    }\r\n\r\n    clearDataUrls() {\r\n        if (this.cache) {\r\n            const { files } = this.cache;\r\n\r\n            files.forEach(({ id, url }) => {\r\n                FileStore.deleteDataUrl(id);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nconst store = new CacheStore();\r\nwindow.cache = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport ChannelIcon from '../../Assets/Icons/Channel';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ArchiveIcon from '../../Assets/Icons/Archive';\r\nimport SearchIcon from '../../Assets/Icons/Search';\r\nimport MenuIcon from '../../Assets/Icons/Menu';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport HelpIcon from '../../Assets/Icons/Help';\r\nimport SavedIcon from '../../Assets/Icons/Saved';\r\nimport SettingsIcon from '../../Assets/Icons/Settings';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\r\nimport { openSupportChat } from '../../Actions/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MainMenuButton.css';\r\n\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            anchorEl: null,\r\n            isSmallWidth: AppStore.isSmallWidth\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCheckUpdates = async () => {\r\n        this.handleMenuClose();\r\n\r\n        //await update();\r\n    };\r\n\r\n    handleNewChannel = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewChannel',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleNewGroup = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleContacts = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateContacts',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleArchived = event => {\r\n        this.handleMenuClose();\r\n\r\n        openArchive();\r\n    };\r\n\r\n    handleSaved = async event => {\r\n        this.handleMenuClose();\r\n\r\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\r\n        if (!chat) {\r\n            chat = await TdLibController.send({\r\n                '@type': 'createPrivateChat',\r\n                user_id: UserStore.getMyId(),\r\n                force: false\r\n            });\r\n        }\r\n\r\n        if (!chat) return;\r\n\r\n        openChat(chat.id);\r\n    };\r\n\r\n    handleSettings = async event => {\r\n        this.handleMenuClose();\r\n\r\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\r\n        if (!chat) {\r\n            chat = await TdLibController.send({\r\n                '@type': 'createPrivateChat',\r\n                user_id: UserStore.getMyId(),\r\n                force: false\r\n            });\r\n        }\r\n\r\n        if (!chat) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSettings',\r\n            open: true,\r\n            chatId: chat.id\r\n        });\r\n    };\r\n\r\n    handleHelp = async event => {\r\n        this.handleMenuClose();\r\n\r\n        openSupportChat();\r\n    };\r\n\r\n    handleSearch = () => {\r\n        this.handleMenuClose();\r\n\r\n        searchChat(0);\r\n    };\r\n\r\n    render() {\r\n        const { t, timeout, popup, showClose, onClose } = this.props;\r\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\r\n\r\n        const mainMenuControl =\r\n            !showClose && isAuthorizationReady(authorizationState) ? (\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleNewChannel}>\r\n                        <ListItemIcon>\r\n                            <ChannelIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('NewChannel')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleNewGroup}>\r\n                        <ListItemIcon>\r\n                            <GroupIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('NewGroup')} />\r\n                    </MenuItem>\r\n                    { isSmallWidth && (\r\n                        <MenuItem onClick={this.handleSearch}>\r\n                            <ListItemIcon>\r\n                                <SearchIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Search')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    <MenuItem onClick={this.handleContacts}>\r\n                        <ListItemIcon>\r\n                            <UserIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Contacts')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleArchived}>\r\n                        <ListItemIcon>\r\n                            <ArchiveIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Archived')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleSaved}>\r\n                        <ListItemIcon>\r\n                            <SavedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Saved')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleSettings}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Settings')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleHelp}>\r\n                        <ListItemIcon>\r\n                            <HelpIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('SettingsHelp')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            ) : null;\r\n\r\n        const closeIcon = popup\r\n            ? <CloseIcon/>\r\n            : <ArrowBackIcon/>;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='header-left-button main-menu-button'\r\n                    aria-label='Menu'\r\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\r\n                    { timeout\r\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\r\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\r\n                    }\r\n\r\n                </IconButton>\r\n                {mainMenuControl}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SearchIcon from '../../../Assets/Icons/Search';\r\nimport './SearchInput.css';\r\n\r\nclass SearchInput extends React.Component {\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        } else if (event.keyCode === 27) {\r\n            const { onChange, onClose } = this.props;\r\n\r\n            const element = event.target;\r\n            if (!element) return;\r\n\r\n            if (element.innerText) {\r\n                event.stopPropagation();\r\n                event.nativeEvent.stopImmediatePropagation();\r\n\r\n                element.innerText = null;\r\n                if (onChange) onChange(element.innerText);\r\n                return;\r\n            }\r\n\r\n            if (onClose) {\r\n                onClose(event);\r\n            }\r\n        } else if (event.keyCode === 8) {\r\n            const { onBackspace } = this.props;\r\n\r\n            const element = event.target;\r\n            if (!element) return;\r\n            if (element.innerText) return;\r\n\r\n            if (onBackspace) {\r\n                event.stopPropagation();\r\n                onBackspace();\r\n            }\r\n        }\r\n    };\r\n\r\n    handleKeyUp = event => {\r\n        const element = event.target;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { onChange } = this.props;\r\n\r\n        const element = event.target;\r\n        if (!element) return;\r\n\r\n        if (onChange) {\r\n            onChange(element.innerText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\r\n\r\n        return (\r\n            <div className='search-input'>\r\n                <div className='search-input-wrapper'>\r\n                    {showIcon && <SearchIcon className='search-input-icon' />}\r\n                    <div\r\n                        id='search-inputbox'\r\n                        ref={inputRef}\r\n                        placeholder={hint || t('Search')}\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        onKeyDown={this.handleKeyDown}\r\n                        onKeyUp={this.handleKeyUp}\r\n                        onPaste={this.handlePaste}\r\n                        onInput={this.handleInput}\r\n                        onFocus={onFocus}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearchInput.propTypes = {\r\n    inputRef: PropTypes.object,\r\n    hint: PropTypes.string,\r\n    showIcon: PropTypes.bool,\r\n    onBackspace: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onFocus: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nSearchInput.defaultProps = {\r\n    showIcon: true\r\n}\r\n\r\nexport default withTranslation()(SearchInput);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport SearchInput from './Search/SearchInput';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport '../ColumnMiddle/Header.css';\r\n\r\nclass DialogsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            open: false\r\n        };\r\n    }\r\n\r\n    setInitQuery(query) {\r\n        const { onSearchTextChange } = this.props;\r\n\r\n        const searchInput = this.searchInputRef.current;\r\n        if (searchInput) {\r\n            searchInput.innerText = query;\r\n            if (searchInput.childNodes.length > 0) {\r\n                const range = document.createRange();\r\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\r\n                range.collapse(true);\r\n\r\n                const selection = window.getSelection();\r\n                selection.removeAllRanges();\r\n                selection.addRange(range);\r\n            }\r\n            searchInput.focus();\r\n            onSearchTextChange(query);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { openSearch } = this.props;\r\n\r\n        if (openSearch !== prevProps.openSearch) {\r\n            if (openSearch) {\r\n                this.focusInput();\r\n            } else {\r\n                const searchInput = this.searchInputRef.current;\r\n                if (searchInput) {\r\n                    searchInput.innerText = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    focusInput() {\r\n        const searchInput = this.searchInputRef.current;\r\n        if (searchInput) {\r\n            searchInput.focus();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.popup) {\r\n            this.focusInput();\r\n        }\r\n\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleSearch = () => {\r\n        const { onSearch, openSearch } = this.props;\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        onSearch(!openSearch);\r\n    };\r\n\r\n    handleSearchTextChange = () => {\r\n        const { onSearchTextChange } = this.props;\r\n\r\n        const element = this.searchInputRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        onSearchTextChange(innerText);\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.handleSearch();\r\n    };\r\n\r\n    handleFocus = () => {\r\n        this.handleSearch();\r\n    };\r\n\r\n    render() {\r\n        const { openSearch, timeout, popup } = this.props;\r\n\r\n        let content = null;\r\n        let showBack = false;\r\n        if (openSearch) {\r\n            showBack = true;\r\n            content = (\r\n                <SearchInput\r\n                    inputRef={this.searchInputRef}\r\n                    onChange={this.handleSearchTextChange}\r\n                    onClose={this.handleCloseSearch}\r\n                />\r\n            );\r\n        } else {\r\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogsHeader.propTypes = {\r\n    openSearch: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func,\r\n    onSearch: PropTypes.func.isRequired,\r\n    onSearchTextChange: PropTypes.func.isRequired,\r\n    timeout: PropTypes.bool,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nexport default DialogsHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport Animator from '../../Utils/Animatior';\r\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\r\nimport { openChatList } from '../../Actions/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport './Filters.css';\r\n\r\nclass Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.filterRef = new Map();\r\n        this.filtersRef = React.createRef();\r\n        this.filterSelectionRef = React.createRef();\r\n\r\n        const { isSmallWidth } = AppStore;\r\n        const { filters, chatList } = FilterStore;\r\n\r\n        this.state = {\r\n            isSmallWidth,\r\n            filters,\r\n            chatList\r\n        };\r\n\r\n        this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.observeResize();\r\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\r\n\r\n        this.setSelection();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.unobserveResize();\r\n        this.observeResize();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unobserveResize();\r\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\r\n    }\r\n\r\n    hasObserver = () => {\r\n        return 'ResizeObserver' in window;\r\n    };\r\n\r\n    observeResize() {\r\n        if (!this.hasObserver()) return;\r\n        const filters = this.filtersRef.current;\r\n        if (!filters) return;\r\n\r\n        const observer = new ResizeObserver(this.onWindowResize);\r\n        observer.observe(filters);\r\n\r\n        this.resizeObserver = { observer, filters }\r\n    }\r\n\r\n    unobserveResize() {\r\n        if (!this.hasObserver()) return;\r\n        if (!this.resizeObserver) return;\r\n\r\n        const { observer, filters } = this.resizeObserver;\r\n        if (!observer) return;\r\n        if (!filters) return;\r\n\r\n        observer.unobserve(filters);\r\n    }\r\n\r\n    onClientUpdateLanguageChange = update => {\r\n        if (!this.hasObserver()) this.setSelection(false);\r\n    };\r\n\r\n    onClientUpdateCacheLoaded = update => {\r\n        const { filters } = this.state;\r\n        if (filters) return;\r\n\r\n        const { filters: cachedFilters } = CacheStore;\r\n        if (!cachedFilters) return;\r\n\r\n        this.setState({\r\n            filters: cachedFilters\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection(false);\r\n        });\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        this.setSelection(true);\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        this.setState({\r\n            isSmallWidth\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection(false);\r\n        });\r\n    };\r\n\r\n    setSelection = (transition = true) => {\r\n        const { chatList, filters, isSmallWidth } = this.state;\r\n\r\n        const scroll = this.filtersRef.current;\r\n        const padding = 3;\r\n\r\n        let item = null;\r\n        let left = 9;\r\n        if (chatList['@type'] === 'chatListMain') {\r\n            const main = this.filterRef.get('chatListMain');\r\n            if (main){\r\n                item = main.firstChild;\r\n                left = item.offsetLeft;\r\n            }\r\n        } else if (chatList['@type'] === 'chatListFilter') {\r\n            for (let i = 0; i < filters.length; i++) {\r\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\r\n                if (filters[i].id === chatList.chat_filter_id) {\r\n                    item = filter.firstChild;\r\n                    left = item.offsetLeft;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (!item) return;\r\n\r\n        const filterSelection = this.filterSelectionRef.current;\r\n        if (filterSelection) {\r\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\r\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\r\n        }\r\n\r\n        if (item && transition){\r\n            const { animator } = this;\r\n\r\n            if (animator) {\r\n                animator.stop();\r\n            }\r\n\r\n            this.animator = new Animator(250, [\r\n                {\r\n                    from: scroll.scrollLeft,\r\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\r\n                    func: left => (scroll.scrollLeft = left)\r\n                }\r\n            ]);\r\n\r\n            setTimeout(() => {\r\n                if (!this.animator) return;\r\n\r\n                this.animator.start();\r\n            }, 0);\r\n\r\n\r\n            // item.scrollIntoView();\r\n        }\r\n    };\r\n\r\n    onUpdateChatFilters = update => {\r\n        const { chatList } = this.state;\r\n        const { filters } = FilterStore;\r\n\r\n        this.setState({\r\n            filters\r\n        }, () => {\r\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\r\n                this.handleMainClick();\r\n            } else {\r\n                if (!this.hasObserver()) this.setSelection();\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatList = update => {\r\n        const { chatList } = FilterStore;\r\n\r\n        this.setState({\r\n            chatList\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    };\r\n\r\n    handleMainClick = event => {\r\n        if (event && event.button !== 0) return;\r\n\r\n        openChatList({ '@type': 'chatListMain' });\r\n    };\r\n\r\n    handleFilterClick = (event, id) => {\r\n        if (event && event.button !== 0) return;\r\n\r\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\r\n    };\r\n\r\n    handleWheel = event => {\r\n        if (!event.deltaY) {\r\n            return;\r\n        }\r\n\r\n        event.currentTarget.scrollLeft += event.deltaY;\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { filters, chatList, isSmallWidth } = this.state;\r\n\r\n        if (!filters) return null;\r\n        if (!filters.length) return null;\r\n\r\n        this.filterRef = new Map();\r\n        return (\r\n            <div className='tabs'>\r\n                <div className='tabs-bottom-border'/>\r\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\r\n                    <div\r\n                        ref={r => this.filterRef.set('chatListMain', r)}\r\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\r\n                        onMouseDown={this.handleMainClick}\r\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\r\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\r\n                    </div>\r\n                    {filters.map(x => (\r\n                        <div\r\n                            key={x.id}\r\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\r\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\r\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\r\n                            title={isSmallWidth ? x.title : null}>\r\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\r\n                        </div>))}\r\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n\r\n};\r\n\r\nexport default withTranslation()(Filters);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '../Tile/Dialog';\r\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\r\nimport { scrollTop } from '../../Utils/DOM';\r\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\r\nimport { CHAT_IDS_AUTHORIZED, CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './DialogsList.css';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport DialogsHeader from './DialogsHeader';\r\nimport Filters from './Filters';\r\n\r\nclass DialogListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, chatList, style, hidden } = this.props;\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatList !== chatList) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== hidden) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true style');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, chatList, hidden, style } = this.props;\r\n\r\n        return (\r\n            <div className='dialog-list-item' style={style}>\r\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass DialogsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hiddenChats = new Map();\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        const { authorizationState } = AppStore;\r\n        this.state = {\r\n            authorizationState,\r\n            chats: null,\r\n            fistSliceLoaded: false,\r\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\r\n            params: {\r\n                loading: false,\r\n                completed: false\r\n            }\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { theme, cacheItems } = this.props;\r\n        const { chats, chatList } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.cacheItems !== cacheItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chats !== chats) {\r\n            return true;\r\n        }\r\n\r\n        // if (nextState.chatList !== chatList) {\r\n        //     return true;\r\n        // }\r\n\r\n        return false;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return { scrollTop: 0 };\r\n\r\n        return { scrollTop: list.scrollTop };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFirstSlice();\r\n\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\r\n\r\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\r\n\r\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\r\n\r\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\r\n\r\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onClientUpdateChatList = update => {\r\n        const { chatList } = update;\r\n\r\n        if (chatListEquals(this.state.chatList, chatList)) {\r\n            this.scrollToTop();\r\n        } else {\r\n            this.setState({\r\n                chatList,\r\n                params: {\r\n                    loading: false,\r\n                    completed: false\r\n                }\r\n            }, () => {\r\n                this.loadFirstSlice();\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        // const { supegroup, prevSupergroup } = update;\r\n        //\r\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\r\n        //     return;\r\n        // }\r\n\r\n\r\n    };\r\n\r\n    onClientUpdateLeaveChat = update => {\r\n        const { inProgress, chatId } = update;\r\n\r\n        if (inProgress) {\r\n            this.hiddenChats.set(chatId, chatId);\r\n        } else {\r\n            this.hiddenChats.delete(chatId);\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        const { authorization_state: authorizationState } = update;\r\n\r\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.onLoadNext(true);\r\n    };\r\n\r\n    loadFirstSlice = async () => {\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        await FileStore.initDB(() => this.onLoadNext(true));\r\n    };\r\n\r\n    saveCache = () => {\r\n        const { onSaveCache, type } = this.props;\r\n        const { chatList } = this.state;\r\n        if (type !== 'chatListMain') return;\r\n        if (chatList['@type'] !== 'chatListMain') return;\r\n\r\n        if (onSaveCache) onSaveCache();\r\n    };\r\n\r\n    onUpdateChatPosition = update => {\r\n        const { chatList } = this.state;\r\n        const { position } = update;\r\n\r\n        if (!chatListEquals(chatList, position.list)) {\r\n            return;\r\n        }\r\n\r\n        this.onUpdateChatOrder(update);\r\n    };\r\n\r\n    onUpdateChatOrder = update => {\r\n        const { chats, chatList, params } = this.state;\r\n        if (!chats) return;\r\n\r\n        const { loading } = params;\r\n        if (loading && !chats.length) return;\r\n\r\n        const { chat_id } = update;\r\n\r\n        const chat = ChatStore.get(chat_id);\r\n        if (!chat) {\r\n            return;\r\n        }\r\n\r\n        if (!hasChatList(chat_id, chatList)) {\r\n            return;\r\n        }\r\n\r\n        const order = getChatOrder(chat_id, chatList);\r\n        const currentIndex = chats.findIndex(x => x === chat_id);\r\n        if (currentIndex === -1 && order === '0') {\r\n            return;\r\n        }\r\n\r\n        const chatIds = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            const chat = ChatStore.get(chats[i]);\r\n            const chatOrder = getChatOrder(chats[i], chatList);\r\n            if (chat && chatOrder !== '0') {\r\n                chatIds.push(chat.id);\r\n            }\r\n        }\r\n\r\n        const newChatIds = [];\r\n        if (order === '0') {\r\n            // unselect deleted chat\r\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\r\n                TdLibController.setChatId(0);\r\n                changeChatDetailsVisibility(false);\r\n            }\r\n        } else {\r\n            if (currentIndex === -1) {\r\n                if (loading) {\r\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\r\n                    // TODO: check and add if within loaded part\r\n                } else {\r\n                    newChatIds.push(chat_id);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.reorderChats(chatIds, newChatIds, () => {\r\n            this.loadChatContents(newChatIds);\r\n            this.saveCache();\r\n        });\r\n    };\r\n\r\n    reorderChats(chatIds, newChatIds = [], callback) {\r\n        const { chatList } = this.state;\r\n\r\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\r\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\r\n        });\r\n\r\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        // console.log('[vl] reorderChats', orderedChatIds);\r\n        this.setState({ chats: orderedChatIds }, callback);\r\n    }\r\n\r\n    static isDifferentOrder(oldChatIds, newChatIds) {\r\n        if (oldChatIds.length === newChatIds.length) {\r\n            for (let i = 0; i < oldChatIds.length; i++) {\r\n                if (oldChatIds[i] !== newChatIds[i]) return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    handleScroll = () => {\r\n    };\r\n\r\n    onLoadPrev() {\r\n\r\n    }\r\n\r\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\r\n        const { type } = this.props;\r\n        const { chats, chatList, params } = this.state;\r\n\r\n        // console.log('[folders] onLoadNext', chatList, limit);\r\n        if (params.loading) {\r\n            // console.log('[folders] onLoadNext cancel loading', chatList);\r\n            return;\r\n        }\r\n\r\n        if (params.completed) {\r\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\r\n            return;\r\n        }\r\n\r\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\r\n        let offsetChatId = 0;\r\n        let offsetChat = null;\r\n        if (!replace && chats && chats.length > 0) {\r\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\r\n            if (offsetChat) {\r\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\r\n                offsetChatId = offsetChat.id;\r\n            }\r\n        }\r\n\r\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: chatList,\r\n            limit: 300\r\n        }).finally(() => {\r\n            params.loading = false;\r\n            if (replace) {\r\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\r\n            }\r\n        });\r\n        result.chat_ids = result.chat_ids.filter(x => CHAT_IDS_AUTHORIZED.includes(x));\r\n        // console.log('result.chat_ids', result.chat_ids)\r\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\r\n\r\n        if (params !== this.state.params) {\r\n            // console.log('[folders] onLoadNext cancel', chatList);\r\n            return;\r\n        }\r\n\r\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\r\n            result.chat_ids.shift();\r\n        }\r\n\r\n        params.completed = !result.chat_ids.length;\r\n\r\n        if (replace) {\r\n            this.replaceChats(result.chat_ids, () => {\r\n                this.loadChatContents(result.chat_ids);\r\n                this.saveCache();\r\n\r\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\r\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\r\n                }\r\n\r\n                const list = this.listRef.current.getListRef().current;\r\n                if (!list) return;\r\n                list.scrollTop = 0;\r\n            });\r\n        } else {\r\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\r\n            this.appendChats(result.chat_ids, () => {\r\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\r\n                this.loadChatContents(result.chat_ids);\r\n\r\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\r\n                    this.onLoadNext(false, limit - result.chat_ids.length);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    loadChatContents(chatIds) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chatIds);\r\n    }\r\n\r\n    appendChats(chatIds, callback) {\r\n        if (chatIds.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        const { chats } = this.state;\r\n\r\n        const newChats = (chats || []).concat(chatIds);\r\n        this.setState({ chats: newChats }, callback);\r\n    }\r\n\r\n    replaceChats(chats, callback) {\r\n        this.setState({ chats }, callback);\r\n    }\r\n\r\n    scrollToTop() {\r\n        const list = this.listRef.current.getListRef().current;\r\n\r\n        scrollTop(list);\r\n    }\r\n\r\n    renderItem = ({ index, style }, source, stub = false) => {\r\n        const { chatList } = this.state;\r\n        const x = source[index];\r\n\r\n        if (stub) {\r\n            return <DialogPlaceholder key={index} index={index} />\r\n        }\r\n\r\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\r\n\r\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\r\n    };\r\n\r\n    render() {\r\n        const { cacheItems } = this.props;\r\n        const { chats, chatList } = this.state;\r\n\r\n        this.source = [];\r\n        this.stub = false;\r\n        if (chats) {\r\n            let lastPinnedId = 0;\r\n            chats.forEach(x => {\r\n                if (isChatPinned(x, chatList)) {\r\n                    lastPinnedId = x;\r\n                }\r\n            });\r\n            this.source = chats;\r\n        } else if (cacheItems) {\r\n            let lastPinnedId = 0;\r\n            cacheItems.forEach(x => {\r\n                if (isChatPinned(x, chatList)) {\r\n                    lastPinnedId = x;\r\n                }\r\n            });\r\n            this.source = cacheItems.map(x => x.id);\r\n        } else {\r\n            if (chatList['@type'] === 'chatListMain') {\r\n                this.source = Array.from(Array(10));\r\n                this.stub = true;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <VirtualizedList\r\n                ref={this.listRef}\r\n                className='dialogs-list'\r\n                source={this.source}\r\n                rowHeight={76}\r\n                overScanCount={20}\r\n                renderItem={x => this.renderItem(x, this.source, this.stub)}\r\n                onScroll={this.handleScroll}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nDialogsList.propTypes = {\r\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\r\n    cacheItems: PropTypes.array,\r\n};\r\n\r\nexport default DialogsList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport DialogsList from './DialogsList';\r\n\r\nclass Archive extends React.Component {\r\n    handleClick = () => {\r\n        const { innerListRef } = this.props;\r\n        if (!innerListRef) return;\r\n\r\n        const { current: list } = innerListRef;\r\n        if (!list) return;\r\n\r\n        list.scrollToTop();\r\n    };\r\n\r\n    render() {\r\n        const { t, innerListRef, cacheItems, onClose } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\r\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='dialogs-content'>\r\n                    <DialogsList\r\n                        type='chatListArchive'\r\n                        ref={innerListRef}\r\n                        cacheItems={cacheItems}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nArchive.propTypes = {};\r\n\r\nexport default withTranslation()(Archive);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ChatTile from './ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './TopChat.css';\r\n\r\nclass TopChat extends React.PureComponent {\r\n    state = {\r\n        contextMenu: false,\r\n        top: 0,\r\n        left: 0\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleDelete = event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\r\n        const { contextMenu, top, left } = this.state;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\r\n\r\n        return (\r\n            <>\r\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\r\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline showGroupCall/>\r\n                    <div className='top-chat-title'>{shortTitle}</div>\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nTopChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nTopChat.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(TopChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Chat from './Chat';\r\nimport './RecentlyFoundChat.css';\r\n\r\nclass RecentlyFoundChat extends React.PureComponent {\r\n    state = {\r\n        contextMenu: false,\r\n        top: 0,\r\n        left: 0\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleDelete = event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, onClick } = this.props;\r\n        const { contextMenu, top, left } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <ListItem\r\n                    button\r\n                    className='recently-found-chat'\r\n                    onClick={onClick}\r\n                    onContextMenu={this.handleContextMenu}>\r\n                    <Chat chatId={chatId} />\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nRecentlyFoundChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(RecentlyFoundChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Chat from './Chat';\r\nimport { getChatUsername } from '../../Utils/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './FoundPublicChat.css';\r\n\r\nclass FoundPublicChat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: AppStore.getChatId(),\r\n            previousChatId: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId, previousChatId } = update;\r\n\r\n        this.setState({\r\n            nextChatId: nextChatId,\r\n            previousChatId: previousChatId\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClick } = this.props;\r\n        const { nextChatId: selectedChatId } = this.state;\r\n\r\n        const username = getChatUsername(chatId);\r\n\r\n        return (\r\n            <ListItem\r\n                button\r\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\r\n                onClick={onClick}>\r\n                <div className='found-public-chat-wrapper'>\r\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundPublicChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default FoundPublicChat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ChatTile from './ChatTile';\r\nimport UserTile from './UserTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\r\nimport { getContent } from '../../Utils/Message';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './FoundMessage.css';\r\n\r\nclass FoundMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: AppStore.getChatId(),\r\n            nextMessageId: AppStore.getMessageId()\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.setState({\r\n            ...update\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\r\n        const selectedChatId = this.state.nextChatId;\r\n        const selectedMessageId = this.state.nextMessageId;\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        const { sender_id } = message;\r\n\r\n        const date = getMessageDate(message);\r\n        const senderName = getMessageSenderName(message, t);\r\n        const senderFullName = getMessageSenderFullName(message, t);\r\n        const content = getContent(message, t) || '\\u00A0';\r\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\r\n\r\n        const tile =\r\n            sender_id.user_id && chatSearch ? (\r\n                <UserTile userId={sender_id.user_id} dialog />\r\n            ) : (\r\n                <ChatTile chatId={chatId} dialog />\r\n            );\r\n\r\n        return (\r\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\r\n                <div className='dialog-wrapper'>\r\n                    {tile}\r\n                    <div className='dialog-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {chatSearch && senderFullName ? (\r\n                                <div className='dialog-title'>{senderFullName}</div>\r\n                            ) : (\r\n                                <DialogTitle chatId={chatId} />\r\n                            )}\r\n                            <div className='dialog-meta'>{date}</div>\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-content'>\r\n                                {\r\n                                    <>\r\n                                        {!chatSearch && senderName && (\r\n                                            <span className='dialog-content-accent'>{senderName}: </span>\r\n                                        )}\r\n                                        {content}\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    chatSearch: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FoundMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './SectionHeader.css';\r\n\r\nfunction SectionHeader({ command, multiline, onClick, children }) {\r\n    return (\r\n        <div className='section-header'>\r\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\r\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\r\n        </div>\r\n    );\r\n}\r\n\r\nSectionHeader.propTypes = {\r\n    command: PropTypes.string,\r\n    multiline: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default SectionHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Chat from '../../Tile/Chat';\r\nimport TopChat from '../../Tile/TopChat';\r\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\r\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\r\nimport FoundMessage from '../../Tile/FoundMessage';\r\nimport SectionHeader from '../SectionHeader';\r\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\r\nimport { filterDuplicateMessages } from '../../../Utils/Message';\r\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\r\nimport { orderCompare } from '../../../Utils/Common';\r\nimport { getChatOrder } from '../../../Utils/Chat';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport { SCROLL_PRECISION, SEARCH_GLOBAL_TEXT_MIN, USERNAME_LENGTH_MIN } from '../../../Constants';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Search.css';\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n        this.listRef = React.createRef();\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { text } = this.props;\r\n\r\n        this.searchOrLoadContent(text);\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                event.target.blur();\r\n\r\n                this.handleClose();\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, text } = this.props;\r\n\r\n        if (prevProps.text !== text) {\r\n            this.searchOrLoadContent(text);\r\n        } else if (prevProps.chatId !== chatId) {\r\n            this.searchOrLoadContent(text);\r\n        }\r\n    }\r\n\r\n    searchOrLoadContent(text) {\r\n        const trimmedText = text ? text.trim() : '';\r\n\r\n        if (!trimmedText) {\r\n            this.loadContent();\r\n        } else {\r\n            this.searchText(trimmedText);\r\n        }\r\n    }\r\n\r\n    concatSearchResults = results => {\r\n        const arr = [];\r\n        const map = new Map();\r\n\r\n            for (let i = 0; i < results.length; i++) {\r\n            let result = results[i] && results[i].chat_ids;\r\n            if (result) {\r\n                for (let j = 0; j < result.length; j++) {\r\n                    if (!map.has(result[j])) {\r\n                        map.set(result[j], result[j]);\r\n                        arr.push(result[j]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        arr.sort((a, b) => {\r\n            return orderCompare(getChatOrder(b), getChatOrder(a));\r\n        });\r\n\r\n        return arr;\r\n    };\r\n\r\n    searchText = async text => {\r\n        this.sessionId = new Date();\r\n        this.text = text;\r\n        const sessionId = this.sessionId;\r\n        let store = null;\r\n\r\n        // console.log('[se] searchText=' + text);\r\n\r\n        const { chatId } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (!chatId) {\r\n            const promises = [];\r\n            const localPromise = TdLibController.send({\r\n                '@type': 'searchChats',\r\n                query: text,\r\n                limit: 100\r\n            });\r\n            promises.push(localPromise);\r\n\r\n            const latinText = getLatinInput(text);\r\n            if (latinText && latinText !== text) {\r\n                const latinLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: latinText,\r\n                    limit: 100\r\n                });\r\n                promises.push(latinLocalPromise);\r\n            }\r\n\r\n            const cyrillicText = getCyrillicInput(text);\r\n            if (cyrillicText && cyrillicText !== text) {\r\n                const cyrillicLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: cyrillicText,\r\n                    limit: 100\r\n                });\r\n                promises.push(cyrillicLocalPromise);\r\n            }\r\n\r\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\r\n            const local = this.concatSearchResults(results);\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            if (savedMessages) {\r\n                const { t } = this.props;\r\n\r\n                const searchText = text.toUpperCase();\r\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\r\n\r\n                if (\r\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\r\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\r\n                ) {\r\n                    local.splice(0, 0, savedMessages.id);\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: local\r\n            });\r\n\r\n            store = FileStore.getStore();\r\n            loadChatsContent(store, local);\r\n\r\n            let trimmedText = text.trim();\r\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\r\n            if (trimmedText.length >= SEARCH_GLOBAL_TEXT_MIN) {\r\n                trimmedText = trimmedText.length === SEARCH_GLOBAL_TEXT_MIN ? trimmedText + '.' : trimmedText;\r\n\r\n                const globalPromises = [];\r\n\r\n                const globalPromise = TdLibController.send({\r\n                    '@type': 'searchPublicChats',\r\n                    query: trimmedText\r\n                });\r\n                globalPromises.push(globalPromise);\r\n\r\n                if (latinText) {\r\n                    let latinTrimmedText = latinText.trim();\r\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\r\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\r\n                        const globalLatinPromise = TdLibController.send({\r\n                            '@type': 'searchPublicChats',\r\n                            query: latinTrimmedText\r\n                        });\r\n                        globalPromises.push(globalLatinPromise);\r\n                    }\r\n                }\r\n\r\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\r\n                const global = this.concatSearchResults(globalResults);\r\n\r\n                if (sessionId !== this.sessionId) {\r\n                    return;\r\n                }\r\n\r\n                this.setState({\r\n                    global\r\n                });\r\n\r\n                store = FileStore.getStore();\r\n                loadChatsContent(store, global);\r\n            } else {\r\n                this.setState({\r\n                    global: null\r\n                });\r\n            }\r\n        }\r\n\r\n        let messages = [];\r\n        if (chatId) {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: text,\r\n                sender_user_id: 0,\r\n                from_message_id: 0,\r\n                offset: 0,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                chat_list: { '@type': 'chatListMain' },\r\n                query: text,\r\n                offset_date: 0,\r\n                offset_chat_id: 0,\r\n                offset_message_id: 0,\r\n                limit: 50\r\n            });\r\n        }\r\n\r\n        MessageStore.setItems(messages.messages);\r\n\r\n        let linkMessage = null;\r\n        if (!chatId) {\r\n            try {\r\n                const messageLinkInfo = await TdLibController.send({\r\n                    '@type': 'getMessageLinkInfo',\r\n                    url: text\r\n                });\r\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\r\n\r\n                MessageStore.setItems([messageLinkInfo.message]);\r\n\r\n                linkMessage = messageLinkInfo;\r\n            } catch (error) {\r\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\r\n            }\r\n        }\r\n\r\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\r\n\r\n        this.setState({\r\n            messages,\r\n            linkMessage\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < messages.messages.length; i++) {\r\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\r\n            if (messages.messages[i].sender_id.user_id) {\r\n                users.set(messages.messages[i].sender_id.user_id, messages.messages[i].sender_id.user_id);\r\n            }\r\n        }\r\n\r\n        if (linkMessage) {\r\n            const { chat_id, message } = linkMessage;\r\n\r\n            chats.set(chat_id, chat_id);\r\n            if (message) {\r\n                const { sender_id } = message;\r\n                if (sender_id && sender_id.user_id) {\r\n                    users.set(sender_id.user_id, sender_id.user_id);\r\n                }\r\n            }\r\n        }\r\n\r\n        store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    loadContent = async () => {\r\n        const { chatId } = this.props;\r\n        if (chatId) {\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: null,\r\n                global: null,\r\n                messages: null,\r\n                linkMessage: null\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const topPromise = TdLibController.send({\r\n            '@type': 'getTopChats',\r\n            category: { '@type': 'topChatCategoryUsers' },\r\n            limit: 30\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const recentlyFoundPromise = TdLibController.send({\r\n            '@type': 'searchChats',\r\n            query: '',\r\n            limit: 100\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        }).catch(error => {});\r\n\r\n        const [top, recentlyFound, savedMessages] = await Promise.all([\r\n            topPromise,\r\n            recentlyFoundPromise,\r\n            savedMessagesPromise\r\n        ]);\r\n\r\n        this.setState({\r\n            top,\r\n            recentlyFound,\r\n            savedMessages,\r\n            local: null,\r\n            global: null,\r\n            messages: null,\r\n            linkMessage: null\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, top.chat_ids);\r\n        loadChatsContent(store, recentlyFound.chat_ids);\r\n    };\r\n\r\n    handleClearRecentlyFound = event => {\r\n        event.stopPropagation();\r\n\r\n        TdLibController.send({\r\n            '@type': 'clearRecentlyFoundChats'\r\n        });\r\n\r\n        this.setState({ recentlyFound: null });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\r\n        const { onSelectMessage } = this.props;\r\n\r\n        if (addToRecent) {\r\n            TdLibController.send({\r\n                '@type': 'addRecentlyFoundChat',\r\n                chat_id: chatId\r\n            });\r\n        }\r\n\r\n        onSelectMessage(chatId, messageId, keepOpen);\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            this.onLoadPrevious();\r\n        }\r\n    };\r\n\r\n    getOffset = messages => {\r\n        const length = messages ? messages.messages.length : 0;\r\n\r\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\r\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\r\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\r\n\r\n        return {\r\n            offset_date: offsetDate,\r\n            offset_chat_id: offsetChatId,\r\n            offset_message_id: offsetMessageId\r\n        };\r\n    };\r\n\r\n    concatMessages = (messages, result) => {\r\n        if (!result) return messages;\r\n        if (!result.messages.length) return messages;\r\n\r\n        if (!messages) return result;\r\n        if (!messages.messages.length) return result;\r\n\r\n        return {\r\n            total_count: result.total_count,\r\n            messages: messages.messages.concat(result.messages)\r\n        };\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        if (this.loading) return;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const sessionId = this.sessionId;\r\n\r\n        const { messages } = this.state;\r\n\r\n        const offset = this.getOffset(messages);\r\n\r\n        this.loading = true;\r\n        let result = [];\r\n        if (chatId) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: this.text,\r\n                sender_user_id: 0,\r\n                from_message_id: offset.offset_message_id,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                chat_list: { '@type': 'chatListMain' },\r\n                query: this.text,\r\n                ...offset,\r\n                limit: 50\r\n            });\r\n        }\r\n        this.loading = false;\r\n\r\n        filterDuplicateMessages(result, messages ? messages.messages : []);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            messages: this.concatMessages(messages, result)\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\r\n            if (result.messages[i].sender_id.user_id) {\r\n                users.set(result.messages[i].sender_id.user_id, result.messages[i].sender_id.user_id);\r\n            }\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    handleTopChatsScroll = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose();\r\n    };\r\n\r\n    handleDeleteRecentlyFoundChat = async chatId => {\r\n        if (!chatId) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'removeRecentlyFoundChat',\r\n            chat_id: chatId\r\n        });\r\n\r\n        const { recentlyFound } = this.state;\r\n        if (!recentlyFound) return;\r\n\r\n        this.setState({\r\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\r\n        });\r\n    };\r\n\r\n    handleDeleteTopChat = async chatId => {\r\n        if (!chatId) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'removeTopChat',\r\n            chat_id: chatId,\r\n            category: {\r\n                '@type': 'topChatCategoryUsers'\r\n            }\r\n        });\r\n\r\n        const { top } = this.state;\r\n        if (!top) return;\r\n\r\n        this.setState({\r\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const topChats =\r\n            top && top.chat_ids\r\n                ? top.chat_ids.map(x => (\r\n                      <TopChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\r\n                          onDelete={() => this.handleDeleteTopChat(x)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const recentlyFoundChats =\r\n            recentlyFound && recentlyFound.chat_ids\r\n                ? recentlyFound.chat_ids.map(x => (\r\n                      <RecentlyFoundChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const localChats = local\r\n            ? local.map(x => (\r\n                  <RecentlyFoundChat\r\n                      key={x}\r\n                      chatId={x}\r\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                  />\r\n              ))\r\n            : [];\r\n\r\n        const globalChatsMap = new Map();\r\n        const globalChats = global\r\n            ? global.map(x => {\r\n                  globalChatsMap.set(x, x);\r\n\r\n                  return (\r\n                      <FoundPublicChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\r\n                      />\r\n                  );\r\n              })\r\n            : [];\r\n\r\n        const globalLinkChat =\r\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\r\n                <FoundPublicChat\r\n                    key={linkMessage.chat_id}\r\n                    chatId={linkMessage.chat_id}\r\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\r\n                />\r\n            ) : null;\r\n\r\n        const globalMessagesMap = new Map();\r\n        const globalMessages =\r\n            messages && messages.messages\r\n                ? messages.messages.map(x => {\r\n                      const key = `${x.chat_id}_${x.id}`;\r\n                      globalMessagesMap.set(key, key);\r\n\r\n                      return (\r\n                          <FoundMessage\r\n                              key={key}\r\n                              chatId={x.chat_id}\r\n                              messageId={x.id}\r\n                              chatSearch={Boolean(chatId)}\r\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\r\n                          />\r\n                      );\r\n                  })\r\n                : [];\r\n\r\n        const globalLinkMessage =\r\n            linkMessage &&\r\n            linkMessage.message &&\r\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\r\n                <FoundMessage\r\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\r\n                    chatId={linkMessage.message.chat_id}\r\n                    messageId={linkMessage.message.id}\r\n                    chatSearch={false}\r\n                    onClick={() =>\r\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\r\n                    }\r\n                />\r\n            ) : null;\r\n\r\n        let count = messages ? messages.total_count : 0;\r\n        if (\r\n            linkMessage &&\r\n            linkMessage.message &&\r\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\r\n        ) {\r\n            count++;\r\n        }\r\n\r\n        let messagesCaption = t('NoMessages');\r\n        if (count) {\r\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\r\n        }\r\n\r\n        return (\r\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\r\n                {chat && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\r\n                            <div className='search-chat-wrapper'>\r\n                                <div className='search-chat-control'>\r\n                                    <Chat chatId={chatId} showStatus={false} />\r\n                                </div>\r\n                                <IconButton\r\n                                    className='header-right-button'\r\n                                    aria-label='Search'\r\n                                    onMouseDown={this.handleClose}>\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {topChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\r\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\r\n                                <div className='search-top-chats-placeholder' />\r\n                                {topChats}\r\n                                <div className='search-top-chats-placeholder' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {recentlyFoundChats.length > 0 && (\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\r\n                            {t('Recent')}\r\n                        </SectionHeader>\r\n                        {recentlyFoundChats}\r\n                    </div>\r\n                )}\r\n                {localChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\r\n                            {localChats}\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {globalChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\r\n                            {globalLinkChat}\r\n                            {globalChats}\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {(messages || (linkMessage && linkMessage.message)) && (\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{messagesCaption}</SectionHeader>\r\n                        {globalLinkMessage}\r\n                        {globalMessages}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch.propTypes = {\r\n    chatId: PropTypes.number,\r\n    text: PropTypes.string,\r\n    onSelectMessage: PropTypes.func.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Search);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes, { number } from 'prop-types';\r\nimport { Slide } from '@material-ui/core';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './SidebarPage.css';\r\n\r\nclass SidebarPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                const { onClose } = this.props;\r\n                if (onClose) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    event.target.blur();\r\n\r\n                    onClose();\r\n                }\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.props;\r\n\r\n        if (prevProps.open !== open) {\r\n            if (open) {\r\n                KeyboardManager.add(this.keyboardHandler);\r\n            } else {\r\n                KeyboardManager.remove(this.keyboardHandler);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { children, open, timeout, onClose } = this.props;\r\n\r\n        return (\r\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\r\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\r\n            </Slide>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarPage.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default SidebarPage;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\r\n    'Folder'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\r\n    'Edit'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\r\n    'LogOut'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\r\nimport MoreIcon from '../../../Assets/Icons/More';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\n\r\nclass SettingsMenuButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        open: false\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.handleMenuClose();\r\n\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.handleClose();\r\n        TdLibController.logOut();\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { anchorEl, open } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='header-right-button'\r\n                    aria-label='Menu'\r\n                    onClick={this.handleMenuOpen}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleLogOut}>\r\n                        <ListItemIcon>\r\n                            <LogOutIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('LogOut')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('AreYouSureLogout')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDone} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSettingsMenuButton.propTypes = {};\r\n\r\nexport default withTranslation()(SettingsMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\r\n    'Data'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\r\n    'Language'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport FilterIcon from '../../../Assets/Icons/Folder';\r\nimport Chat from '../../Tile/Chat';\r\nimport EditIcon from '../../../Assets/Icons/Edit';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SettingsIcon from '../../../Assets/Icons/Settings';\r\nimport SettingsMenuButton from './SettingsMenuButton';\r\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\r\nimport DataIcon from '../../../Assets/Icons/Data';\r\nimport LanguageIcon from '../../../Assets/Icons/Language';\r\nimport packageJson from '../../../../package.json';\r\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport './Main.css';\r\n\r\nclass Main extends React.Component {\r\n\r\n    handleOpenViewer = () => {\r\n        const { chatId } = this.props;\r\n        \r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.photo) return;\r\n\r\n        setProfileMediaViewerContent({ chatId });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            chatId,\r\n            popup,\r\n            t,\r\n            onClose,\r\n            onEditProfile,\r\n            onGeneral,\r\n            onNotifications,\r\n            onPrivacySecurity,\r\n            onLanguage,\r\n            onFilters\r\n        } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Settings')}</span>\r\n                    </div>\r\n                    <SettingsMenuButton />\r\n                </div>\r\n                <div className='sidebar-page-content settings-main-content'>\r\n                    <div className='chat-details-info'>\r\n                        <Chat\r\n                            chatId={chatId}\r\n                            big={true}\r\n                            showStatus={true}\r\n                            showSavedMessages={false}\r\n                            onTileSelect={photo ? this.handleOpenViewer : null}\r\n                        />\r\n                    </div>\r\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\r\n                        <ListItemIcon>\r\n                            <EditIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('EditProfile')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('GeneralSettings')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\r\n                        <ListItemIcon>\r\n                            <UnmuteIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Notifications')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\r\n                        <ListItemIcon>\r\n                            <DataIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('PrivacySettings')} />\r\n                    </ListItem>\r\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\r\n                        <ListItemIcon>\r\n                            <FilterIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Filters')} />\r\n                    </ListItem>\r\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\r\n                        <ListItemIcon>\r\n                            <LanguageIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Language')} />\r\n                    </ListItem>\r\n                    <div className='settings-main-footer'>\r\n                        {packageJson.version}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMain.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onEditProfile: PropTypes.func,\r\n    onGeneral: PropTypes.func,\r\n    onNotifications: PropTypes.func,\r\n    onPrivacySecurity: PropTypes.func,\r\n    onLanguage: PropTypes.func,\r\n    onFilters: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Main);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\r\n    'AddImage'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Cropper from 'react-cropper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AddImageIcon from '../../Assets/Icons/AddImage';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CheckIcon from '../../Assets/Icons/Check';\r\nimport { getFitSize, readImageSize } from '../../Utils/Common';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport './NewChatPhoto.css';\r\n\r\nclass NewChatPhoto extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.attachPhotoRef = React.createRef();\r\n        this.cropperRef = React.createRef();\r\n\r\n        const { defaultURL } = this.props;\r\n\r\n        this.state = {\r\n            blobURL: defaultURL,\r\n            open: false\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    handleDone = () => {\r\n        const cropper = this.cropperRef.current.cropper;\r\n        if (!cropper) return;\r\n\r\n        cropper.getCroppedCanvas().toBlob(blob => {\r\n            const blobURL = URL.createObjectURL(blob);\r\n\r\n            this.setState({\r\n                blob,\r\n                blobURL\r\n            });\r\n\r\n            const { onChoose } = this.props;\r\n            if (!onChoose) return;\r\n\r\n            onChoose(blob, blobURL);\r\n        }, 'image/jpeg');\r\n\r\n        this.handleCancel();\r\n    };\r\n\r\n    handleAttach = () => {\r\n        this.attachPhotoRef.current.click();\r\n    };\r\n\r\n    handleAttachComplete = async () => {\r\n        const { files } = this.attachPhotoRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ file, ...rest ] = Array.from(files);\r\n            if (!file) return;\r\n\r\n            const [width, height] = await readImageSize(file);\r\n\r\n            this.setState({\r\n                open: true,\r\n                file,\r\n                fileURL: URL.createObjectURL(file),\r\n                width,\r\n                height\r\n            });\r\n        }\r\n\r\n        this.attachPhotoRef.current.value = '';\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { open, width, height, fileURL, blobURL } = this.state;\r\n\r\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\r\n\r\n        return (\r\n            <>\r\n                <div className='new-chat-photo'>\r\n                    { blobURL ? (\r\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\r\n                        ) : (\r\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\r\n                            <AddImageIcon className='new-chat-photo-icon'/>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <input\r\n                    ref={this.attachPhotoRef}\r\n                    className='inputbox-attach-button'\r\n                    type='file'\r\n                    multiple={false}\r\n                    accept='image/*'\r\n                    onChange={this.handleAttachComplete}\r\n                />\r\n                { open && (\r\n                    <Dialog\r\n                        transitionDuration={0}\r\n                        open={true}\r\n                        onClose={this.handleCancel}\r\n                        aria-labelledby='dialog-title'>\r\n                        <div className='header-master'>\r\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                            <div className='header-status grow cursor-pointer'>\r\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\r\n                            </div>\r\n                        </div>\r\n                        <DialogContent>\r\n                            <Cropper\r\n                                ref={this.cropperRef}\r\n                                src={fileURL}\r\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\r\n                                // Cropper.js options\r\n                                aspectRatio={1}\r\n                                viewMode={3}\r\n                                guides={false} />\r\n                        </DialogContent>\r\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\r\n                            <CheckIcon/>\r\n                        </div>\r\n                    </Dialog>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nNewChatPhoto.propTypes = {\r\n    defaultURL: PropTypes.string,\r\n    onChoose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(NewChatPhoto);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport NewChatPhoto from '../NewChatPhoto';\r\nimport { getSrc, loadChatContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './EditProfile.css';\r\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\r\n\r\nclass EditProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.firstNameRef = React.createRef();\r\n        this.lastNameRef = React.createRef();\r\n        this.bioRef = React.createRef();\r\n        this.usernameRef = React.createRef();\r\n\r\n        const user = UserStore.get(UserStore.getMyId());\r\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\r\n\r\n        this.state = {\r\n            firstName: user ? user.first_name : '',\r\n            lastName: user ? user.last_name : '',\r\n            bio: userFullInfo ? userFullInfo.bio : '',\r\n            username: user ? user.username : '',\r\n            usernameCheck: null\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setName();\r\n        this.setBio();\r\n        this.setUsername();\r\n    }\r\n\r\n    setUsername() {\r\n        const { username, usernameCheck } = this.state;\r\n        let newUsername = this.usernameRef.current.value;\r\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\r\n            newUsername = newUsername.substr(1);\r\n        }\r\n\r\n        if (username === newUsername) return;\r\n        if (!usernameCheck) return;\r\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setUsername',\r\n            username: newUsername\r\n        });\r\n    }\r\n\r\n    setName() {\r\n        const { firstName, lastName } = this.state;\r\n        const newFirstName = this.firstNameRef.current.value;\r\n        const newLastName = this.lastNameRef.current.value;\r\n\r\n        if (newFirstName === firstName && newLastName === lastName) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'setName',\r\n            first_name: newFirstName,\r\n            last_name: newLastName\r\n        });\r\n    }\r\n\r\n    setBio() {\r\n        const { bio } = this.state;\r\n        const newBio = this.bioRef.current.value;\r\n        if (newBio === bio) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'setBio',\r\n            bio: newBio\r\n        });\r\n    }\r\n\r\n    handleUsernameChange = async () => {\r\n        const { chatId } = this.props;\r\n        const { username } = this.state;\r\n        let newUsername = this.usernameRef.current.value;\r\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\r\n            newUsername = newUsername.substr(1);\r\n        }\r\n        if (username === newUsername || newUsername === '') {\r\n            this.setState({\r\n                usernameCheck: null\r\n            });\r\n\r\n            // console.log('[un] checkChatUsername', 'null');\r\n        } else {\r\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\r\n            const result = await TdLibController.send({\r\n                '@type': 'checkChatUsername',\r\n                chat_id: chatId,\r\n                username: newUsername\r\n            });\r\n\r\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\r\n\r\n            let newUsername2 = this.usernameRef.current.value;\r\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\r\n                newUsername2 = newUsername2.substr(1);\r\n            }\r\n            if (newUsername2 === newUsername) {\r\n                this.setState({\r\n                    usernameCheck: result\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChoosePhoto = async data => {\r\n        const { chatId } = this.props;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'setProfilePhoto',\r\n            photo: { '@type': 'inputChatPhotoStatic', photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data } }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatContent(store, chatId, true);\r\n    };\r\n\r\n    render() {\r\n        let { chatId, t, onClose } = this.props;\r\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\r\n\r\n        let hasError = false;\r\n        let usernameLabel = t('Username');\r\n        if (usernameCheck) {\r\n            switch (usernameCheck['@type']) {\r\n                case 'checkChatUsernameResultOk': {\r\n                    hasError = false;\r\n                    usernameLabel = 'Username is available';\r\n                    break;\r\n                }\r\n                case 'checkChatUsernameResultPublicChatsTooMuch':\r\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\r\n                case 'checkChatUsernameResultUsernameInvalid': {\r\n                    hasError = true;\r\n                    usernameLabel = 'Invalid username';\r\n                    break;\r\n                }\r\n                case 'checkChatUsernameResultUsernameOccupied': {\r\n                    hasError = true;\r\n                    usernameLabel = 'Username is already taken';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        const src = getSrc(photo ? photo.small : null);\r\n        const entities = [];\r\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\r\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('EditProfile')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\r\n                    <div className='edit-profile-name'>\r\n                        <TextField\r\n                            inputRef={this.firstNameRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('FirstName')}\r\n                            defaultValue={firstName}\r\n                        />\r\n                        <TextField\r\n                            inputRef={this.lastNameRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('LastName')}\r\n                            defaultValue={lastName}\r\n                        />\r\n                        <TextField\r\n                            inputRef={this.bioRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('Bio')}\r\n                            defaultValue={bio}\r\n                        />\r\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='edit-profile-username'>\r\n                        <TextField\r\n                            inputRef={this.usernameRef}\r\n                            error={hasError}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={usernameLabel}\r\n                            defaultValue={username}\r\n                            onChange={this.handleUsernameChange}\r\n                        />\r\n                        <div className='edit-profile-hint'>\r\n                            {formattedText}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(EditProfile);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\r\n    'Add'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\r\n    'NewPrivate'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\r\n    'NonContacts'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\r\n    'NewGroup'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\r\n    'NewChannel'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\r\n    'ReadChats'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\r\n    'Bots'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\r\n    'Done'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ChatTile from './ChatTile';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\r\nimport './FilterChat.css';\r\n\r\nclass FilterChat extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0,\r\n        checked: false\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        const { onDelete } = this.props;\r\n        if (!onDelete) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { chatId, onDelete } = this.props;\r\n\r\n        onDelete && onDelete(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t, type, checked, onClick } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const title = getChatTitle(chatId, true, t);\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='filter-chat-tile'>\r\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\r\n                    </div>\r\n                    <div className='filter-chat-content'>\r\n                        <div className='filter-chat-title'>\r\n                            {title}\r\n                        </div>\r\n                        { type && (\r\n                            <div className='filter-chat-subtitle'>\r\n                                {getChatType(chatId, t)}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    { checked !== undefined && (\r\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\r\n                    )}\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilterChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    type: PropTypes.bool,\r\n    onDelete: PropTypes.func,\r\n    checked: PropTypes.bool,\r\n    onChange: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FilterChat);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport './FilterText.css';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nclass FilterText extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        const { onDelete } = this.props;\r\n        if (!onDelete) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete && onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { t, className, icon, text, checked, onClick } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='filter-chat-tile'>\r\n                        {icon}\r\n                    </div>\r\n                    <div className='filter-chat-content'>\r\n                        {text}\r\n                    </div>\r\n                    { checked !== undefined && (\r\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\r\n                    )}\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilterText.propTypes = {\r\n    icon: PropTypes.object,\r\n    text: PropTypes.string,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FilterText);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport './Chip.css';\r\n\r\nclass Chip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { icon, text, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <div className='chip-icon'>\r\n                    {icon}\r\n                </div>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{text}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChip.propTypes = {\r\n    icon: PropTypes.object,\r\n    text: PropTypes.string,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default Chip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './ChatChip.css';\r\n\r\nclass ChatChip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <ChatTile chatId={chatId} small={true}/>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChatChip.propTypes = {\r\n    chatId: PropTypes.number,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default ChatChip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\r\nimport FilterChat from '../../Tile/FilterChat';\r\nimport FilterText from '../../Tile/FilterText';\r\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\r\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\r\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\r\nimport BotsIcon from '../../../Assets/Icons/Bots';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SearchInput from '../Search/SearchInput';\r\nimport MutedIcon from '../../../Assets/Icons/Mute';\r\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\r\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\r\nimport Chip from '../../Tile/Chip';\r\nimport ChatChip from '../../Tile/ChatChip';\r\nimport { loadChatsContent } from '../../../Utils/File';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './EditFilterChats.css';\r\nimport { scrollBottom } from '../../../Utils/DOM';\r\n\r\nclass EditFilterChats extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n        this.wrapPanelRef = React.createRef();\r\n        this.itemsRef = new Map();\r\n\r\n        this.state = {\r\n            focusedItem: null,\r\n            searchItems: null,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    handleChatChange = (chatId, search) => {\r\n        const { mode } = this.props;\r\n\r\n        if (search) {\r\n            const input = this.searchInputRef.current;\r\n            input.focus();\r\n            input.innerText = '';\r\n            this.handleSearch('');\r\n        }\r\n\r\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\r\n    };\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { filter, mode } = this.props;\r\n        const { filter : prevFilter } = prevProps;\r\n\r\n        if (prevProps.filter === filter) {\r\n            return null;\r\n        }\r\n\r\n        const include = mode === 'include';\r\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\r\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\r\n\r\n        const isDeleting =\r\n            prevItems.length > items.length\r\n            || prevFilter.include_contacts && !filter.include_contacts\r\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\r\n            || prevFilter.include_groups && !filter.include_groups\r\n            || prevFilter.include_channels && !filter.include_channels\r\n            || prevFilter.include_bots && !filter.include_bots\r\n            || prevFilter.exclude_read && !filter.exclude_read\r\n            || prevFilter.exclude_muted && !filter.exclude_muted\r\n            || prevFilter.exclude_archived && !filter.exclude_archived;\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n        const prevHeight = wrapPanel.scrollHeight;\r\n        const prevOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const prevCSSText = wrapPanel.style.cssText;\r\n        const prevScrollTop = wrapPanel.scrollTop;\r\n        if (isDeleting) {\r\n            wrapPanel.style.cssText = null;\r\n        }\r\n\r\n        const prevMap = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const offset = el.getOffset();\r\n                prevMap.set(key, offset);\r\n            }\r\n        }\r\n\r\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.filter === this.props.filter) {\r\n            return;\r\n        }\r\n\r\n        this.animatePanel(snapshot.panel);\r\n        // this.animateItems(snapshot.items);\r\n    }\r\n\r\n    animatePanel(snapshot) {\r\n        if (!snapshot) return;\r\n\r\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n\r\n        const currentHeight = wrapPanel.scrollHeight;\r\n        const currentOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const expanded = currentHeight > prevHeight;\r\n        const collapsed = currentHeight < prevHeight;\r\n\r\n        const maxHeight = 123;\r\n        if (expanded) {\r\n            if (prevHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                    setTimeout(() => {\r\n                        scrollBottom(wrapPanel, 'auto');\r\n                    }, 250);\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                scrollBottom(wrapPanel, 'smooth');\r\n            }\r\n        } else if (collapsed) {\r\n            if (currentHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            }\r\n        } else {\r\n            if (isDeleting) {\r\n                wrapPanel.style.cssText = prevCSSText;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            } else {\r\n                scrollBottom(wrapPanel, 'smooth');\r\n            }\r\n        }\r\n    }\r\n\r\n    animateItems(prevOffsets) {\r\n        if (!prevOffsets) return;\r\n\r\n        const doubleTransform = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const currentOffset = el.getOffset();\r\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\r\n                if (prevOffset) {\r\n                    if (prevOffset.left < currentOffset.left) {\r\n                        doubleTransform.set(el, { prevOffset, currentOffset });\r\n                    }\r\n\r\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\r\n                    el.setStyleCSSText(transform);\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n            for (let key of this.itemsRef.keys()) {\r\n                const el = this.itemsRef.get(key);\r\n                if (el) {\r\n                    let transition = `transition: transform 0.25s ease`;\r\n                    if (doubleTransform.has(el)) {\r\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\r\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\r\n                            + 'transition: transform 0.1s ease;'\r\n                    }\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n            }\r\n\r\n            if (!doubleTransform.size) return;\r\n\r\n            setTimeout(() => {\r\n                for (let el of doubleTransform.keys()) {\r\n                    const { currentOffset } = doubleTransform.get(el);\r\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\r\n                        + 'transition: transform 0s ease;';\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n\r\n                requestAnimationFrame(() => {\r\n                    for (let el of doubleTransform.keys()) {\r\n                        const transition = 'transition: transform 0.15s ease';\r\n\r\n                        el.setStyleCSSText(transition);\r\n                    }\r\n                });\r\n\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    handleBackspace = () => {\r\n        const { filter, mode } = this.props;\r\n        const { focusedItem } = this.state;\r\n        if (!filter) return;\r\n\r\n        if (focusedItem) {\r\n            switch (focusedItem) {\r\n                case 'include_contacts':\r\n                case 'include_non_contacts':\r\n                case 'include_bots':\r\n                case 'include_groups':\r\n                case 'include_channels':\r\n                case 'exclude_muted':\r\n                case 'exclude_read':\r\n                case 'exclude_archived': {\r\n                    this.handleChange(focusedItem);\r\n\r\n                    this.setState({\r\n                        focusedItem: null\r\n                    });\r\n                    break;\r\n                }\r\n                default: {\r\n                    this.handleChatChange(focusedItem);\r\n\r\n                    this.setState({\r\n                        focusedItem: null\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        const include = mode === 'include';\r\n        if (include) {\r\n            const {\r\n                include_contacts,\r\n                include_non_contacts,\r\n                include_bots,\r\n                include_groups,\r\n                include_channels,\r\n                included_chat_ids\r\n            } = filter;\r\n\r\n            if (included_chat_ids.length > 0) {\r\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\r\n                if (!lastItem) return;\r\n\r\n                this.setState({\r\n                    focusedItem: lastItem\r\n                });\r\n            } else if (include_bots) {\r\n                this.setState({\r\n                    focusedItem: 'include_bots'\r\n                });\r\n            } else if (include_channels) {\r\n                this.setState({\r\n                    focusedItem: 'include_channels'\r\n                });\r\n            } else if (include_groups) {\r\n                this.setState({\r\n                    focusedItem: 'include_groups'\r\n                });\r\n            } else if (include_non_contacts) {\r\n                this.setState({\r\n                    focusedItem: 'include_non_contacts'\r\n                });\r\n            } else if (include_contacts) {\r\n                this.setState({\r\n                    focusedItem: 'include_contacts'\r\n                });\r\n            }\r\n        } else {\r\n            const {\r\n                exclude_muted,\r\n                exclude_read,\r\n                exclude_archived,\r\n                excluded_chat_ids\r\n            } = filter;\r\n\r\n            if (excluded_chat_ids.length > 0) {\r\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\r\n                if (!lastItem) return;\r\n\r\n                this.setState({\r\n                    focusedItem: lastItem\r\n                });\r\n            } else if (exclude_archived) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_archived'\r\n                });\r\n            } else if (exclude_read) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_read'\r\n                });\r\n            } else if (exclude_muted) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_muted'\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChange = (type, value) => {\r\n        const { onChange } = this.props;\r\n\r\n        onChange(type, value);\r\n\r\n        this.setState({\r\n            focusedItem: null\r\n        });\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null,\r\n                focusedItem: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const promises = [];\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchChats',\r\n                query,\r\n                limit: 100\r\n            })\r\n        );\r\n        const [searchItems] = await Promise.all(promises);\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, searchItems.chat_ids);\r\n\r\n        this.setState({ searchItems, focusedItem: null });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\r\n        const { focusedItem, searchItems } = this.state;\r\n\r\n        const {\r\n            include_contacts,\r\n            include_non_contacts,\r\n            include_bots,\r\n            include_groups,\r\n            include_channels,\r\n            included_chat_ids\r\n        } = filter;\r\n\r\n        const {\r\n            exclude_muted,\r\n            exclude_read,\r\n            exclude_archived,\r\n            excluded_chat_ids\r\n        } = filter;\r\n\r\n        const include = mode === 'include';\r\n        const items = include ? included_chat_ids : excluded_chat_ids;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\r\n                    </div>\r\n                </div>\r\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\r\n                    { include && (\r\n                        <>\r\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\r\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\r\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\r\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\r\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\r\n                        </>\r\n                    )}\r\n                    { !include && (\r\n                        <>\r\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\r\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\r\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\r\n                        </>\r\n                    )}\r\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\r\n                    <SearchInput wrapperRef={this.searchRef} inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\r\n                </div>\r\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\r\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\r\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\r\n                    {include && (\r\n                        <>\r\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\r\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\r\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\r\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\r\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\r\n                        </>\r\n                    )}\r\n                    {!include && (\r\n                        <>\r\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\r\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\r\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\r\n                        </>\r\n                    )}\r\n                    { chats && chats.length > 0 && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\r\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\r\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\r\n                        </>\r\n                    )}\r\n                    { searchItems && (\r\n                        <div className='edit-filter-chats-search'>\r\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditFilterChats.propTypes = {\r\n    filter: PropTypes.object,\r\n    chats: PropTypes.array,\r\n    mode: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    onScroll: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(EditFilterChats);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddIcon from '../../../Assets/Icons/Add';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\r\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\r\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\r\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\r\nimport MutedIcon from '../../../Assets/Icons/Mute';\r\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\r\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\r\nimport BotsIcon from '../../../Assets/Icons/Bots';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport DoneIcon from '../../../Assets/Icons/Done';\r\nimport EditFilterChats from './EditFilterChats';\r\nimport FilterChat from '../../Tile/FilterChat';\r\nimport FilterText from '../../Tile/FilterText';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { isFilterValid } from '../../../Utils/Filter';\r\nimport { CHAT_IDS_AUTHORIZED, CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './CreateFilter.css';\r\n\r\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\r\n\r\nclass CreateFilter extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.lottieRef = React.createRef();\r\n\r\n        this.state = {\r\n            prevFilterId: -1,\r\n            data: null,\r\n            openFilterChats: false,\r\n            mode: null,\r\n            title: '',\r\n            error: false,\r\n            shook: false,\r\n            chats: [],\r\n            limit: 0\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { filter, filterId } = props;\r\n        const { prevFilterId } = state;\r\n\r\n        if (filter && prevFilterId !== filterId){\r\n            return {\r\n                prevFilterId: filterId,\r\n                editFilter: {...filter},\r\n                title: filter.title\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAnimationData();\r\n    }\r\n\r\n    loadAnimationData = async () => {\r\n        const { closeData } = this.state;\r\n        if (closeData) return;\r\n\r\n        try {\r\n            const requests = [ fetch('data/Folders_2.json') ];\r\n\r\n            const results = await Promise.all(requests);\r\n\r\n            const [data] = await Promise.all(results.map(x => x.text()));\r\n\r\n            this.setState({ data });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { onDone } = this.props;\r\n        const { editFilter } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.titleRef.current.focus();\r\n            this.setState({\r\n                error: true\r\n            })\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n\r\n        editFilter.title = title;\r\n\r\n        if (!isFilterValid(editFilter)) {\r\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\r\n            return;\r\n        }\r\n\r\n        onDone && onDone(editFilter);\r\n    };\r\n\r\n    handleAnimationClick = () => {\r\n        const lottie = this.lottieRef.current;\r\n        if (!lottie) return;\r\n        if (!lottie.isPaused) return;\r\n\r\n        lottie.play();\r\n    };\r\n\r\n    handleDeleteIncludeContacts = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_contacts: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterContacts')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeNonContacts = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterNonContacts')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeGroups = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_groups: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterGroups')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeChannels = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_channels: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterChannels')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeBots = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_bots: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterBots')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludedChat = chatId => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeMuted = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_muted: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeRead = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_read: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeArchived = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_archived: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludedChat = chatId => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleOpenFilterChats = async mode => {\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            limit: 1000\r\n        });\r\n        result.chat_ids = result.chat_ids.filter(x => CHAT_IDS_AUTHORIZED.includes(x));\r\n\r\n        this.setState({\r\n            openFilterChats: true,\r\n            mode,\r\n            chats: result.chat_ids,\r\n            limit: CHAT_SLICE_LIMIT\r\n        })\r\n    };\r\n\r\n    setDefaultFilterTitle() {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (!title) {\r\n            const {\r\n                include_contacts,\r\n                include_non_contacts,\r\n                include_bots,\r\n                include_groups,\r\n                include_channels,\r\n                included_chat_ids\r\n            } = editFilter;\r\n\r\n            const {\r\n                exclude_muted,\r\n                exclude_read,\r\n                exclude_archived,\r\n                excluded_chat_ids\r\n            } = editFilter;\r\n\r\n            if (!included_chat_ids.length) {\r\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterContacts')\r\n                    });\r\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterNonContacts')\r\n                    });\r\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('ChatHints')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterBots')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterGroups')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterChannels')\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCloseFilterChats = () => {\r\n\r\n        this.setDefaultFilterTitle();\r\n\r\n        this.setState({\r\n            openFilterChats: false,\r\n            mode: null\r\n        })\r\n    };\r\n\r\n    handleChange = (type, value) => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        let newEditFilter = null;\r\n        switch (type) {\r\n            case 'include_contacts': {\r\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\r\n                break;\r\n            }\r\n            case 'include_non_contacts': {\r\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\r\n                break;\r\n            }\r\n            case 'include_bots': {\r\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\r\n                break;\r\n            }\r\n            case 'include_groups': {\r\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\r\n                break;\r\n            }\r\n            case 'include_channels': {\r\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\r\n                break;\r\n            }\r\n            case 'included_chat_ids': {\r\n                let included, excluded;\r\n                if (editFilter.included_chat_ids.includes(value)) {\r\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\r\n                    excluded = editFilter.excluded_chat_ids;\r\n                } else {\r\n                    included = [ ...editFilter.included_chat_ids, value ];\r\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\r\n                }\r\n\r\n                newEditFilter = {\r\n                    ...editFilter,\r\n                    included_chat_ids: included,\r\n                    excluded_chat_ids: excluded\r\n                };\r\n                break;\r\n            }\r\n            case 'exclude_muted': {\r\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\r\n                break;\r\n            }\r\n            case 'exclude_read': {\r\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\r\n                break;\r\n            }\r\n            case 'exclude_archived': {\r\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\r\n                break;\r\n            }\r\n            case 'excluded_chat_ids': {\r\n                let included, excluded;\r\n                if (editFilter.excluded_chat_ids.includes(value)) {\r\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\r\n                    included = editFilter.included_chat_ids;\r\n                } else {\r\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\r\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\r\n                }\r\n\r\n                newEditFilter = {\r\n                    ...editFilter,\r\n                    included_chat_ids: included,\r\n                    excluded_chat_ids: excluded\r\n                };\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        // console.log('[f] onChange', type, value, newEditFilter);\r\n        if (!newEditFilter) return;\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleTitleChange = () => {\r\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\r\n\r\n        this.setState({\r\n            title\r\n        });\r\n    }\r\n\r\n    handleScroll = event => {\r\n        const scroll = event.target;\r\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\r\n            this.setState({\r\n                limit: this.state.limit + CHAT_SLICE_LIMIT\r\n            })\r\n        }\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter, id, onClose } = this.props;\r\n        if (!filter) return null;\r\n\r\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\r\n\r\n        const {\r\n            include_contacts,\r\n            include_non_contacts,\r\n            include_bots,\r\n            include_groups,\r\n            include_channels,\r\n            included_chat_ids\r\n        } = editFilter;\r\n\r\n        const {\r\n            exclude_muted,\r\n            exclude_read,\r\n            exclude_archived,\r\n            excluded_chat_ids\r\n        } = editFilter;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\r\n                    </div>\r\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\r\n                        <DoneIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='filters-create-animation'>\r\n                        { data && (\r\n                            <React.Suspense fallback={null}>\r\n                                <RLottie\r\n                                    ref={this.lottieRef}\r\n                                    options={{\r\n                                        width: 80,\r\n                                        height: 80,\r\n                                        autoplay: true,\r\n                                        loop: false,\r\n                                        fileId: 'createFilter',\r\n                                        stringData: data\r\n                                    }}\r\n                                    onClick={this.handleAnimationClick}\r\n                                />\r\n                            </React.Suspense>\r\n                        )}\r\n                    </div>\r\n\r\n\r\n                    <div className='create-filter-title'>\r\n                        <TextField\r\n                            inputRef={this.titleRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('FilterNameHint')}\r\n                            value={title}\r\n                            error={error}\r\n                            onChange={this.handleTitleChange}\r\n                        />\r\n                    </div>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\r\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\r\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\r\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\r\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\r\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\r\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\r\n                        { included_chat_ids.map(x => (\r\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\r\n                        ))}\r\n                    </div>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\r\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\r\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\r\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\r\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\r\n                        { excluded_chat_ids.map(x => (\r\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\r\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCreateFilter.propTypes = {\r\n    filter: PropTypes.object,\r\n    id: PropTypes.number,\r\n    onDone: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar,\r\n);\r\n\r\nexport default enhance(CreateFilter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { getChatOrder } from './Chat';\r\n\r\nexport function isFilterValid(filter) {\r\n    if (!filter) return false;\r\n\r\n    const {\r\n        include_contacts,\r\n        include_non_contacts,\r\n        include_bots,\r\n        include_groups,\r\n        include_channels,\r\n        included_chat_ids,\r\n        title\r\n    } = filter;\r\n\r\n    if (!title) return false;\r\n\r\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\r\n}\r\n\r\nexport function getFilterSubtitle(t, filterId, chats) {\r\n    if (!chats) return ' ';\r\n\r\n    let count = 0;\r\n    for (let i = 0; i < chats.chat_ids.length; i++) {\r\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\r\n            count++;\r\n        }\r\n    }\r\n\r\n    if (!count) {\r\n        return t('FilterNoChats');\r\n    }\r\n\r\n    return count === 1 ? '1 chat' : `${count} chats`;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport { getFilterSubtitle } from '../../Utils/Filter';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Filter.css';\r\n\r\nclass Filter extends React.Component {\r\n\r\n    state = {\r\n        dialog: false,\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n        this.handleOpenDialog();\r\n    };\r\n\r\n    handleOpenDialog = () => {\r\n        this.setState({\r\n            dialog: true\r\n        })\r\n    };\r\n\r\n    handleCloseDialog = () => {\r\n        this.setState({\r\n            dialog: false\r\n        })\r\n    };\r\n\r\n    handleDeleteCancel = () => {\r\n        this.handleCloseDialog();\r\n    };\r\n\r\n    handleDeleteConfirm = () => {\r\n        const { info } = this.props;\r\n        if (!info) return;\r\n\r\n        this.handleCloseDialog();\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteChatFilter',\r\n            chat_filter_id: info.id\r\n        });\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, info, onEdit, chats } = this.props;\r\n        if (!info) return null;\r\n\r\n        const { dialog, contextMenu, top, left } = this.state;\r\n\r\n        const { title } = info;\r\n        const subtitle = getFilterSubtitle(t, info.id, chats);\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\r\n                    <ListItemText\r\n                        className='settings-list-item-text2'\r\n                        primary={title}\r\n                        secondary={subtitle}\r\n                    />\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={dialog}\r\n                    onClose={this.handleCancel}\r\n                    aria-labelledby='delete-dialog-title'>\r\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {t('FilterDeleteAlert')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilter.propTypes = {\r\n    info: PropTypes.object.isRequired,\r\n    chats: PropTypes.object,\r\n    onEdit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Filter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './RecommendedFilter.css';\r\n\r\nclass RecommendedFilter extends React.Component {\r\n\r\n    handleAdd = () => {\r\n        const { filter: recommendedFilter } = this.props;\r\n        if (!recommendedFilter) return;\r\n\r\n        const { filter } = recommendedFilter;\r\n\r\n        TdLibController.send({\r\n            '@type': 'createChatFilter',\r\n            filter\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter: recommendedFilter } = this.props;\r\n        if (!recommendedFilter) return null;\r\n\r\n        const { filter, description } = recommendedFilter;\r\n\r\n        return (\r\n            <ListItem\r\n                className='settings-list-item2'\r\n                role={undefined}\r\n                button>\r\n                <ListItemText\r\n                    className='settings-list-item-text'\r\n                    primary={filter.title}\r\n                    secondary={description}\r\n                />\r\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\r\n                    {t('Add')}\r\n                </Button>\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nRecommendedFilter.propTypes = {\r\n    filter: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(RecommendedFilter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '../../../Assets/Icons/Add';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport CreateFilter from './CreateFilter';\r\nimport Filter from '../../Tile/Filter';\r\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { CHAT_IDS_AUTHORIZED, FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\r\nimport FilterStore from '../../../Stores/FilterStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Filters.css';\r\n\r\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\r\n\r\nclass Filters extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lottieRef = React.createRef();\r\n\r\n        this.state = {\r\n            openFilter: false,\r\n            filterId: -1,\r\n            filter: null,\r\n            editFilter: null,\r\n            recommendedFilters: null,\r\n            chats: null,\r\n            filtersMap: new Map()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAnimationData();\r\n        this.loadData();\r\n\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    onUpdateChatFilters = update => {\r\n        setTimeout(() => {\r\n            this.loadData();\r\n        }, 100);\r\n    };\r\n\r\n    async loadData() {\r\n        const chats = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            limit: 1000\r\n        });\r\n        chats.chat_ids = chats.chat_ids.filter(x => CHAT_IDS_AUTHORIZED.includes(x));\r\n\r\n\r\n        const { filters: filterInfo } = FilterStore;\r\n        const promises = [];\r\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\r\n            promises.push(TdLibController.send({\r\n                '@type': 'getChatFilter',\r\n                chat_filter_id: filterInfo[i].id\r\n            }).catch(e => null));\r\n        }\r\n        const filters = await Promise.all(promises);\r\n\r\n        const filtersMap = new Map();\r\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\r\n            filtersMap.set(filterInfo[i].id, filters[i]);\r\n        }\r\n\r\n        const recommendedFilters = await TdLibController.send({\r\n            '@type': 'getRecommendedChatFilters'\r\n        });\r\n\r\n        this.setState({\r\n            chats,\r\n            filtersMap,\r\n            recommendedFilters\r\n        });\r\n    }\r\n\r\n    loadAnimationData = async () => {\r\n        const { closeData } = this.state;\r\n        if (closeData) return;\r\n\r\n        try {\r\n            const requests = [\r\n                fetch('data/Folders_1.json'),\r\n                fetch('data/Folders_2.json'),\r\n            ];\r\n\r\n            const results = await Promise.all(requests);\r\n\r\n            const [data] = await Promise.all(results.map(x => x.text()));\r\n\r\n            this.setState({ data });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    handleCreateFilter = () => {\r\n        const { t } = this.props;\r\n        const { filters } = FilterStore;\r\n        if (filters.length >= FILTER_COUNT_MAX) {\r\n            this.handleScheduledAction(t('FilterCreateError'));\r\n            return;\r\n        }\r\n\r\n        const filter = {\r\n            '@type': 'chatFiler',\r\n            title: '',\r\n            icon_name: '',\r\n            pinned_chat_ids: [],\r\n            included_chat_ids: [],\r\n            excluded_chat_ids: [],\r\n            exclude_muted: false,\r\n            exclude_read: false,\r\n            exclude_archived: false,\r\n            include_contacts: false,\r\n            include_non_contacts: false,\r\n            include_bots: false,\r\n            include_groups: false,\r\n            include_channels: false\r\n        };\r\n\r\n        this.setState({\r\n            openFilter: true,\r\n            filterId: -1,\r\n            filter\r\n        });\r\n    };\r\n\r\n    handleCloseFilter = () => {\r\n        this.setState({\r\n            openFilter: false,\r\n            filterId: -1,\r\n            filter: null\r\n        })\r\n    };\r\n\r\n    handleEditFilter = async info => {\r\n        const filter = await TdLibController.send({\r\n            '@type': 'getChatFilter',\r\n            chat_filter_id: info.id\r\n        });\r\n\r\n        if (!filter) return;\r\n\r\n        this.setState({\r\n            openFilter: true,\r\n            filterId: info.id,\r\n            filter\r\n        })\r\n    };\r\n\r\n    handleDone = filter => {\r\n        const { filterId } = this.state;\r\n\r\n        this.handleCloseFilter();\r\n        if (!filter) return;\r\n\r\n        if (filterId !== -1) {\r\n            TdLibController.send({\r\n                '@type': 'editChatFilter',\r\n                chat_filter_id: filterId,\r\n                filter\r\n            });\r\n        } else {\r\n            TdLibController.send({\r\n                '@type': 'createChatFilter',\r\n                filter\r\n            });\r\n        }\r\n    };\r\n\r\n    handleAnimationClick = () => {\r\n        const lottie = this.lottieRef.current;\r\n        if (!lottie) return;\r\n        if (!lottie.isPaused) return;\r\n\r\n        lottie.play();\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\r\n        const { filters } = FilterStore;\r\n\r\n        const hasFilters = filters && filters.length > 0;\r\n        const hasRecommendedFilters = recommendedFilters\r\n            && recommendedFilters.chat_filters.length > 0\r\n            && (!filters || filters.length < FILTER_COUNT_MAX);\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section filters-create'>\r\n                        <div className='filters-create-animation'>\r\n                            { data && (\r\n                                <React.Suspense fallback={null}>\r\n                                    <RLottie\r\n                                        ref={this.lottieRef}\r\n                                        options={{\r\n                                            width: 80,\r\n                                            height: 80,\r\n                                            autoplay: true,\r\n                                            loop: false,\r\n                                            fileId: 'filters',\r\n                                            stringData: data\r\n                                        }}\r\n                                        onClick={this.handleAnimationClick}\r\n                                    />\r\n                                </React.Suspense>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\r\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\r\n                            {t('CreateNewFilter')}\r\n                        </Button>\r\n                    </div>\r\n                    { hasFilters && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('Filters')}</SectionHeader>\r\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    { hasRecommendedFilters && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\r\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\r\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar,\r\n);\r\n\r\nexport default enhance(Filters);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\r\n    'Colorize'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getSrc } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './Wallpaper.css';\r\nimport FileProgress from '../Viewer/FileProgress';\r\n\r\nclass Wallpaper extends React.Component {\r\n    state = {\r\n        loaded: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { wallpaper } = this.props;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleLoad = () => {\r\n        this.setState({ loaded: true });\r\n    };\r\n\r\n    handleClick = () => {\r\n        const { wallpaper, onClick } = this.props;\r\n\r\n        if (onClick) {\r\n            onClick(wallpaper);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { wallpaper, isSelected } = this.props;\r\n        const { loaded  } = this.state;\r\n\r\n        const { document } = wallpaper;\r\n        const { minithumbnail, thumbnail } = document;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n        const tileLoaded = thumbSrc && loaded;\r\n        const src = thumbSrc || miniSrc;\r\n\r\n        return (\r\n            <div className='shared-photo' onClick={this.handleClick}>\r\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\r\n                    {src !== thumbSrc && (\r\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\r\n                    )}\r\n                </div>\r\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\r\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nWallpaper.propTypes = {\r\n    wallpaper: PropTypes.object.isRequired,\r\n    isSelected: PropTypes.bool\r\n};\r\n\r\nexport default Wallpaper;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Wallpaper from '../../Tile/Wallpaper';\r\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './ChatBackground.css';\r\n\r\nclass ChatBackground extends React.Component {\r\n    state = {\r\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent() {\r\n        const { backgrounds } = this.props;\r\n        if (!backgrounds) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadBackgroundsContent(store, backgrounds.backgrounds);\r\n    }\r\n\r\n    handleClick = wallpaper => {\r\n        this.setState({\r\n            selectedId: wallpaper.id\r\n        });\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail, document: file } = document;\r\n        if (!file) return;\r\n\r\n        const src = getSrc(file);\r\n        if (!src) {\r\n            const store = FileStore.getStore();\r\n            loadBackgroundContent(store, wallpaper, true);\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateChatBackground',\r\n            wallpaper\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, backgrounds, onClose } = this.props;\r\n        const { selectedId } = this.state;\r\n\r\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\r\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nChatBackground.propTypes = {\r\n    backgrounds: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(ChatBackground);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport withTheme from '@material-ui/core/styles/withTheme';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport red from '@material-ui/core/colors/red';\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport green from '@material-ui/core/colors/green';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport './ThemePicker.css';\r\n\r\nclass ThemePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\r\n        try {\r\n            const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\r\n            type = themeOptions.type;\r\n            primary = themeOptions.primary;\r\n        } catch {}\r\n\r\n        this.state = {\r\n            open: false,\r\n            type,\r\n            color: this.getColorString(this.props.theme.palette.primary.main)\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        const type = event.target.value;\r\n\r\n        this.setState({ type });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: event.target.value,\r\n            primary: this.getColor(this.state.color)\r\n        });\r\n    };\r\n\r\n    handleAccentChange = event => {\r\n        this.setState({ color: event.target.value });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: this.state.type,\r\n            primary: this.getColor(event.target.value)\r\n        });\r\n    };\r\n\r\n    getColorString = value => {\r\n        switch (value) {\r\n            case red['500']:\r\n                return 'red';\r\n            case orange['500']:\r\n                return 'orange';\r\n            case amber['500']:\r\n                return 'amber';\r\n            case green['500']:\r\n                return 'green';\r\n            case '#50A2E9':\r\n                return 'blue';\r\n            case indigo['500']:\r\n                return 'indigo';\r\n            case deepPurple['500']:\r\n                return 'deepPurple';\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    getColor = value => {\r\n        switch (value) {\r\n            case 'red':\r\n                return red;\r\n            case 'orange':\r\n                return orange;\r\n            case 'amber':\r\n                return amber;\r\n            case 'green':\r\n                return green;\r\n            case 'blue':\r\n                return { main: '#50A2E9' };\r\n            case 'indigo':\r\n                return indigo;\r\n            case 'deepPurple':\r\n                return deepPurple;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    open = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { type, color, open } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                disableEnforceFocus={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='alert-dialog-title'\r\n                aria-describedby='alert-dialog-description'>\r\n                <DialogTitle id='alert-dialog-title'>{t('Theme')}</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl component='fieldset' className='theme-picker-form'>\r\n                        <FormLabel focused component='legend'>\r\n                            {t('Theme')}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='theme'\r\n                            name='theme1'\r\n                            className='theme-picker-group'\r\n                            value={type}\r\n                            onChange={this.handleChange}>\r\n                            <FormControlLabel value='default' control={<Radio color='primary' />} label='System Default' />\r\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\r\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <FormControl component='fieldset' className='theme-picker-form'>\r\n                        <FormLabel focused component='legend'>\r\n                            {t('Accent')}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='accent'\r\n                            name='accent1'\r\n                            className='theme-picker-group'\r\n                            value={color}\r\n                            onChange={this.handleAccentChange}>\r\n                            <FormControlLabel\r\n                                value='red'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-red'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Red'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='orange'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-orange'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Orange'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='amber'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-amber'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Amber'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='green'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-green'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Green'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='blue'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-blue'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Blue'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='indigo'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-indigo'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Indigo'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='deepPurple'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-deep-purple'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Deep Purple'\r\n                            />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nThemePicker.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTheme,\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ThemePicker);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\r\nimport ChatBackground from './ChatBackground';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\r\nimport ThemePicker from '../ThemePicker';\r\nimport { isMacOS } from '../../../Utils/Common';\r\nimport { SEND_BY_CTRL_ENTER_KEY } from '../../../Constants';\r\nimport OptionStore from '../../../Stores/OptionStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './General.css';\r\n\r\nclass General extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const sendByCtrlEnterOption = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\r\n\r\n        this.state = {\r\n            backgrounds: null,\r\n            openChatBackground: false,\r\n            sendByCtrlEnter: Boolean(sendByCtrlEnterOption && sendByCtrlEnterOption.value)\r\n        };\r\n\r\n        this.themePickerRef = React.createRef();\r\n    }\r\n\r\n    handleAppearance = () => {\r\n        this.themePickerRef.current.open();\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent = () => {\r\n        TdLibController.send({\r\n            '@type': 'getBackgrounds',\r\n            for_dark_theme: false\r\n        }).then(backgrounds => this.setState({ backgrounds }));\r\n    };\r\n\r\n    openChatBackground = () => {\r\n        if (!this.state.backgrounds) return;\r\n\r\n        this.setState({\r\n            openChatBackground: true\r\n        });\r\n    };\r\n\r\n    closeChatBackground = () => {\r\n        this.setState({\r\n            openChatBackground: false\r\n        });\r\n    };\r\n\r\n    async handleSetOption(command) {\r\n        let value = false;\r\n        switch (command) {\r\n            case 'sendByCtrlEnter': {\r\n                value = true;\r\n                break;\r\n            }\r\n            case 'sendByEnter': {\r\n                value = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        await TdLibController.send({\r\n            '@type': 'setOption',\r\n            name: SEND_BY_CTRL_ENTER_KEY,\r\n            value: { '@type': 'optionValueBoolean', value }\r\n        });\r\n\r\n        this.setState({\r\n            sendByCtrlEnter: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { backgrounds, openChatBackground, sendByCtrlEnter } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\r\n                        {/*    <ListItemIcon>*/}\r\n                        {/*        <SharedMediaIcon />*/}\r\n                        {/*    </ListItemIcon>*/}\r\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\r\n                        {/*</ListItem>*/}\r\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\r\n                            <ListItemIcon>\r\n                                <ColorizeIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Theme')} />\r\n                        </ListItem>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('Keyboard')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByEnter')}>\r\n                            <Radio\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={!sendByCtrlEnter}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('SendByEnter')}\r\n                                secondary={t('NewLineByShiftEnter')}\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByCtrlEnter')}>\r\n                            <Radio\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={sendByCtrlEnter}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={isMacOS() ? t('SendByCommandEnter') : t('SendByControlEnter')}\r\n                                secondary={t('NewLineByEnter')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\r\n                    <ChatBackground backgrounds={backgrounds} />\r\n                </SidebarPage>\r\n                <ThemePicker ref={this.themePickerRef} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nGeneral.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(General);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Language.css';\r\n\r\nclass Language extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { i18n } = props;\r\n        const language = i18n ? i18n.language : null;\r\n\r\n        this.state = {\r\n            language: language || 'en'\r\n        };\r\n    }\r\n\r\n    handleChange = language => {\r\n        this.setState({ language });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { language } = this.state;\r\n        const info = LocalizationStore.info || { language_packs: [] };\r\n\r\n        const languages = info.language_packs.map(x => (\r\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\r\n                <Radio\r\n                    color='primary'\r\n                    className='settings-item-control'\r\n                    checked={language === x.id}\r\n                    tabIndex={-1}\r\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                />\r\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Language')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>{languages}</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nLanguage.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Language);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport SectionHeader from '../SectionHeader';\r\nimport NotificationStore from '../../../Stores/NotificationStore';\r\nimport OptionStore from '../../../Stores/OptionStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Notifications.css';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\r\n\r\n        this.state = {\r\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\r\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\r\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\r\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\r\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\r\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\r\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\r\n        this.setContactJoinedOption(contactJoined);\r\n    }\r\n\r\n    setContactJoinedOption() {\r\n        const { contactJoined } = this.state;\r\n\r\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\r\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\r\n        if (oldContactJoined === contactJoined) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setOption',\r\n            name: 'disable_contact_registered_notifications',\r\n            value: {\r\n                '@type': 'optionValueBoolean',\r\n                value: !contactJoined\r\n            }\r\n        });\r\n    }\r\n\r\n    setScopeNotificationSettings(scope, settings) {\r\n        if (!scope) return;\r\n        if (!settings) return;\r\n        const oldSettings = NotificationStore.settings.get(scope);\r\n        if (!oldSettings) return;\r\n\r\n        const { mute_for, show_preview } = settings;\r\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\r\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setScopeNotificationSettings',\r\n            scope: { '@type': scope },\r\n            notification_settings: settings\r\n        });\r\n    }\r\n\r\n    handleMuteFor = property => {\r\n        const settings = this.state[property];\r\n        if (!settings) return;\r\n\r\n        const { mute_for } = settings;\r\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\r\n\r\n        this.setState({ [property]: newSettings });\r\n    };\r\n\r\n    handleShowPreview = property => {\r\n        const settings = this.state[property];\r\n        if (!settings) return;\r\n\r\n        const { show_preview } = settings;\r\n        const newSettings = { ...settings, show_preview: !show_preview };\r\n\r\n        this.setState({ [property]: newSettings });\r\n    };\r\n\r\n    handleContactJoined = () => {\r\n        this.setState({ contactJoined: !this.state.contactJoined });\r\n    };\r\n\r\n    isEnabled(settings) {\r\n        if (!settings) return false;\r\n\r\n        const { mute_for } = settings;\r\n\r\n        return mute_for === 0;\r\n    }\r\n\r\n    showPreview(settings) {\r\n        if (!settings) return false;\r\n\r\n        const { show_preview } = settings;\r\n\r\n        return show_preview;\r\n    }\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Notifications')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(privateChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForPrivateChats')}\r\n                                secondary={\r\n                                    this.isEnabled(privateChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(privateChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(groupChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForGroups')}\r\n                                secondary={\r\n                                    this.isEnabled(groupChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(groupChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(channelChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForChannels')}\r\n                                secondary={\r\n                                    this.isEnabled(channelChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(channelChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\r\n                        <div className='settings-item' onClick={this.handleContactJoined}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={contactJoined}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('ContactJoined')}\r\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNotifications.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Notifications);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\r\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\r\n    </g>,\r\n    'Stop'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport StopIcon from '../../Assets/Icons/Stop';\r\nimport { getMessageDate } from '../../Utils/Chat';\r\nimport './Session.css';\r\n\r\nclass Session extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { session } = this.props;\r\n        if (!session) return;\r\n        if (session.is_current) return;\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleTerminate = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { onTerminate, session } = this.props;\r\n\r\n        onTerminate(session);\r\n    };\r\n\r\n    render() {\r\n        const { session, t } = this.props;\r\n        if (!session) return null;\r\n\r\n        const { left, top, contextMenu } = this.state;\r\n        const {\r\n            is_current,\r\n            application_name,\r\n            application_version,\r\n            device_model,\r\n            platform,\r\n            system_version,\r\n            ip,\r\n            region,\r\n            country,\r\n            last_active_date\r\n        } = session;\r\n        const showDate = !is_current;\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\r\n                    <div className='session'>\r\n                        <div className='session-title'>\r\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\r\n                            {showDate && (\r\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\r\n                        <div className='session-subtitle2'>\r\n                            {`${ip} - `}\r\n                            {region && `${region}, `}\r\n                            {country && `${country}`}\r\n                        </div>\r\n                    </div>\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleTerminate}>\r\n                            <ListItemIcon>\r\n                                <StopIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Terminate')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSession.propTypes = {\r\n    session: PropTypes.object.isRequired,\r\n    onTerminate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Session);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Session from '../../Tile/Session';\r\nimport StopIcon from '../../../Assets/Icons/Stop';\r\nimport SectionHeader from '../SectionHeader';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './ActiveSessions.css';\r\n\r\nclass ActiveSessions extends React.Component {\r\n    state = {\r\n        open: false,\r\n        openAll: false,\r\n        session: null\r\n    };\r\n\r\n    handleTerminate = session => {\r\n        this.setState({\r\n            open: true,\r\n            session\r\n        });\r\n    };\r\n\r\n    handleTerminateAllOther = () => {\r\n        this.setState({\r\n            openAll: true\r\n        });\r\n    };\r\n\r\n    handleCloseConfirmation = () => {\r\n        this.setState({\r\n            open: false,\r\n            session: null\r\n        });\r\n    };\r\n\r\n    handleDoneConfirmation = async () => {\r\n        const { sessions, t } = this.props;\r\n        const { session } = this.state;\r\n        if (!session) return;\r\n\r\n        this.setState({\r\n            open: false,\r\n            session: null\r\n        });\r\n\r\n        await TdLibController.send({\r\n            '@type': 'terminateSession',\r\n            session_id: session.id\r\n        });\r\n\r\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleCloseAllConfirmation = () => {\r\n        this.setState({\r\n            openAll: false\r\n        });\r\n    };\r\n\r\n    handleDoneAllConfirmation = async () => {\r\n        const { sessions } = this.props;\r\n\r\n        this.setState({\r\n            openAll: false\r\n        });\r\n\r\n        await TdLibController.send({\r\n            '@type': 'terminateAllOtherSessions'\r\n        });\r\n\r\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, sessions, onClose } = this.props;\r\n        const { open, openAll } = this.state;\r\n\r\n        const current = sessions.sessions.find(x => x.is_current);\r\n        const other = sessions.sessions.filter(x => !x.is_current);\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    {Boolean(current) && (\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\r\n                            <Session session={current} onTerminate={this.handleTerminate} />\r\n                            {other.length > 0 && (\r\n                                <ListItem\r\n                                    className='settings-list-item'\r\n                                    button\r\n                                    disableRipple\r\n                                    onClick={this.handleTerminateAllOther}>\r\n                                    <ListItemIcon>\r\n                                        <StopIcon color='secondary' />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primaryTypographyProps={{ color: 'secondary' }}\r\n                                        primary={t('TerminateAllSessions')}\r\n                                    />\r\n                                </ListItem>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                    {other.length > 0 && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\r\n                                {other.map(x => (\r\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\r\n                                ))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={open}\r\n                    onClose={this.handleCloseConfirmation}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('TerminateSessionText')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={openAll}\r\n                    onClose={this.handleCloseAllConfirmation}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('AreYouSureSessions')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nActiveSessions.propTypes = {\r\n    sessions: PropTypes.object.isRequired,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ActiveSessions);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\r\n    'Unblock'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation, withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport SectionHeader from '../SectionHeader';\r\nimport User from '../../Tile/User';\r\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\r\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\r\nimport { openUser } from '../../../Actions/Client';\r\nimport { unblockSender } from '../../../Actions/Message';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './BlockedUsers.css';\r\n\r\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\r\n    const [contextMenu, setContextMenu] = React.useState(false);\r\n    const [top, setTop] = React.useState(0);\r\n    const [left, setLeft] = React.useState(0);\r\n    const { t } = useTranslation();\r\n\r\n    const handleContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        if (contextMenu) {\r\n            setContextMenu(false);\r\n        } else {\r\n            const { clientX, clientY } = event;\r\n\r\n            setContextMenu(true);\r\n            setLeft(clientX);\r\n            setTop(clientY);\r\n        }\r\n    };\r\n\r\n    const handleCloseContextMenu = () => {\r\n        setContextMenu(false);\r\n        setLeft(0);\r\n        setTop(0);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        onClick(userId);\r\n    };\r\n\r\n    const handleUnblock = () => {\r\n        handleCloseContextMenu();\r\n        onUnblock(userId);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n            <Popover\r\n                open={contextMenu}\r\n                onClose={handleCloseContextMenu}\r\n                anchorReference='anchorPosition'\r\n                anchorPosition={{ top, left }}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n                onMouseDown={e => e.stopPropagation()}>\r\n                <MenuList onClick={e => e.stopPropagation()}>\r\n                    <MenuItem onClick={handleUnblock}>\r\n                        <ListItemIcon>\r\n                            <UnblockIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Unblock')} />\r\n                    </MenuItem>\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    );\r\n});\r\n\r\nBlockedUser.propTypes = {\r\n    userId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    onUnblock: PropTypes.func.isRequired\r\n};\r\n\r\nclass BlockedUsers extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent() {\r\n        const { users } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\r\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\r\n    }\r\n\r\n    handleUnblockUser = async userId => {\r\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, users, t } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        { users.senders.length > 0 ? (\r\n                            <>\r\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\r\n                                {\r\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\r\n                                }\r\n                            </>\r\n                        ) : (\r\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nBlockedUsers.propTypes = {\r\n    users: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(BlockedUsers);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\r\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\r\n    </g>,\r\n    'Device'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\r\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\r\n    </g>,\r\n    'RemoveMember'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport SectionHeader from '../SectionHeader';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './PrivacyCalls.css';\r\n\r\nclass PrivacyCalls extends React.Component {\r\n    state = {\r\n        prevAllowCalls: null,\r\n        prevAllowP2PCalls: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { allowCalls, allowP2PCalls } = props;\r\n        const { prevAllowCalls, prevAllowP2PCalls } = state;\r\n        if (allowCalls !== prevAllowCalls || allowP2PCalls !== prevAllowP2PCalls) {\r\n            const allowCallsValue = allowCalls.rules.find(x =>\r\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\r\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\r\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\r\n\r\n            const allowP2PCallsValue = allowP2PCalls.rules.find(x =>\r\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\r\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\r\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\r\n\r\n            return {\r\n                prevAllowCalls: allowCalls,\r\n                prevAllowP2PCalls: allowP2PCalls,\r\n                allowCallsValue: allowCallsValue ? allowCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll',\r\n                allowP2PCallsValue: allowP2PCallsValue ? allowP2PCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll'\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setSettings();\r\n    }\r\n\r\n    setSettings() {\r\n        const { allowCalls, allowP2PCalls } = this.props;\r\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\r\n\r\n        const prevAllowCallsValue = allowCalls.rules.find(x =>\r\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\r\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\r\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\r\n        if (!prevAllowCallsValue || allowCallsValue !== prevAllowCallsValue['@type']) {\r\n            let added = false;\r\n            const rules = {\r\n                '@type': 'userPrivacySettingRules',\r\n                rules: allowCalls.rules.map(x => {\r\n                    if (x['@type'] === prevAllowCallsValue['@type']) {\r\n                        added = true;\r\n                        return { '@type': allowCallsValue }\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (!added) {\r\n                rules.rules.push({ '@type': allowCallsValue });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'setUserPrivacySettingRules',\r\n                setting: { '@type': 'userPrivacySettingAllowCalls' },\r\n                rules\r\n            });\r\n        }\r\n\r\n        const prevAllowP2PCallsValue = allowP2PCalls.rules.find(x =>\r\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\r\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\r\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\r\n        if (!prevAllowP2PCallsValue || allowP2PCallsValue !== prevAllowP2PCallsValue['@type']) {\r\n            let added = false;\r\n            const rules = {\r\n                '@type': 'userPrivacySettingRules',\r\n                rules: allowP2PCalls.rules.map(x => {\r\n                    if (x['@type'] === prevAllowP2PCallsValue['@type']) {\r\n                        added = true;\r\n                        return { '@type': allowP2PCallsValue }\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (!added) {\r\n                rules.rules.push({ '@type': allowP2PCallsValue });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'setUserPrivacySettingRules',\r\n                setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' },\r\n                rules\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChangeAllowCalls = event => {\r\n        this.setState({\r\n            allowCallsValue: event.currentTarget.value\r\n        });\r\n    };\r\n\r\n    handleChangeAllowP2PCalls = event => {\r\n        this.setState({\r\n            allowP2PCallsValue: event.currentTarget.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, t } = this.props;\r\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Calls')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('WhoCanCallMe')}</SectionHeader>\r\n                        <RadioGroup aria-label='' name='' value={allowCallsValue} onChange={this.handleChangeAllowCalls}>\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\r\n                        </RadioGroup>\r\n\r\n                        <SectionHeader>{t('PrivacyP2P')}</SectionHeader>\r\n                        <RadioGroup aria-label='' name='' value={allowP2PCallsValue} onChange={this.handleChangeAllowP2PCalls}>\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\r\n                        </RadioGroup>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPrivacyCalls.propTypes = {\r\n    allowCalls: PropTypes.object.isRequired,\r\n    allowP2PCalls: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withTranslation()(PrivacyCalls);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\r\nimport ActiveSessions from './ActiveSessions';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport BlockedUsers from './BlockedUsers';\r\nimport DeviceIcon from '../../../Assets/Icons/Device';\r\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\r\nimport SidebarPage from '../SidebarPage';\r\nimport SectionHeader from '../SectionHeader';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './PrivacySecurity.css';\r\nimport PrivacyCalls from './PrivacyCalls';\r\nimport { CallOutlined } from '@material-ui/icons';\r\n\r\nclass PrivacySecurity extends React.Component {\r\n    state = {\r\n        sessions: null,\r\n        openActiveSessions: false,\r\n\r\n        users: null,\r\n        openBlockedUsers: false,\r\n\r\n        allowCalls: null,\r\n        allowP2PCalls: null,\r\n        openCalls: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n    }\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { user_id, user_full_info } = update;\r\n        const { users } = this.state;\r\n        if (!users) return;\r\n\r\n        const { total_count, senders } = users;\r\n        const { is_blocked } = user_full_info;\r\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\r\n        if (is_blocked === prevIsBlocked) return;\r\n\r\n        if (is_blocked) {\r\n            this.setState({\r\n                users: {\r\n                    ...users,\r\n                    total_count: total_count + 1,\r\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({\r\n                users: {\r\n                    ...users,\r\n                    total_count: total_count - 1,\r\n                    senders: senders.filter(x => x.user_id !== user_id)\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        const promises = [];\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getActiveSessions'\r\n        }).catch(() => null));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getBlockedMessageSenders',\r\n            offset: 0,\r\n            limit: 100\r\n        }).catch(() => null));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getUserPrivacySettingRules',\r\n            setting: { '@type': 'userPrivacySettingAllowCalls' }\r\n        }).catch(() => null));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getUserPrivacySettingRules',\r\n            setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' }\r\n        }).catch(() => null));\r\n\r\n        const [ sessions, users, allowCalls, allowP2PCalls ] = await Promise.all(promises);\r\n\r\n        this.setState({\r\n            sessions,\r\n            users,\r\n            allowCalls,\r\n            allowP2PCalls\r\n        });\r\n    }\r\n\r\n    openActiveSessions = () => {\r\n        if (!this.state.sessions) return;\r\n\r\n        this.setState({\r\n            openActiveSessions: true\r\n        });\r\n    };\r\n\r\n    closeActiveSessions = () => {\r\n        this.setState({\r\n            openActiveSessions: false\r\n        });\r\n    };\r\n\r\n    openBlockedUsers = () => {\r\n        if (!this.state.users) return;\r\n\r\n        this.setState({\r\n            openBlockedUsers: true\r\n        });\r\n    };\r\n\r\n    closeBlockedUsers = () => {\r\n        this.setState({\r\n            openBlockedUsers: false\r\n        });\r\n    };\r\n\r\n    openCalls = () => {\r\n        const { allowCalls, allowP2PCalls } = this.state;\r\n        if (!allowCalls || !allowP2PCalls) return;\r\n\r\n        this.setState({\r\n            openCalls: true\r\n        });\r\n    };\r\n\r\n    closeCalls = () => {\r\n        this.setState({\r\n            openCalls: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const {\r\n            openBlockedUsers, users,\r\n            openActiveSessions, sessions,\r\n            openCalls, allowCalls, allowP2PCalls\r\n        } = this.state;\r\n\r\n        const sessionsCount =\r\n            sessions && sessions.sessions.length > 0\r\n                ? sessions.sessions.length === 1\r\n                    ? '1 session'\r\n                    : `${sessions.sessions.length} sessions`\r\n                : '1 session';\r\n\r\n        const usersCount =\r\n            users && users.total_count > 0\r\n                ? users.total_count === 1\r\n                    ? '1 user'\r\n                    : `${users.total_count} users`\r\n                : 'no users';\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openBlockedUsers}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <RemoveMemberIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className='settings-list-item-text'\r\n                                primary={t('BlockedUsers')}\r\n                                secondary={usersCount}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openActiveSessions}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <DeviceIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className='settings-list-item-text'\r\n                                primary={t('SessionsTitle')}\r\n                                secondary={sessionsCount}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openCalls}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <CallOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className='settings-list-item-text'\r\n                                primary={t('Calls')}\r\n                                secondary={''}\r\n                            />\r\n                        </ListItem>\r\n                    </div>\r\n                    {/*<div className='sidebar-page-section-divider' />*/}\r\n                    {/*<div className='sidebar-page-section'>*/}\r\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\r\n                    {/*            secondary={t('LastSeenContacts')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('LastSeenTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('WhoCanAddMe')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\r\n                    <BlockedUsers users={users} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\r\n                    <ActiveSessions sessions={sessions} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openCalls} onClose={this.closeCalls}>\r\n                    <PrivacyCalls allowCalls={allowCalls} allowP2PCalls={allowP2PCalls} />\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPrivacySecurity.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(PrivacySecurity);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Main from './Main';\r\nimport EditProfile from './EditProfile';\r\nimport Filters from './Filters';\r\nimport General from './General';\r\nimport Language from '../Language';\r\nimport Notifications from './Notifications';\r\nimport PrivacySecurity from './PrivacySecurity';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { loadChatContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Settings.css';\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            openEditProfile: false,\r\n            openGeneral: false,\r\n            openNotifications: false,\r\n            openPrivacySecurity: false,\r\n            openLanguage: false,\r\n            openFilters: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\r\n    }\r\n\r\n    onUpdateChatPhoto = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, photo } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!photo) return;\r\n\r\n        const store = FileStore.get();\r\n        loadChatContent(store, chatId, true);\r\n    };\r\n\r\n    async loadContent() {\r\n        const { chatId } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadChatContent(store, chatId, true);\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserFullInfo',\r\n            user_id: UserStore.getMyId()\r\n        });\r\n\r\n        UserStore.setFullInfo(UserStore.getMyId(), result);\r\n    }\r\n\r\n    openEditProfile = () => {\r\n        this.setState({\r\n            openEditProfile: true\r\n        });\r\n    };\r\n\r\n    closeEditProfile = () => {\r\n        this.setState({\r\n            openEditProfile: false\r\n        });\r\n    };\r\n\r\n    openGeneral = () => {\r\n        this.setState({\r\n            openGeneral: true\r\n        });\r\n    };\r\n\r\n    closeGeneral = () => {\r\n        this.setState({\r\n            openGeneral: false\r\n        });\r\n    };\r\n\r\n    openNotifications = () => {\r\n        this.setState({\r\n            openNotifications: true\r\n        });\r\n    };\r\n\r\n    closeNotifications = () => {\r\n        this.setState({\r\n            openNotifications: false\r\n        });\r\n    };\r\n\r\n    openPrivacySecurity = () => {\r\n        this.setState({\r\n            openPrivacySecurity: true\r\n        });\r\n    };\r\n\r\n    closePrivacySecurity = () => {\r\n        this.setState({\r\n            openPrivacySecurity: false\r\n        });\r\n    };\r\n\r\n    openLanguage = () => {\r\n        this.setState({\r\n            openLanguage: true\r\n        });\r\n    };\r\n\r\n    closeLanguage = () => {\r\n        this.setState({\r\n            openLanguage: false\r\n        });\r\n    };\r\n\r\n    openFilters = () => {\r\n        this.setState({\r\n            openFilters: true\r\n        });\r\n    };\r\n\r\n    closeFilters = () => {\r\n        this.setState({\r\n            openFilters: false\r\n        });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSettings',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, popup } = this.props;\r\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Main\r\n                    chatId={chatId}\r\n                    popup={popup}\r\n                    onClose={this.handleCloseSettings}\r\n                    onEditProfile={this.openEditProfile}\r\n                    onGeneral={this.openGeneral}\r\n                    onNotifications={this.openNotifications}\r\n                    onPrivacySecurity={this.openPrivacySecurity}\r\n                    onLanguage={this.openLanguage}\r\n                    onFilters={this.openFilters}\r\n                />\r\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\r\n                    <EditProfile chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\r\n                    <General chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\r\n                    <Notifications chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\r\n                    <PrivacySecurity />\r\n                </SidebarPage>\r\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\r\n                    <Filters />\r\n                </SidebarPage>\r\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\r\n                    <Language />\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSettings.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Settings);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport User from '../Tile/User';\r\nimport SearchInput from './Search/SearchInput';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { debounce, throttle } from '../../Utils/Common';\r\nimport { openUser } from '../../Actions/Client';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Contacts.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId, style } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, onClick, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass Contacts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n\r\n        this.state = {\r\n            items: null,\r\n            searchItems: null\r\n        };\r\n\r\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\r\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { current } = this.searchInputRef;\r\n        if (current) {\r\n            setTimeout(() => current.focus(), 50);\r\n        }\r\n\r\n        this.loadContent();\r\n    }\r\n\r\n    handleScroll = event => {\r\n        this.handleDebounceScroll();\r\n        this.handleThrottleScroll();\r\n    };\r\n\r\n    handleDebounceScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    handleThrottleScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    loadRenderIdsContent = () => {\r\n        const { items, searchItems } = this.state;\r\n\r\n        const currentItems = searchItems || items;\r\n\r\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\r\n        if (!current) return;\r\n\r\n        const renderIds = current.getListRenderIds();\r\n        if (renderIds.size > 0) {\r\n            const userIds = [];\r\n            [...renderIds.keys()].forEach(key => {\r\n                userIds.push(currentItems.user_ids[key]);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadUsersContent(store, userIds);\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        let contacts = CacheStore.contacts;\r\n        if (!contacts) {\r\n            contacts = await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\r\n            CacheStore.contacts = contacts;\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\r\n\r\n        this.setState({\r\n            items: contacts\r\n        });\r\n    }\r\n\r\n    handleOpenUser = userId => {\r\n        openUser(userId, false);\r\n        this.handleClose();\r\n    };\r\n\r\n    renderItem = ({ index, style }, items) => {\r\n        const userId = items.user_ids[index];\r\n\r\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const searchItems = await TdLibController.send({\r\n            '@type': 'searchContacts',\r\n            query,\r\n            limit: 1000\r\n        });\r\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\r\n            getUserFullName(x).localeCompare(getUserFullName(y))\r\n        );\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\r\n\r\n        this.setState({ searchItems });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateContacts',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup } = this.props;\r\n        const { items, searchItems } = this.state;\r\n\r\n        const style = popup ? { minHeight: 800 } : null;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\r\n                </div>\r\n                <div className='contacts-content' style={style}>\r\n                    {items && (\r\n                        <VirtualizedList\r\n                            ref={this.listRef}\r\n                            className='contacts-list'\r\n                            source={items.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, items)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                    {searchItems && (\r\n                        <VirtualizedList\r\n                            ref={this.searchListRef}\r\n                            className='contacts-list contacts-search-list'\r\n                            source={searchItems.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, searchItems)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nContacts.propTypes = {\r\n    popup: PropTypes.bool\r\n};\r\n\r\nexport default Contacts;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport DownloadIcon from '../../Assets/Icons/Download';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './UpdatePanel.css';\r\n\r\nclass UpdatePanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { isSmallWidth } = AppStore;\r\n\r\n        this.state = {\r\n            newContentAvailable: false,\r\n            isSmallWidth\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onClientUpdateNewContentAvailable = () => {\r\n        this.setState({ newContentAvailable: true });\r\n    };\r\n\r\n    handleUpdate = () => {\r\n        if (this.handled) return;\r\n\r\n        this.handled = true;\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 250);\r\n    };\r\n\r\n    render() {\r\n        const { newContentAvailable, isSmallWidth } = this.state;\r\n        const { t } = this.props;\r\n\r\n        if (!newContentAvailable) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\r\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(UpdatePanel);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NextIcon from '../../Assets/Icons/Back';\r\nimport NewChatPhoto from './NewChatPhoto';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './NewGroup.css';\r\n\r\nclass NewChannel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.descriptionRef = React.createRef();\r\n\r\n        this.state = {\r\n            error: false,\r\n            defaultPhoto: null,\r\n            defaultPhotoURL: null,\r\n            defaultPhotoFile: null\r\n        };\r\n    }\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewChannel',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleDone = async () => {\r\n        const { error } = this.state;\r\n        const { defaultPhoto, defaultPhotoFile } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({\r\n                error: false\r\n            });\r\n        }\r\n\r\n        this.handleClose();\r\n\r\n        const description = this.descriptionRef.current.value;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createNewSupergroupChat',\r\n            title,\r\n            description,\r\n            is_channel: true,\r\n            location: null\r\n        });\r\n\r\n        if (defaultPhotoFile || defaultPhoto) {\r\n            const photo = defaultPhotoFile\r\n                ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\r\n                : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\r\n\r\n            TdLibController.send({\r\n                '@type': 'setChatPhoto',\r\n                chat_id: chat.id,\r\n                photo: { '@type': 'inputChatPhotoStatic', photo }\r\n            });\r\n        }\r\n\r\n        openChat(chat.id);\r\n    };\r\n\r\n    handleChoosePhoto = async (blob, blobURL) => {\r\n        this.setState({\r\n            defaultPhoto: blob,\r\n            defaultPhotoURL: blobURL\r\n        });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'uploadFile',\r\n            file: {\r\n                '@type': 'inputFileBlob',\r\n                name: 'photo.jpg',\r\n                data: blob\r\n            },\r\n            file_type: { '@type': 'fileTypePhoto' },\r\n            priority: THUMBNAIL_PRIORITY\r\n        });\r\n\r\n        this.setState({\r\n            defaultPhotoFile: result\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup, t } = this.props;\r\n        const { error } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('NewChannel')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='new-chat-content'>\r\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\r\n                        <div className='new-chat-title'>\r\n                            <TextField\r\n                                inputRef={this.titleRef}\r\n                                error={error}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('EnterChannelName')}\r\n                                defaultValue={''}\r\n                            />\r\n                            <TextField\r\n                                inputRef={this.descriptionRef}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('DescriptionOptionalPlaceholder')}\r\n                                defaultValue={''}\r\n                            />\r\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\r\n                    <NextIcon/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewChannel.propTypes = {\r\n    popup: PropTypes.bool,\r\n    userIds: PropTypes.array\r\n};\r\n\r\nexport default withTranslation()(NewChannel);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport UserTile from './UserTile';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { getUserShortName } from '../../Utils/User';\r\nimport './UserChip.css';\r\n\r\nclass UserChip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { userId, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <UserTile userId={userId} small={true}/>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{getUserShortName(userId)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserChip.propTypes = {\r\n    userId: PropTypes.number,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default UserChip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport User from '../Tile/User';\r\nimport UserChip from '../Tile/UserChip';\r\nimport SearchInput from './Search/SearchInput';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { debounce, throttle } from '../../Utils/Common';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Contacts.css';\r\nimport { scrollBottom } from '../../Utils/DOM';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId, selected, style } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, selected, onClick, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\r\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass AddParticipants extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.searchInputRef = React.createRef();\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n        this.wrapPanelRef = React.createRef();\r\n        this.itemsRef = new Map();\r\n\r\n        this.state = {\r\n            items: null,\r\n            searchItems: null,\r\n            selectedItems: {\r\n                array: [],\r\n                map: new Map()\r\n            },\r\n            focusedItem: null\r\n        };\r\n\r\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\r\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\r\n    }\r\n\r\n    getUserIds() {\r\n        return this.state.selectedItems.array;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { current } = this.searchInputRef;\r\n        if (current) {\r\n            setTimeout(() => current.focus(), 50);\r\n        }\r\n\r\n        this.loadContent();\r\n    }\r\n\r\n    handleScroll = event => {\r\n        this.handleDebounceScroll();\r\n        this.handleThrottleScroll();\r\n    };\r\n\r\n    handleDebounceScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    handleThrottleScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    loadRenderIdsContent = () => {\r\n        const { items, searchItems } = this.state;\r\n\r\n        const currentItems = searchItems || items;\r\n\r\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\r\n        if (!current) return;\r\n\r\n        const renderIds = current.getListRenderIds();\r\n        if (renderIds.size > 0) {\r\n            const userIds = [];\r\n            [...renderIds.keys()].forEach(key => {\r\n                userIds.push(currentItems.user_ids[key]);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadUsersContent(store, userIds);\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        let contacts = CacheStore.contacts;\r\n        if (!contacts) {\r\n            contacts = await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\r\n            CacheStore.contacts = contacts;\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\r\n\r\n        this.setState({\r\n            items: contacts\r\n        });\r\n    }\r\n\r\n    handleOpenUser = userId => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        const { map, array } = selectedItems;\r\n\r\n        const newMap = new Map(map);\r\n        let newArray;\r\n        let newFocusedItem = null;\r\n        let isDeleting = false;\r\n        if (map.has(userId)) {\r\n            newMap.delete(userId);\r\n            newArray = array.filter(x => x !== userId);\r\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\r\n            isDeleting = true;\r\n        } else {\r\n            newMap.set(userId, userId);\r\n            newArray = array.concat([userId]);\r\n            newFocusedItem = null;\r\n        }\r\n\r\n        const input = this.searchInputRef.current;\r\n        input.focus();\r\n        if (!isDeleting) {\r\n            input.innerText = '';\r\n            this.handleSearch('');\r\n        }\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n        const prevHeight = wrapPanel.scrollHeight;\r\n        const prevOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const prevMap = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const offset = el.getOffset();\r\n                prevMap.set(key, offset);\r\n            }\r\n        }\r\n\r\n        const prevCSSText = wrapPanel.style.cssText;\r\n        const prevScrollTop = wrapPanel.scrollTop;\r\n        if (isDeleting) {\r\n            wrapPanel.style.cssText = null;\r\n        }\r\n\r\n        this.setState({\r\n            focusedItem: newFocusedItem,\r\n            selectedItems: {\r\n                array: newArray,\r\n                map: newMap\r\n            }\r\n        }, () => {\r\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\r\n            this.animateItems(prevMap);\r\n        });\r\n    };\r\n\r\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n\r\n        const currentHeight = wrapPanel.scrollHeight;\r\n        const currentOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const expanded = currentHeight > prevHeight;\r\n        const collapsed = currentHeight < prevHeight;\r\n\r\n        const maxHeight = 123;\r\n        if (expanded) {\r\n            if (prevHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                    setTimeout(() => {\r\n                        scrollBottom(wrapPanel, 'auto');\r\n                    }, 250);\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                scrollBottom(wrapPanel, 'smooth');\r\n            }\r\n        } else if (collapsed) {\r\n            if (currentHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            }\r\n        } else {\r\n            if (isDeleting) {\r\n                wrapPanel.style.cssText = prevCSSText;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            } else {\r\n                scrollBottom(wrapPanel, 'smooth');\r\n            }\r\n        }\r\n    }\r\n\r\n    animateItems(prevOffsets) {\r\n        const doubleTransform = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const currentOffset = el.getOffset();\r\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\r\n                if (prevOffset) {\r\n                    if (prevOffset.left < currentOffset.left) {\r\n                        doubleTransform.set(el, { prevOffset, currentOffset });\r\n                    }\r\n\r\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\r\n                    el.setStyleCSSText(transform);\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n            for (let key of this.itemsRef.keys()) {\r\n                const el = this.itemsRef.get(key);\r\n                if (el) {\r\n                    let transition = `transition: transform 0.25s ease`;\r\n                    if (doubleTransform.has(el)) {\r\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\r\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\r\n                                   + 'transition: transform 0.1s ease;'\r\n                    }\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n            }\r\n\r\n            if (!doubleTransform.size) return;\r\n\r\n            setTimeout(() => {\r\n                for (let el of doubleTransform.keys()) {\r\n                    const { currentOffset } = doubleTransform.get(el);\r\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\r\n                                     + 'transition: transform 0s ease;';\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n\r\n                requestAnimationFrame(() => {\r\n                    for (let el of doubleTransform.keys()) {\r\n                        const transition = 'transition: transform 0.15s ease';\r\n\r\n                        el.setStyleCSSText(transition);\r\n                    }\r\n                });\r\n\r\n            }, 101);\r\n        });\r\n    }\r\n\r\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\r\n        const userId = items[index];\r\n        const isSelected = selectedItemsMap.has(userId);\r\n\r\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null,\r\n                publicItems: null,\r\n                focusedItem: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const promises = [];\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchContacts',\r\n                query,\r\n                limit: 20\r\n            })\r\n        );\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchPublicChats',\r\n                query\r\n            })\r\n        );\r\n        const [searchItems, publicChats] = await Promise.all(promises);\r\n\r\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\r\n            getUserFullName(x).localeCompare(getUserFullName(y))\r\n        );\r\n\r\n        const publicItems = { '@type': 'users', user_ids: [] };\r\n        publicChats.chat_ids.reduce((array, chatId) => {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\r\n                array.push(chat.type.user_id);\r\n            }\r\n            return array;\r\n        }, publicItems.user_ids);\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, searchItems.user_ids);\r\n        loadUsersContent(store, publicItems.user_ids);\r\n\r\n        this.setState({ searchItems, publicItems, focusedItem: null });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleSearchClose = event => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        if (!selectedItems) return;\r\n\r\n        const { map } = selectedItems;\r\n        if (!map.has(focusedItem)) return;\r\n\r\n        event.stopPropagation();\r\n        event.nativeEvent.stopImmediatePropagation();\r\n\r\n        this.setState({\r\n            focusedItem: null\r\n        })\r\n    };\r\n\r\n    handleBackspace = () => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        if (!selectedItems) return;\r\n\r\n        const { array, map } = selectedItems;\r\n        if (!array) return;\r\n        if (!array.length) return;\r\n\r\n        if (map.has(focusedItem)) {\r\n            this.handleOpenUser(focusedItem);\r\n            return;\r\n        }\r\n\r\n        const lastItem = array[array.length - 1];\r\n        if (!lastItem) return;\r\n\r\n        this.setState({\r\n            focusedItem: lastItem\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup, t } = this.props;\r\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\r\n\r\n        const style = popup ? { minHeight: 800 } : null;\r\n\r\n        this.itemsRef.clear();\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\r\n                    </div>\r\n                </div>\r\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\r\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\r\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\r\n                </div>\r\n                <div className='contacts-border'/>\r\n                <div className='contacts-content' style={style}>\r\n                    {items && (\r\n                        <VirtualizedList\r\n                            ref={this.listRef}\r\n                            className='contacts-list'\r\n                            source={items.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                    {searchItems && publicItems && (\r\n                        <VirtualizedList\r\n                            ref={this.searchListRef}\r\n                            className='contacts-list contacts-search-list'\r\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAddParticipants.propTypes = {\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(AddParticipants);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport SectionHeader from './SectionHeader';\r\nimport User from '../Tile/User';\r\nimport NewChatPhoto from './NewChatPhoto';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './NewGroupParams.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' button style={style}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass NewGroupParams extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n\r\n        this.state = {\r\n            error: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { userIds } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, userIds);\r\n    }\r\n\r\n    getTitle() {\r\n        const { error } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return title;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n\r\n        return title;\r\n    }\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n        if (!onClose) return;\r\n\r\n        onClose();\r\n    };\r\n\r\n    render() {\r\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\r\n        const { error } = this.state;\r\n\r\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\r\n\r\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('NewGroup')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='new-chat-content'>\r\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\r\n                        <div className='new-chat-title'>\r\n                            <TextField\r\n                                inputRef={this.titleRef}\r\n                                error={error}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('GroupName')}\r\n                                defaultValue={''}\r\n                            />\r\n                        </div>\r\n                        <SectionHeader>{itemsCaption}</SectionHeader>\r\n                        {items}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewGroupParams.propTypes = {\r\n    userIds: PropTypes.array,\r\n    defaultPhotoURL: PropTypes.string,\r\n    onChoosePhoto: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(NewGroupParams);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AddParticipants from './AddParticipants';\r\nimport NewGroupParams from './NewGroupParams';\r\nimport SidebarPage from './SidebarPage';\r\nimport NextIcon from '../../Assets/Icons/Back';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './NewGroup.css';\r\n\r\nclass NewGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addParticipantsRef = React.createRef();\r\n        this.newGroupParamsRef = React.createRef();\r\n\r\n        this.state = {\r\n            openParams: false,\r\n            userIds: [],\r\n            defaultPhoto: null,\r\n            defaultPhotoURL: null,\r\n            defaultPhotoFile: null\r\n        };\r\n    }\r\n\r\n    handleDone = async () => {\r\n        const { openParams } = this.state;\r\n        if (!openParams) {\r\n            const userIds = this.addParticipantsRef.current.getUserIds();\r\n            if (!userIds.length) return;\r\n\r\n            this.setState({\r\n                openParams: true,\r\n                userIds\r\n            })\r\n        } else {\r\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\r\n\r\n            const title = this.newGroupParamsRef.current.getTitle();\r\n            if (!title) {\r\n                return;\r\n            }\r\n\r\n            this.handleClose();\r\n\r\n            const chat = await TdLibController.send({\r\n                '@type': 'createNewSupergroupChat',\r\n                title,\r\n                is_channel: false,\r\n                description: '',\r\n                location: null\r\n            });\r\n\r\n            if (defaultPhotoFile || defaultPhoto) {\r\n                const photo = defaultPhotoFile\r\n                     ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\r\n                     : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\r\n\r\n                TdLibController.send({\r\n                    '@type': 'setChatPhoto',\r\n                    chat_id: chat.id,\r\n                    photo: { '@type': 'inputChatPhotoStatic', photo }\r\n                });\r\n            }\r\n\r\n            if (userIds.length > 0) {\r\n                TdLibController.send({\r\n                    '@type': 'addChatMembers',\r\n                    chat_id: chat.id,\r\n                    user_ids: userIds\r\n                });\r\n            }\r\n\r\n            openChat(chat.id);\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleCloseParams = () => {\r\n        this.setState({\r\n            openParams: false,\r\n            userIds: []\r\n        })\r\n    };\r\n\r\n    handleChoosePhoto = async (blob, blobURL) => {\r\n        this.setState({\r\n            defaultPhoto: blob,\r\n            defaultPhotoURL: blobURL\r\n        });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'uploadFile',\r\n            file: {\r\n                '@type': 'inputFileBlob',\r\n                name: 'photo.jpg',\r\n                data: blob\r\n            },\r\n            file_type: { '@type': 'fileTypePhoto' },\r\n            priority: THUMBNAIL_PRIORITY\r\n        });\r\n\r\n        this.setState({\r\n            defaultPhotoFile: result\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { popup } = this.props;\r\n        const { openParams, userIds, defaultPhotoURL } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\r\n\r\n                <SidebarPage open={openParams}>\r\n                    <NewGroupParams\r\n                        ref={this.newGroupParamsRef}\r\n                        defaultPhotoURL={defaultPhotoURL}\r\n                        userIds={userIds}\r\n                        onChoosePhoto={this.handleChoosePhoto}\r\n                        onClose={this.handleCloseParams}\r\n                    />\r\n                </SidebarPage>\r\n\r\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\r\n                    <NextIcon/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewGroup.propTypes = {\r\n    popup: PropTypes.bool,\r\n    userIds: PropTypes.array\r\n};\r\n\r\nexport default withTranslation()(NewGroup);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Contacts from '../ColumnLeft/Contacts';\r\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\r\nimport Search from '../ColumnLeft/Search/Search';\r\nimport Settings from '../ColumnLeft/Settings/Settings';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './ChatInfoDialog.css';\r\nimport { openChat } from '../../Actions/Client';\r\nimport NewChannel from '../ColumnLeft/NewChannel';\r\nimport NewGroup from '../ColumnLeft/NewGroup';\r\n\r\nclass SidebarDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.headerRef = React.createRef();\r\n\r\n        this.state = {\r\n            openSearch: false,\r\n            openSettings: false,\r\n            openContacts: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\r\n\r\n        if (nextState.openSearch !== openSearch) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchText !== searchText) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSettings !== openSettings) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openContacts !== openContacts) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewGroup !== openNewGroup) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewChannel !== openNewChannel) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n    }\r\n\r\n    onClientUpdateSearchChat = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { chatId, query } = update;\r\n        const { openSearch, searchChatId, searchText } = this.state;\r\n\r\n        if (openSearch && chatId === searchChatId && query === searchText) {\r\n            return;\r\n        }\r\n\r\n        this.query = query;\r\n        this.setState(\r\n            {\r\n                openSearch: true,\r\n                searchChatId: chatId,\r\n                searchText: null\r\n            }\r\n        );\r\n    };\r\n\r\n    handleDialogEnter = () => {\r\n        if (!this.query) return;\r\n\r\n        const header = this.headerRef.current;\r\n        if (header) {\r\n            header.setInitQuery(this.query);\r\n        }\r\n\r\n        this.query = null;\r\n    };\r\n\r\n    onClientUpdateSettings = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open, chatId } = update;\r\n\r\n        this.setState({ openSettings: open, meChatId: chatId });\r\n    };\r\n\r\n    onClientUpdateContacts = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openContacts: open });\r\n    };\r\n\r\n    onClientUpdateNewGroup = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewGroup: open });\r\n    };\r\n\r\n    onClientUpdateNewChannel = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewChannel: open });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            openSettings: false,\r\n            openContacts: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false,\r\n            openSearch: false\r\n        });\r\n    };\r\n\r\n    handleSearch = visible => {\r\n        this.setState({\r\n            openSearch: visible,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSearchTextChange = text => {\r\n        this.setState({\r\n            searchText: text,\r\n            query: null\r\n        });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, openSearch) => {\r\n        openChat(chatId, messageId);\r\n\r\n        this.handleCloseSearch();\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.setState({\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\r\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{\r\n                    root: 'chat-info-dialog-root',\r\n                    container: 'chat-info-dialog-container',\r\n                    paper: 'chat-info-dialog-paper'\r\n                }}\r\n                onEnter={this.handleDialogEnter}\r\n                >\r\n                {openSettings && <Settings chatId={meChatId} popup/>}\r\n                {openContacts && <Contacts popup />}\r\n                {openNewGroup && <NewGroup popup/>}\r\n                {openNewChannel && <NewChannel popup />}\r\n                {openSearch && (\r\n                    <>\r\n                        <DialogsHeader\r\n                            ref={this.headerRef}\r\n                            openSearch={true}\r\n                            timeout={false}\r\n                            onClick={this.handleHeaderClick}\r\n                            onSearch={this.handleSearch}\r\n                            onSearchTextChange={this.handleSearchTextChange}\r\n                            popup\r\n                        />\r\n                        <div className='search-content'>\r\n                            <Search\r\n                                chatId={searchChatId}\r\n                                text={searchText}\r\n                                onSelectMessage={this.handleSelectMessage}\r\n                                onClose={this.handleCloseSearch}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarDialog.propTypes = {};\r\n\r\nexport default SidebarDialog;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport { orderCompare } from './Common';\r\nimport { getChatOrder } from './Chat';\r\nimport ChatStore from '../Stores/ChatStore';\r\n\r\nexport function getArchiveTitle() {\r\n    const archive = ChatStore.chatList.get('chatListArchive');\r\n    const chats = [];\r\n    const chatsOrder = [];\r\n    if (archive) {\r\n        for (const chatId of archive.keys()) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat) {\r\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\r\n                if (order !== '0') chats.push(chat);\r\n                chatsOrder.push({ order, id: chatId, title: chat.title });\r\n            }\r\n        }\r\n    }\r\n\r\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\r\n\r\n    return orderedChats.map(x => x.title).join(', ');\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport Archive from './Archive';\r\nimport Search from './Search/Search';\r\nimport Filters from './Filters';\r\nimport DialogsHeader from './DialogsHeader';\r\nimport DialogsList from './DialogsList';\r\nimport SidebarPage from './SidebarPage';\r\nimport Settings from './Settings/Settings';\r\nimport Contacts from './Contacts';\r\nimport UpdatePanel from './UpdatePanel';\r\nimport SidebarDialog from '../Popup/SidebarDialog';\r\nimport NewGroup from './NewGroup';\r\nimport NewChannel from './NewChannel';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getArchiveTitle } from '../../Utils/Archive';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { duration } from '@material-ui/core/styles/transitions';\r\nimport { CHAT_IDS_AUTHORIZED, CHAT_SLICE_LIMIT } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Dialogs.css';\r\n\r\nconst defaultTimeout = {\r\n    enter: duration.enteringScreen,\r\n    exit: duration.leavingScreen\r\n};\r\n\r\nclass Dialogs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogListRef = React.createRef();\r\n        this.archiveListRef = React.createRef();\r\n        this.dialogsHeaderRef = React.createRef();\r\n\r\n        this.state = {\r\n            cache: null,\r\n\r\n            showArchive: false,\r\n            archiveTitle: null,\r\n\r\n            archiveItems: [],\r\n\r\n            timeout: defaultTimeout,\r\n            openSearch: false,\r\n            openArchive: false,\r\n            openContacts: false,\r\n            openSettings: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false,\r\n\r\n            searchChatId: 0,\r\n            searchText: null,\r\n            query: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const {\r\n            cache,\r\n            showArchive,\r\n            archiveTitle,\r\n            archiveItems,\r\n            openSearch,\r\n            openArchive,\r\n            openSettings,\r\n            openContacts,\r\n            openNewGroup,\r\n            openNewChannel,\r\n            searchChatId,\r\n            searchText\r\n        } = this.state;\r\n\r\n        if (nextState.cache !== cache) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.showArchive !== showArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.archiveTitle !== archiveTitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.archiveItems !== archiveItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSearch !== openSearch) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openArchive !== openArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSettings !== openSettings) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openContacts !== openContacts) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewGroup !== openNewGroup) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewChannel !== openNewChannel) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchChatId !== searchChatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchText !== searchText) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCache();\r\n\r\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\r\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\r\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\r\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\r\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    onUpdateChatFilters = update => {\r\n        this.handleSaveCache();\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        if (!isSmallWidth) return;\r\n\r\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\r\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\r\n            this.setState({\r\n                    openContacts: false,\r\n                    openSettings: false,\r\n                    openSearch: false,\r\n                    openNewGroup: false,\r\n                    openNewChannel: false,\r\n                    timeout: 0\r\n                }, () => {\r\n                    this.setState({\r\n                        timeout: defaultTimeout\r\n                    });\r\n            });\r\n        }\r\n    };\r\n\r\n    async loadCache() {\r\n        const cache = (await CacheStore.load()) || {};\r\n\r\n        const { chats, archiveChats } = cache;\r\n\r\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\r\n        this.setState({\r\n            cache,\r\n\r\n            showArchive: archiveChats && archiveChats.length > 0,\r\n            archiveTitle: getArchiveTitle()\r\n        });\r\n\r\n        this.loadChatContents((chats || []).map(x => x.id));\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateCacheLoaded'\r\n        });\r\n    }\r\n\r\n    async saveCache() {\r\n        const promises = [];\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            limit: CHAT_SLICE_LIMIT\r\n        }));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListArchive' },\r\n            limit: CHAT_SLICE_LIMIT\r\n        }));\r\n        const [mainChats, archiveChats] = await Promise.all(promises);\r\n        mainChats.chat_ids = mainChats.chat_ids.filter(x => CHAT_IDS_AUTHORIZED.includes(x));\r\n        archiveChats.chat_ids = archiveChats.chat_ids.filter(x => CHAT_IDS_AUTHORIZED.includes(x));\r\n\r\n        const { filters } = FilterStore;\r\n\r\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\r\n    }\r\n\r\n    onUpdateChatOrder = update => {\r\n        const { showArchive: prevShowArchive } = this.state;\r\n\r\n        const { current: mainCurrent } = this.dialogListRef;\r\n        if (mainCurrent && mainCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const { current: archiveCurrent } = this.archiveListRef;\r\n        if (archiveCurrent && archiveCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const archiveList = ChatStore.chatList.get('chatListArchive');\r\n        const showArchive = archiveList && archiveList.size > 0;\r\n\r\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\r\n            if (!prevShowArchive && showArchive) {\r\n                const { current } = this.dialogListRef;\r\n                if (current.listRef) {\r\n                    const { current: listCurrent } = current.listRef;\r\n                    if (listCurrent && listCurrent.scrollTop > 0) {\r\n                        current.scrollTop += 68;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (prevShowArchive && !showArchive) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateCloseArchive'\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateContacts = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openContacts: open });\r\n    };\r\n\r\n    onClientUpdateSettings = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open, chatId } = update;\r\n\r\n        this.setState({ openSettings: open, meChatId: chatId });\r\n    };\r\n\r\n    onClientUpdateNewGroup = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewGroup: open });\r\n    };\r\n\r\n    onClientUpdateNewChannel = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewChannel: open });\r\n    };\r\n\r\n    onClientUpdateArchive = update => {\r\n        const { open } = update;\r\n\r\n        this.setState({ openArchive: open });\r\n    };\r\n\r\n    onClientUpdateThemeChange = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateSearchChat = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { chatId, query } = update;\r\n        const { openSearch, searchChatId, searchText } = this.state;\r\n\r\n        if (openSearch && chatId === searchChatId && query === searchText) {\r\n            return;\r\n        }\r\n\r\n        const header = this.dialogsHeaderRef.current;\r\n        this.setState(\r\n            {\r\n                openSearch: true,\r\n                searchChatId: chatId,\r\n                searchText: null,\r\n                openArchive: false,\r\n                openContacts: false,\r\n                openSettings: false,\r\n                openNewGroup: false,\r\n                openNewChannel: false,\r\n            },\r\n            () => {\r\n                if (header) {\r\n                    header.setInitQuery(query);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        const { openArchive } = this.state;\r\n        if (openArchive) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateCloseArchive'\r\n            });\r\n        } else {\r\n            this.dialogListRef.current.scrollToTop();\r\n        }\r\n    };\r\n\r\n    handleSearch = visible => {\r\n        this.setState({\r\n            openSearch: visible,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, openSearch) => {\r\n        openChat(chatId, messageId);\r\n\r\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\r\n        const searchText = openSearch ? this.state.searchText : null;\r\n\r\n        this.setState({\r\n            openSearch,\r\n            searchChatId,\r\n            searchText\r\n        });\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.setState({\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSearchTextChange = text => {\r\n        this.setState({\r\n            searchText: text,\r\n            query: null\r\n        });\r\n    };\r\n\r\n    handleSaveCache = () => {\r\n        this.saveCache();\r\n    };\r\n\r\n    loadChatContents(chatIds) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chatIds);\r\n    }\r\n\r\n    handleCloseArchive = () => {\r\n        this.setState({ openArchive: false });\r\n    };\r\n\r\n    handleCloseContacts = () => {\r\n        this.setState({ openContacts: false });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        this.setState({ openSettings: false });\r\n    };\r\n\r\n    handleCloseNewGroup = () => {\r\n        this.setState({ openNewGroup: false });\r\n    };\r\n\r\n    handleCloseNewChannel = () => {\r\n        this.setState({ openNewChannel: false });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            cache,\r\n            showArchive,\r\n            archiveTitle,\r\n            archiveItems,\r\n            meChatId,\r\n            openSettings,\r\n            openContacts,\r\n            openArchive,\r\n            openSearch,\r\n            openNewGroup,\r\n            openNewChannel,\r\n            timeout,\r\n            searchChatId,\r\n            searchText\r\n        } = this.state;\r\n\r\n        const mainCacheItems = cache && cache.chats ? cache.chats : null;\r\n        const archiveCacheItems = cache && cache.archiveChats ? cache.archiveChats : null;\r\n\r\n        return (\r\n            <>\r\n                <div className='dialogs'>\r\n                    <div className='sidebar-page'>\r\n                        <div className='dialogs-content'>\r\n                            <div className='dialogs-content-internal'>\r\n                                {/* <Filters/> */}\r\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\r\n                                <DialogsList\r\n                                    type='chatListMain'\r\n                                    ref={this.dialogListRef}\r\n                                    cacheItems={mainCacheItems}\r\n                                    onSaveCache={this.handleSaveCache}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {/*<UpdatePanel />*/}\r\n                    </div>\r\n\r\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\r\n                        <Archive\r\n                            innerListRef={this.archiveListRef}\r\n                            items={archiveItems}\r\n                            cacheItems={archiveCacheItems}\r\n                        />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\r\n                        <Contacts />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\r\n                        <Settings chatId={meChatId} />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\r\n                        <NewGroup />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\r\n                        <NewChannel />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarDialog/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dialogs;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ChatInfo from '../ColumnRight/ChatInfo';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfoDialog.css';\r\n\r\nclass ChatInfoDialog extends React.Component {\r\n    state = {\r\n        chatId: ApplicationStore.dialogChatId\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.state;\r\n\r\n        return nextState.chatId !== chatId;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        if (ApplicationStore.mediaViewerContent) {\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    onClientUpdateDialogChatId = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDialogChatId',\r\n            chatId: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.state;\r\n        if (!chatId) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{\r\n                    root: 'chat-info-dialog-root',\r\n                    container: 'chat-info-dialog-container',\r\n                    paper: 'chat-info-dialog-paper'\r\n                }}>\r\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfoDialog.propTypes = {};\r\n\r\nexport default ChatInfoDialog;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\r\n    'Attach'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\r\n    'Send'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\r\n    'Microphone'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AttachFileIcon from '../../Assets/Icons/Attach';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\r\nimport PollIcon from '@material-ui/icons/PollOutlined';\r\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\r\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\r\nimport './AttachButton.css';\r\n\r\nclass AttachButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPhoto } = this.props;\r\n        if (!onAttachPhoto) return;\r\n\r\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachDocument } = this.props;\r\n        if (!onAttachDocument) return;\r\n\r\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPoll } = this.props;\r\n        if (!onAttachPoll) return;\r\n\r\n        onAttachPoll();\r\n    };\r\n\r\n    render() {\r\n        const { classes, t, chatId } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className='inputbox-icon-button'\r\n                    aria-label='Attach'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <AttachFileIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='attach-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    classes={{\r\n                        paper: 'attach-button-paper'\r\n                    }}\r\n                    onClose={this.handleMenuClose}>\r\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\r\n                        <ListItemIcon>\r\n                            <PhotoIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachPhoto')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\r\n                        <ListItemIcon>\r\n                            <InsertDriveFileIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachDocument')} />\r\n                    </MenuItem>\r\n                    {!isPrivateChat(chatId) && (\r\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\r\n                            <ListItemIcon>\r\n                                <PollIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Poll')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAttachButton.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onAttachDocument: PropTypes.func.isRequired,\r\n    onAttachPhoto: PropTypes.func.isRequired,\r\n    onAttachPoll: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(AttachButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nexport function focusNode(node, toEnd = false) {\r\n    if (!node) return;\r\n\r\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\r\n        const lastNode = node.childNodes[node.childNodes.length - 1];\r\n        const range = document.createRange();\r\n        range.setStart(lastNode, lastNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        node.scrollTop = node.scrollHeight;\r\n    }\r\n\r\n    node.focus();\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst keys = {\r\n    backspace: 8,\r\n    shift: 16,\r\n    ctrl: 17,\r\n    alt: 18,\r\n    delete: 46,\r\n    cmd: 91,\r\n    leftArrow: 37,\r\n    upArrow: 38,\r\n    rightArrow: 39,\r\n    downArrow: 40\r\n};\r\n\r\nexport const utils = {\r\n    special: {},\r\n    navigational: {},\r\n    isSpecial(e) {\r\n        return typeof this.special[e.keyCode] !== 'undefined';\r\n    },\r\n    isNavigational(e) {\r\n        return typeof this.navigational[e.keyCode] !== 'undefined';\r\n    }\r\n};\r\n\r\nutils.special[keys['backspace']] = true;\r\nutils.special[keys['shift']] = true;\r\nutils.special[keys['ctrl']] = true;\r\nutils.special[keys['alt']] = true;\r\nutils.special[keys['delete']] = true;\r\n\r\nutils.navigational[keys['upArrow']] = true;\r\nutils.navigational[keys['downArrow']] = true;\r\nutils.navigational[keys['leftArrow']] = true;\r\nutils.navigational[keys['rightArrow']] = true;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { utils } from '../../Utils/Key';\r\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollOption.css';\r\n\r\nclass CreatePollOption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.optionTextRef = React.createRef();\r\n\r\n        this.state = {\r\n            remainLength: POLL_OPTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    getText = () => {\r\n        return this.optionTextRef.current.innerText;\r\n    };\r\n\r\n    focus = (toEnd = false) => {\r\n        const node = this.optionTextRef.current;\r\n\r\n        focusNode(node, toEnd);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        const { option, onDelete } = this.props;\r\n        if (!option) return;\r\n        if (!onDelete) return;\r\n\r\n        onDelete(option.id);\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { option } = this.props;\r\n\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const length = node.dataset.length;\r\n        const maxLength = node.dataset.maxLength;\r\n        const text = this.getText();\r\n\r\n        this.setState({\r\n            remainLength: length - text.length\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollOption',\r\n            id: option.id,\r\n            text\r\n        });\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = this.getText();\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Backspace': {\r\n                const text = this.getText();\r\n                if (!text) {\r\n                    const { option, onDelete } = this.props;\r\n                    if (onDelete) {\r\n                        onDelete(option.id, true);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'Enter': {\r\n                const { option, onFocusNext } = this.props;\r\n                if (option && onFocusNext) {\r\n                    onFocusNext(option.id);\r\n                }\r\n\r\n                event.preventDefault();\r\n                return false;\r\n            }\r\n            case 'ArrowUp': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\r\n\r\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\r\n                    const { option, onFocusPrev } = this.props;\r\n                    if (onFocusPrev) {\r\n                        onFocusPrev(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    const { option, onFocusNext } = this.props;\r\n                    if (onFocusNext) {\r\n                        onFocusNext(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = this.getText();\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertText', false, pasteText);\r\n    };\r\n\r\n    handleChange = () => {\r\n        const { option } = this.props;\r\n        if (!option) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChooseOption',\r\n            id: option.id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, option } = this.props;\r\n        const { remainLength } = this.state;\r\n\r\n        const { is_chosen } = option;\r\n\r\n        return (\r\n            <div className='create-poll-option'>\r\n                <div className='create-poll-option-wrapper'>\r\n                    <Radio\r\n                        key={Date.now()}\r\n                        classes={{ root: 'create-poll-radio-root' }}\r\n                        color='primary'\r\n                        checked={is_chosen}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <div\r\n                        ref={this.optionTextRef}\r\n                        className='create-poll-option-text'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('Option')}\r\n                        data-length={POLL_OPTION_LENGTH}\r\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\r\n                        onInput={this.handleInput}\r\n                        onKeyDown={this.handleKeyDown}\r\n                        onPaste={this.handlePaste}\r\n                    />\r\n                </div>\r\n                <div className='create-poll-option-delete-button'>\r\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\r\n                        <CloseIcon fontSize='small' />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='create-poll-option-bottom-border' />\r\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\r\n                    <Typography\r\n                        align='center'\r\n                        className='create-poll-option-subtitle'\r\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\r\n                        variant='subtitle1'>\r\n                        {remainLength}\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollOption.propTypes = {\r\n    option: PropTypes.object.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onFocusPrev: PropTypes.func.isRequired,\r\n    onFocusNext: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollOption);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreatePollOption from './CreatePollOption';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { utils } from '../../Utils/Key';\r\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport {\r\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n    POLL_OPTIONS_MAX_COUNT,\r\n    POLL_QUESTION_HINT_LENGTH,\r\n    POLL_QUESTION_LENGTH,\r\n    POLL_QUESTION_MAX_LENGTH\r\n} from '../../Constants';\r\nimport PollStore from '../../Stores/PollStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollDialog.css';\r\n\r\nclass CreatePollDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.questionRef = React.createRef();\r\n        this.optionsRefMap = new Map();\r\n\r\n        this.state = {\r\n            poll: null,\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    handleClientUpdateNewPoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePollQuestion = update => {\r\n        const { poll } = PollStore;\r\n\r\n        const node = this.questionRef.current;\r\n        const length = node.dataset.length;\r\n        const innerText = node.innerText;\r\n\r\n        this.setState({\r\n            remainLength: length - innerText.length,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll });\r\n    };\r\n\r\n    handleClientUpdateNewPollOption = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll }, () => {\r\n            setTimeout(() => {\r\n                const node = this.optionsRefMap.get(poll.options.length - 1);\r\n\r\n                node.focus(true);\r\n            });\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { poll } = this.state;\r\n\r\n        if (poll && !prevState.poll) {\r\n            setTimeout(() => {\r\n                focusNode(this.questionRef.current, true);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = node.innerText;\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Enter': {\r\n                if (!event.shiftKey) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = node.innerText;\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertText', false, pasteText);\r\n    };\r\n\r\n    handleInput = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        //const length = node.dataset.length;\r\n\r\n        const innerText = node.innerText;\r\n        const innerHtml = node.innerHTML;\r\n\r\n        if (innerHtml === '<br>') {\r\n            node.innerText = '';\r\n        }\r\n\r\n        // this.setState({\r\n        //     remainLength: length - innerText.length\r\n        // });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollQuestion',\r\n            question: innerText\r\n        });\r\n    };\r\n\r\n    handleAddOption = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\r\n\r\n        const option = {\r\n            id: Date.now(),\r\n            text: ''\r\n        };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPollOption',\r\n            option\r\n        });\r\n    };\r\n\r\n    handleDeleteOption = (id, backspace = false) => {\r\n        if (backspace) {\r\n            this.handleDeleteByBackspace(id);\r\n        } else {\r\n            this.handleDelete(id);\r\n        }\r\n    };\r\n\r\n    handleDelete = id => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePollOption',\r\n            id\r\n        });\r\n    };\r\n\r\n    handleDeleteByBackspace = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n        let deleteOption = true;\r\n        for (let i = index; i < options.length; i++) {\r\n            const { text } = options[i];\r\n            if (text) {\r\n                deleteOption = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (deleteOption) {\r\n            this.handleDeleteOption(id);\r\n        }\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, true);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(true);\r\n    };\r\n\r\n    handleFocusPrevOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, false);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(false);\r\n    };\r\n\r\n    handleFocusNextOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const nextIndex = index + 1;\r\n\r\n        const nextNode = this.optionsRefMap.get(nextIndex);\r\n        if (!nextNode) {\r\n            const text = index >= 0 && index < options.length ? options[index].text : '';\r\n            if (options.length && !text) {\r\n                return;\r\n            }\r\n\r\n            this.handleAddOption();\r\n            return;\r\n        }\r\n\r\n        nextNode.focus(nextNode, true);\r\n    };\r\n\r\n    getHint = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\r\n\r\n        if (addCount <= 0) {\r\n            return 'You have added the maximum number of options.';\r\n        }\r\n        if (addCount === 1) {\r\n            return 'You can add 1 more option.';\r\n        }\r\n\r\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { poll } = this.state;\r\n\r\n        if (hasPollData(poll)) {\r\n            this.setState({ confirm: true });\r\n        } else {\r\n            this.handleConfirmationDone();\r\n        }\r\n    };\r\n\r\n    handleSend = () => {\r\n        const { onSend } = this.props;\r\n\r\n        const inputMessagePoll = PollStore.getInputMessagePoll();\r\n        if (!inputMessagePoll) return;\r\n\r\n        onSend(inputMessagePoll);\r\n\r\n        this.handleConfirmationDone();\r\n    };\r\n\r\n    handleConfirmationClose = () => {\r\n        this.setState({ confirm: false });\r\n    };\r\n\r\n    handleConfirmationDone = () => {\r\n        this.handleConfirmationClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePoll'\r\n        });\r\n    };\r\n\r\n    handleChangeAnonymous = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeAnonymous'\r\n        });\r\n    };\r\n\r\n    handleChangeAllowMultipleAnswers = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\r\n        });\r\n    };\r\n\r\n    handleChangeType = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeType'\r\n        });\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleAllowMultipleAnswersClick = event => {\r\n        const { t } = this.props;\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\r\n        if (quizPoll) {\r\n            event.stopPropagation();\r\n\r\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { remainLength, confirm, poll } = this.state;\r\n        if (!poll) return null;\r\n\r\n        const { is_anonymous } = poll;\r\n\r\n        const options = poll ? poll.options : [];\r\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\r\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\r\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\r\n\r\n        this.optionsRefMap.clear();\r\n        const items = options.map((x, i) => (\r\n            <CreatePollOption\r\n                ref={el => this.optionsRefMap.set(i, el)}\r\n                key={x.id}\r\n                option={x}\r\n                onDelete={this.handleDeleteOption}\r\n                onFocusPrev={this.handleFocusPrevOption}\r\n                onFocusNext={this.handleFocusNextOption}\r\n            />\r\n        ));\r\n\r\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\r\n        const hint = this.getHint();\r\n\r\n        return (\r\n            <>\r\n                <Dialog\r\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\r\n                    open\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\r\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\r\n                        <div className='create-poll-dialog-question-title'>\r\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\r\n                                {t('Question')}\r\n                            </Typography>\r\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\r\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\r\n                                    {remainLength}\r\n                                </Typography>\r\n                            )}\r\n                        </div>\r\n                        <div\r\n                            ref={this.questionRef}\r\n                            id='create-poll-dialog-question'\r\n                            contentEditable\r\n                            suppressContentEditableWarning\r\n                            placeholder={t('QuestionHint')}\r\n                            data-length={POLL_QUESTION_LENGTH}\r\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\r\n                            onPaste={this.handlePaste}\r\n                            onKeyDown={this.handleKeyDown}\r\n                            onInput={this.handleInput}\r\n                        />\r\n                        <Divider className='divider' />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('PollOptions')}\r\n                        </Typography>\r\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\r\n                            {items}\r\n                            {canAddOption && (\r\n                                <ListItem\r\n                                    selected={false}\r\n                                    className='create-poll-add-option'\r\n                                    button\r\n                                    onClick={this.handleAddOption}>\r\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\r\n                                </ListItem>\r\n                            )}\r\n                        </List>\r\n                        <Typography>{hint}</Typography>\r\n                        <Divider className='divider' />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('Settings')}\r\n                        </Typography>\r\n                        <FormGroup>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        color='primary'\r\n                                        checked={is_anonymous}\r\n                                        onChange={this.handleChangeAnonymous}\r\n                                    />\r\n                                }\r\n                                label={t('PollAnonymous')}\r\n                            />\r\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            color='primary'\r\n                                            disabled={allowMultipleAnswersDisabled}\r\n                                            checked={allowMultipleAnswers}\r\n                                            onChange={this.handleChangeAllowMultipleAnswers}\r\n                                        />\r\n                                    }\r\n                                    label={t('PollMultiple')}\r\n                                />\r\n                            </div>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\r\n                                }\r\n                                label={t('PollQuiz')}\r\n                            />\r\n                        </FormGroup>\r\n                        <Typography>{t('QuizInfo')}</Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        {isValidPoll(poll) && (\r\n                            <Button color='primary' onClick={this.handleSend}>\r\n                                {t('Create')}\r\n                            </Button>\r\n                        )}\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    className='create-poll-dialog-root'\r\n                    open={confirm}\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    onClose={this.handleConfirmationClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\r\n                        {t('CancelPollAlertText')}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollDialog.propTypes = {\r\n    onSend: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withSnackbar,\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { validateUrl } from '../../Utils/Url';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './EditUrlDialog.css';\r\n\r\nclass EditUrlDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.textRef = React.createRef();\r\n        this.textInputRef = React.createRef();\r\n        this.urlRef = React.createRef();\r\n        this.urlInputRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { defaultText, defaultUrl, open } = this.props;\r\n\r\n        if (open && prevProps.open !== open) {\r\n            setTimeout(() => {\r\n                const text = this.textInputRef.current;\r\n                const url = this.urlInputRef.current;\r\n\r\n                if (!text) return;\r\n                if (!url) return;\r\n\r\n                if (!defaultText) {\r\n                    text.focus();\r\n                } else if (!defaultUrl) {\r\n                    url.focus();\r\n                } else {\r\n                    text.focus();\r\n                    text.select();\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // const { defaultText, defaultUrl } = this.props;\r\n        //\r\n        // const text = this.textInputRef.current;\r\n        // const url = this.urlInputRef.current;\r\n        //\r\n        // if (!text) return;\r\n        // if (!url) return;\r\n        //\r\n        // setTimeout(() => {\r\n        //     if (!defaultText) {\r\n        //         text.focus();\r\n        //     } else if (!defaultUrl) {\r\n        //         url.focus();\r\n        //     } else {\r\n        //         text.focus();\r\n        //         // text.select();\r\n        //     }\r\n        // }, 0);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\r\n        const { textError, urlError } = this.state;\r\n\r\n        if (nextProps.defaultText !== defaultText) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.defaultUrl !== defaultUrl) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.textError !== textError) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.urlError !== urlError) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.onDone !== onDone) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.onCancel !== onCancel) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.open !== open) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (state.prevOpen !== props.open) {\r\n            return {\r\n                prevOpen: true,\r\n                textError: false,\r\n                urlError: false,\r\n                text: null,\r\n                url: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleTextKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            this.urlInputRef.current.focus();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleUrlKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            this.handleDone();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleTextChange = event => {\r\n        this.setState({\r\n            text: event.target.value\r\n        });\r\n    };\r\n\r\n    handleUrlChange = event => {\r\n        this.setState({\r\n            url: event.target.value\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { defaultText, defaultUrl } = this.props;\r\n        let { text, url } = this.state;\r\n\r\n        text = text !== null ? text : defaultText;\r\n        url = url !== null ? url : defaultUrl;\r\n\r\n        if (!text && !url) {\r\n            this.textInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        if (!text) {\r\n            this.setState({ textError: true });\r\n            this.textInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        url = validateUrl(url);\r\n        if (!url) {\r\n            this.setState({ urlError: true });\r\n            this.urlInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        const { onDone } = this.props;\r\n\r\n        onDone(text, url);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onCancel } = this.props;\r\n\r\n        onCancel();\r\n    };\r\n\r\n    render() {\r\n        const { open, defaultUrl, defaultText, t } = this.props;\r\n        const { textError, urlError } = this.state;\r\n        if (!open) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='edit-url-dialog-title'>\r\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\r\n                <DialogContent>\r\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\r\n                        <TextField\r\n                            ref={this.textRef}\r\n                            inputRef={this.textInputRef}\r\n                            label={t('Text')}\r\n                            margin='normal'\r\n                            autoComplete='off'\r\n                            defaultValue={defaultText}\r\n                            error={textError}\r\n                            onChange={this.handleTextChange}\r\n                            onKeyDown={this.handleTextKeyDown}\r\n                        />\r\n                        <TextField\r\n                            ref={this.urlRef}\r\n                            inputRef={this.urlInputRef}\r\n                            label={t('URL')}\r\n                            margin='normal'\r\n                            autoComplete='off'\r\n                            defaultValue={defaultUrl}\r\n                            error={urlError}\r\n                            onChange={this.handleUrlChange}\r\n                            onKeyDown={this.handleUrlKeyDown}\r\n                        />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Create')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEditUrlDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n    defaultText: PropTypes.string,\r\n    defaultUrl: PropTypes.string,\r\n    onDone: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(EditUrlDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getSrc } from '../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../Utils/Media';\r\nimport { hasVideoNote } from '../../Utils/Message';\r\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ReplyTile.css';\r\n\r\nclass ReplyTile extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\r\n    }\r\n\r\n    onClientUpdateBlob = update => {\r\n        const { chatId, messageId, thumbnail } = this.props;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.photo || thumbnail.file;\r\n        if (!file) return;\r\n\r\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\r\n        if (!thumbnail) return null;\r\n\r\n        const file = thumbnail.photo || thumbnail.file;\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const src = getSrc(file);\r\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\r\n        const isVideoNote = hasVideoNote(chatId, messageId);\r\n\r\n        return (\r\n            <div className='reply-tile' onClick={onClick}>\r\n                {miniSrc && (\r\n                    <img\r\n                        className={classNames(\r\n                            'reply-tile-photo',\r\n                            { 'reply-tile-photo-round': isVideoNote },\r\n                            { 'media-mini-blurred': true }\r\n                        )}\r\n                        draggable={false}\r\n                        src={miniSrc}\r\n                        alt=''\r\n                    />\r\n                )}\r\n                {src && (\r\n                    <img\r\n                        className={classNames(\r\n                            'reply-tile-photo',\r\n                            { 'reply-tile-photo-round': isVideoNote },\r\n                            { 'media-blurred': src && isBlurred }\r\n                        )}\r\n                        draggable={false}\r\n                        src={src}\r\n                        alt=''\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReplyTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    minithumbnail: PropTypes.object,\r\n    thumbnail: PropTypes.object,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default ReplyTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\r\nimport { closePinned, openChat } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Reply.css';\r\n\r\nclass Reply extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    onGetMessageResult = result => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === result.chat_id && messageId === result.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleOpen = event => {\r\n        if (event.button !== 0) return;\r\n\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId, onClick } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n        if (isDeletedMessage(message)) return null;\r\n\r\n        openChat(chatId, messageId, false);\r\n        closePinned();\r\n        if (onClick) onClick();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId } = this.props;\r\n        let { title } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        title = title || getTitle(message, t);\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        const thumbnail = getReplyThumbnail(chatId, messageId);\r\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n        if (isDeletedMessage(message)) {\r\n            title = null;\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        return (\r\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\r\n                <div className='reply-wrapper'>\r\n                    <div className='border reply-border' />\r\n                    {thumbnail && (\r\n                        <ReplyTile\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            minithumbnail={minithumbnail}\r\n                            thumbnail={thumbnail}\r\n                        />\r\n                    )}\r\n                    <div className='reply-content'>\r\n                        {title && <div className='reply-content-title'>{title}</div>}\r\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReply.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Reply);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Reply from '../Message/Reply';\r\nimport { editMessage, replyMessage } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBoxHeader.css';\r\n\r\nclass InputBoxHeader extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, editMessageId } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id && editMessageId !== message_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { chatId, editMessageId } = this.props;\r\n\r\n        if (editMessageId) {\r\n            editMessage(chatId, 0);\r\n        } else {\r\n            replyMessage(chatId, 0);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\r\n        if (!chatId) return null;\r\n        if (!messageId && !editMessageId) return null;\r\n\r\n        return (\r\n            <div className='inputbox-header'>\r\n                <div className='inputbox-header-left-column'>\r\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='inputbox-header-middle-column'>\r\n                    <Reply\r\n                        chatId={chatId}\r\n                        messageId={editMessageId || messageId}\r\n                        title={editMessageId ? t('EditMessage') : null}\r\n                        onClick={onClick}\r\n                    />\r\n                </div>\r\n                <div className='inputbox-header-right-column' />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInputBoxHeader.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    editMessageId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(InputBoxHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './PasteFilesDialog.css';\r\n\r\nclass PasteFilesDialog extends React.Component {\r\n    handleDone = () => {\r\n        const { onConfirm } = this.props;\r\n        onConfirm();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onCancel } = this.props;\r\n        onCancel();\r\n    };\r\n\r\n    render() {\r\n        const { files, t } = this.props;\r\n        if (!files) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nPasteFilesDialog.propTypes = {\r\n    files: PropTypes.array,\r\n    onConfirm: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(withTranslation());\r\n\r\nexport default enhance(PasteFilesDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './RecordTimer.css';\r\n\r\nclass RecordTimer extends React.Component {\r\n    state = { };\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\r\n    }\r\n\r\n    onClientUpdateRecordStart = () => {\r\n        this.timer = setInterval(() => {\r\n            const now = new Date();\r\n            const diff = now - this.startTime;\r\n\r\n            // console.log('[recordTimer] ');\r\n            this.setState({\r\n                time: diff\r\n            });\r\n        }, 25);\r\n        this.startTime = new Date();\r\n    }\r\n\r\n    onClientUpdateRecordStop = () => {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n\r\n        this.setState({\r\n            time: null\r\n        });\r\n    }\r\n\r\n    onClientUpdateRecordError = () => {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n\r\n        this.setState({\r\n            time: null\r\n        });\r\n    }\r\n\r\n    normalizeM(n) {\r\n        let msStr = n.toString();\r\n        if (msStr.length === 1) {\r\n            msStr += '0'\r\n        } else if (msStr.length > 2) {\r\n            msStr = msStr.substr(0, 2);\r\n        }\r\n\r\n        return msStr;\r\n    }\r\n\r\n    normalizeS(n) {\r\n        let msStr = n.toString();\r\n        if (msStr.length === 1) {\r\n            msStr = '0' + msStr;\r\n        }\r\n\r\n        return msStr;\r\n    }\r\n\r\n    msToTime(s) {\r\n        let ms = (s % 1000);\r\n        s = (s - ms) / 1000;\r\n        let secs = s % 60;\r\n        s = (s - secs) / 60;\r\n        let mins = s % 60;\r\n        let hrs = (s - mins) / 60;\r\n\r\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\r\n        if (hrs > 0) {\r\n            result = hrs + ':' + result;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        const { time } = this.state;\r\n        if (!time) return null;\r\n\r\n        return (\r\n            <div className='record-timer'>\r\n                {this.msToTime(time)}\r\n                <div className='record-timer-icon'/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nRecordTimer.propTypes = {};\r\n\r\nexport default RecordTimer;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport EditUrlDialog from './EditUrlDialog';\r\nimport { focusInput } from '../../Utils/DOM';\r\nimport { editMessage as editMessageAction } from '../../Actions/Client';\r\nimport { getEntities, getNodes } from '../../Utils/Message';\r\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './EditMediaDialog.css';\r\n\r\nclass EditMediaDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.captionRef = React.createRef();\r\n        this.editMediaRef = React.createRef();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevOpen } = state;\r\n        const { open, chatId, messageId, newItem } = props;\r\n\r\n        if (prevOpen !== open) {\r\n            if (open) {\r\n                const editMessage = MessageStore.get(chatId, messageId);\r\n                let sendAsPhoto = false;\r\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\r\n                    sendAsPhoto = true;\r\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\r\n                    sendAsPhoto = true;\r\n                }\r\n\r\n                return {\r\n                    prevOpen: true,\r\n                    sendAsPhoto,\r\n                    editMessage,\r\n                    editMedia: null,\r\n                    editFile: null\r\n                }\r\n            } else {\r\n                return {\r\n                    prevOpen: false,\r\n                    sendAsPhoto: false,\r\n                    editMessage: null,\r\n                    editMedia: null,\r\n                    editFile: null\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\r\n    }\r\n\r\n    handleSelectionChange = () => {\r\n        if (document.activeElement === this.captionRef.current) {\r\n            this.saveSelection();\r\n        }\r\n    };\r\n\r\n    handleEnter = () => {\r\n        const { chatId, messageId, open, newItem } = this.props;\r\n        if (!open) return;\r\n\r\n        let text = null;\r\n        let caption = null;\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (message) {\r\n            const { content } = message;\r\n            if (content) {\r\n                text = content.text;\r\n                caption = content.caption;\r\n            }\r\n        }\r\n\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        if (text) {\r\n            this.setFormattedText(text);\r\n        } else if (caption) {\r\n            this.setFormattedText(caption);\r\n        } else if (newItem && newItem.caption) {\r\n            element.innerHTML = newItem.caption;\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n\r\n        focusInput(element);\r\n    };\r\n\r\n    setFormattedText(formattedText) {\r\n        const { t } = this.props;\r\n        const element = this.captionRef.current;\r\n\r\n        if (!formattedText) {\r\n            element.innerText = null;\r\n            return;\r\n        }\r\n\r\n        const { text, entities } = formattedText;\r\n        try {\r\n            const nodes = getNodes(text, entities, t);\r\n            element.innerHTML = null;\r\n            nodes.forEach(x => {\r\n                element.appendChild(x);\r\n            });\r\n        } catch (e) {\r\n            element.innerText = text;\r\n        }\r\n    }\r\n\r\n    handleDone = () => {\r\n        const { chatId, newItem, onSend, onEdit } = this.props;\r\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\r\n\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n\r\n        element.innerText = null;\r\n\r\n        const { text, entities } = getEntities(innerHTML);\r\n\r\n        const caption = {\r\n            '@type': 'formattedText',\r\n            text,\r\n            entities\r\n        };\r\n\r\n        const isEditing = Boolean(editMessage);\r\n        if (isEditing) {\r\n            if (editMedia) {\r\n                const { photo } = editMedia;\r\n                if (!photo) return;\r\n\r\n                const { sizes } = photo;\r\n                if (!sizes) return;\r\n\r\n                const size = sizes[sizes.length - 1];\r\n\r\n                const { width, height } = size;\r\n\r\n                const content = {\r\n                    '@type': 'inputMessagePhoto',\r\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\r\n                    width,\r\n                    height,\r\n                    caption\r\n                };\r\n\r\n                onEdit(null, content);\r\n            } else {\r\n                onEdit(caption, null);\r\n            }\r\n\r\n            editMessageAction(chatId, 0);\r\n        } else {\r\n            const { media, file } = newItem;\r\n            const { audio, photo, document } = media;\r\n\r\n            let content = null;\r\n            if (photo) {\r\n                const { sizes } = photo;\r\n                if (!sizes) return;\r\n\r\n                const size = sizes[sizes.length - 1];\r\n\r\n                const { width, height } = size;\r\n\r\n                content = sendAsPhoto\r\n                    ? {\r\n                        '@type': 'inputMessagePhoto',\r\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                        width,\r\n                        height,\r\n                        caption\r\n                    }\r\n                    : {\r\n                        '@type': 'inputMessageDocument',\r\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                        thumbnail: null,\r\n                        caption\r\n                    };\r\n            } else if (document) {\r\n                content = {\r\n                    '@type': 'inputMessageDocument',\r\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                    thumbnail: null,\r\n                    caption\r\n                };\r\n            } else if (audio) {\r\n                const { duration, title, performer } = audio;\r\n\r\n                content = {\r\n                    '@type': 'inputMessageAudio',\r\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                    thumbnail: null,\r\n                    duration,\r\n                    title,\r\n                    performer,\r\n                    caption\r\n                };\r\n            }\r\n            if (!content) return;\r\n\r\n            onSend(content, file);\r\n        }\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { chatId, messageId, onCancel } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const isEditing = Boolean(message);\r\n\r\n        if (isEditing) {\r\n            editMessageAction(chatId, 0);\r\n        }\r\n\r\n        onCancel();\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\r\n\r\n        // fix CJK input\r\n        const { isComposing } = nativeEvent;\r\n        if (isComposing) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        switch (nativeEvent.code) {\r\n            case 'Enter':\r\n            case 'NumpadEnter': {\r\n                // enter+cmd, enter+ctrl, enter+shift\r\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\r\n                    document.execCommand('insertLineBreak');\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // enter\r\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\r\n                    this.handleDone();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + b\r\n            case 'KeyB': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleBold();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + i\r\n            case 'KeyI': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleItalic();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyK': {\r\n                // cmd + k\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleUrl();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // alt + cmd + k\r\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleMono();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // alt + cmd + n\r\n            case 'KeyN': {\r\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleClear();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClear = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n    };\r\n\r\n    handleBold = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('bold', false, null);\r\n    };\r\n\r\n    handleItalic = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('italic', false, null);\r\n    };\r\n\r\n    handleMono = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        let text = '';\r\n        const { selection } = this;\r\n        if (selection && !selection.isCollapsed) {\r\n            text = selection.toString();\r\n        }\r\n\r\n        if (!text) return;\r\n        text = `<code>${text}</code>`;\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('insertHTML', false, text);\r\n    };\r\n\r\n    handleUnderline = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('underline', false, null);\r\n    };\r\n\r\n    handleStrikeThrough = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('strikeThrough', false, null);\r\n    };\r\n\r\n    handleUrl = () => {\r\n        this.openEditUrlDialog();\r\n    };\r\n\r\n    openEditUrlDialog = () => {\r\n        let defaultText = '';\r\n        let defaultUrl = '';\r\n\r\n        const { selection, range } = this;\r\n        if (range) {\r\n            let { startContainer, endContainer } = range;\r\n            if (startContainer === endContainer) {\r\n                const { parentElement } = startContainer;\r\n                if (parentElement && parentElement.nodeName === 'A') {\r\n                    defaultText = parentElement.innerText;\r\n                    defaultUrl = parentElement.href;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!defaultText && selection && !selection.isCollapsed) {\r\n            defaultText = selection.toString();\r\n        }\r\n\r\n        this.setState({\r\n            openEditUrl: true,\r\n            defaultUrl,\r\n            defaultText\r\n        });\r\n    };\r\n\r\n    closeEditUrlDialog = () => {\r\n        this.setState(\r\n            {\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.restoreSelection();\r\n            }\r\n        );\r\n    };\r\n\r\n    saveSelection() {\r\n        this.selection = document.getSelection();\r\n        if (!this.selection) return;\r\n        if (!this.selection.rangeCount) return;\r\n\r\n        this.range = this.selection.getRangeAt(0);\r\n    }\r\n\r\n    restoreSelection() {\r\n        const { range } = this;\r\n\r\n        if (!range) {\r\n            focusInput();\r\n            return;\r\n        }\r\n\r\n        const selection = document.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        this.captionRef.current.focus();\r\n    }\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleInput = () => {\r\n        this.clearInnerHtml();\r\n    };\r\n\r\n    clearInnerHtml() {\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    }\r\n\r\n    handleCancelEditUrl = () => {\r\n        this.closeEditUrlDialog();\r\n    };\r\n\r\n    handleDoneEditUrl = (text, url) => {\r\n        this.closeEditUrlDialog();\r\n        setTimeout(() => {\r\n            // edit current link node\r\n            const { range } = this;\r\n            if (range) {\r\n                const { startContainer, endContainer } = range;\r\n                if (startContainer && startContainer === endContainer) {\r\n                    const { parentNode } = startContainer;\r\n                    if (parentNode && parentNode.nodeName === 'A') {\r\n                        parentNode.href = url;\r\n                        parentNode.title = url;\r\n                        parentNode.innerText = text;\r\n\r\n                        // move cursor to end of editing node\r\n                        const { lastChild } = parentNode;\r\n                        if (lastChild) {\r\n                            const range = document.createRange();\r\n                            range.setStart(lastChild, lastChild.textContent.length);\r\n                            range.setEnd(lastChild, lastChild.textContent.length);\r\n\r\n                            const selection = document.getSelection();\r\n                            selection.removeAllRanges();\r\n                            selection.addRange(range);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace selected text with new link node\r\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\r\n            document.execCommand('removeFormat', false, null);\r\n            document.execCommand('insertHTML', false, link);\r\n        }, 0);\r\n    };\r\n\r\n    handleEditMedia = event => {\r\n        const element = this.editMediaRef.current;\r\n        if (!element) return;\r\n\r\n        element.click();\r\n    };\r\n\r\n    handleEditMediaComplete = async () => {\r\n        const element = this.editMediaRef.current;\r\n        if (!element) return;\r\n\r\n        const { files } = element;\r\n        if (files.length === 0) return;\r\n\r\n        const [file, ...rest] = Array.from(files);\r\n        if (!file) return;\r\n\r\n        const editMedia = await getMediaPhotoFromFile(file);\r\n\r\n        this.setState({\r\n            editFile: file,\r\n            editMedia\r\n        });\r\n\r\n        element.value = '';\r\n    };\r\n\r\n    handleSendAsPhoto = () => {\r\n        const { sendAsPhoto } = this.state;\r\n\r\n        this.setState({\r\n            sendAsPhoto: !sendAsPhoto\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, newItem, open, t } = this.props;\r\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\r\n        if (!open) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const isEditing = Boolean(message);\r\n        let isPhoto = false;\r\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\r\n            isPhoto = true;\r\n        }\r\n\r\n        let media = null;\r\n        if (isEditing) {\r\n            media =\r\n            editMedia\r\n                ? getMedia({ content: editMedia })\r\n                : getMedia(message, null);\r\n        } else if (newItem) {\r\n            media = getMedia({ content: newItem.media });\r\n        }\r\n        const doneLabel = isEditing ? t('Save') : t('Send');\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='edit-media-dialog-title'\r\n                onEnter={this.handleEnter}>\r\n                <div className='edit-media-dialog-content'>\r\n                    <div style={{ margin: 24 }}>{media}</div>\r\n                    { isEditing && (\r\n                        <>\r\n                            <IconButton\r\n                                disableRipple={true}\r\n                                aria-label={t('Edit')}\r\n                                className='edit-media-dialog-edit-button'\r\n                                size='small'\r\n                                onClick={this.handleEditMedia}>\r\n                                <EditIcon fontSize='inherit' />\r\n                            </IconButton>\r\n                            <input\r\n                                ref={this.editMediaRef}\r\n                                className='inputbox-attach-button'\r\n                                type='file'\r\n                                accept='image/*'\r\n                                onChange={this.handleEditMediaComplete}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    { !isEditing && isPhoto && (\r\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\r\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\r\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\r\n                        </RadioGroup>\r\n                    )}\r\n                </div>\r\n                <div\r\n                    ref={this.captionRef}\r\n                    id='edit-media-dialog-caption'\r\n                    className='scrollbars-hidden'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Caption')}\r\n                    onKeyDown={this.handleKeyDown}\r\n                    onPaste={this.handlePaste}\r\n                    onInput={this.handleInput}\r\n                />\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {doneLabel}\r\n                    </Button>\r\n                </DialogActions>\r\n                <EditUrlDialog\r\n                    open={openEditUrl}\r\n                    defaultText={defaultText}\r\n                    defaultUrl={defaultUrl}\r\n                    onDone={this.handleDoneEditUrl}\r\n                    onCancel={this.handleCancelEditUrl}\r\n                />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEditMediaDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    newItem: PropTypes.object,\r\n\r\n    onSend: PropTypes.func,\r\n    onEdit: PropTypes.func,\r\n    onCancel: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(EditMediaDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport emojiRegex from 'emoji-regex';\r\nimport MediaRecorder from 'opus-media-recorder';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport DoneIcon from '../../Assets/Icons/Done';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\r\nimport SendIcon from '../../Assets/Icons/Send';\r\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport AttachButton from './../ColumnMiddle/AttachButton';\r\nimport CreatePollDialog from '../Popup/CreatePollDialog';\r\nimport EditUrlDialog from '../Popup/EditUrlDialog';\r\nimport InputBoxHeader from './InputBoxHeader';\r\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\r\nimport RecordTimer from './RecordTimer';\r\nimport EditMediaDialog from '../Popup/EditMediaDialog';\r\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\r\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\r\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\r\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\r\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\r\nimport { getSize, readImageSize } from '../../Utils/Common';\r\nimport { editMessage, replyMessage } from '../../Actions/Client';\r\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\r\nimport { PHOTO_SIZE, SEND_BY_CTRL_ENTER_KEY, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\r\nimport AnimationStore from '../../Stores/AnimationStore';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBox.css';\r\n\r\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\r\n\r\nclass InputBox extends Component {\r\n    render() { return (<div></div>);}\r\n}\r\n\r\nexport default withTranslation()(InputBox);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport './FooterCommand.css';\r\n\r\nclass FooterCommand extends React.Component {\r\n    render() {\r\n        const { command, onCommand } = this.props;\r\n\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterCommand;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FooterCommand from './FooterCommand';\r\nimport Notifications from './Notifications';\r\n\r\nclass NotificationsCommand extends Notifications {\r\n    render() {\r\n        const { t } = this.props;\r\n        const { isMuted } = this.state;\r\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\r\n\r\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NotificationsCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport InputBox from './InputBox';\r\nimport FooterCommand from './FooterCommand';\r\nimport NotificationsCommand from './NotificationsCommand';\r\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\r\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Footer.css';\r\n\r\nclass Footer extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n        const { prevChatId } = state;\r\n\r\n        if (prevChatId !== chatId) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat) {\r\n                const { is_blocked, last_message } = chat;\r\n\r\n                return {\r\n                    prevChatId: chatId,\r\n\r\n                    isBlocked: is_blocked,\r\n                    hasLastMessage: Boolean(last_message)\r\n                };\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { t, chatId, options } = this.props;\r\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.options !== options) {\r\n            return true;\r\n        }\r\n\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasLastMessage !== hasLastMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isBlocked !== isBlocked) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clearHistory !== clearHistory) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chatId) return;\r\n\r\n        this.setState({\r\n            clearHistory: update.inProgress\r\n        });\r\n    };\r\n\r\n    onUpdateChatLastMessage = update => {\r\n        const { chat_id, last_message } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({\r\n            hasLastMessage: Boolean(last_message)\r\n        });\r\n    };\r\n\r\n    onUpdateChatIsBlocked = update => {\r\n        const { chat_id, is_blocked } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({\r\n            isBlocked: is_blocked\r\n        });\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleJoin = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'joinChat',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleDeleteAndExit = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: true\r\n        });\r\n\r\n        // TdLibController\r\n        //     .send({\r\n        //         '@type': 'leaveChat',\r\n        //         chat_id: this.props.chatId\r\n        //     });\r\n    };\r\n\r\n    handleUnblock = () => {\r\n        const { chatId } = this.props;\r\n\r\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\r\n    };\r\n\r\n    handleStartBot = async () => {\r\n        const { chatId, options } = this.props;\r\n\r\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n        if (options && options.botStartMessage) {\r\n            const { botUserId, parameter } = options.botStartMessage;\r\n\r\n            await sendBotStartMessage(chatId, botUserId, parameter);\r\n        } else {\r\n            await TdLibController.send({\r\n                '@type': 'sendMessage',\r\n                chat_id: chatId,\r\n                reply_to_message_id: 0,\r\n                input_message_content: {\r\n                    '@type': 'inputMessageText',\r\n                    text: {\r\n                        '@type': 'formattedText',\r\n                        text: '/start',\r\n                        entities: []\r\n                    },\r\n                    disable_web_page_preview: true,\r\n                    clear_draft: true\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, options, t } = this.props;\r\n        const { hasLastMessage, clearHistory } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { type, is_blocked } = chat;\r\n        if (!type) return null;\r\n\r\n        if (is_blocked) {\r\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\r\n        }\r\n\r\n        if (options && options.botStartMessage) {\r\n            const isBot = isBotChat(chatId);\r\n            if (isBot) {\r\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\r\n            }\r\n        }\r\n\r\n        switch (type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n                if (!basicGroup) return null;\r\n\r\n                const { status } = basicGroup;\r\n                if (!status) return null;\r\n\r\n                const { is_member, permissions } = status;\r\n\r\n                switch (status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return null;\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (is_member) {\r\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\r\n                        } else {\r\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret':\r\n            case 'chatTypePrivate': {\r\n                const isBot = isBotChat(chatId);\r\n                if (isBot && (!hasLastMessage || clearHistory)) {\r\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\r\n                }\r\n\r\n                return <InputBox />;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(type.supergroup_id);\r\n                if (!supergroup) return null;\r\n\r\n                const { is_channel, status } = supergroup;\r\n                if (!status) return null;\r\n\r\n                const { is_member, permissions } = status;\r\n\r\n                switch (status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return (\r\n                            <FooterCommand\r\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\r\n                                onCommand={this.handleJoin}\r\n                            />\r\n                        );\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        if (is_channel) {\r\n                            return <NotificationsCommand chatId={chatId} />;\r\n                        } else {\r\n                            return <InputBox />;\r\n                        }\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (is_member) {\r\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\r\n                        } else {\r\n                            return (\r\n                                <FooterCommand\r\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\r\n                                    onCommand={this.handleJoin}\r\n                                />\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Footer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport const MAX_SPEED = 8.2;\r\nexport const MIN_SPEED = 0.8;\r\nexport const AMPLITUDE_SPEED = 0.33;\r\n\r\nexport const SCALE_BIG = 0.807;\r\nexport const SCALE_SMALL = 0.704;\r\n\r\nexport const SCALE_BIG_MIN = 0.878;\r\nexport const SCALE_SMALL_MIN = 0.926;\r\n\r\nexport const FORM_BIG_MAX = 0.6;\r\nexport const FORM_SMALL_MAX = 0.6;\r\n\r\nexport const GLOBAL_SCALE = 1;\r\n\r\nexport const FORM_BUTTON_MAX = 0;\r\n\r\nexport const GRADIENT_SPEED_MIN = 0.5;\r\nexport const GRADIENT_SPEED_MAX = 0.01;\r\n\r\nexport const LIGHT_GRADIENT_SIZE = 0.5;\r\n\r\nfunction rotateZ(x, y, angle, originX, originY) {\r\n    x -= originX;\r\n    y -= originY;\r\n\r\n    let X = x * Math.cos(angle) - y * Math.sin(angle);\r\n    let Y = y * Math.cos(angle) + x * Math.sin(angle);\r\n\r\n    x = X + originX;\r\n    y = Y + originY;\r\n\r\n    return [x, y];\r\n}\r\n\r\nexport default class BlobDrawable {\r\n    constructor(n) {\r\n        this.maxRadius = 10;\r\n        this.minRadius = 0;\r\n\r\n        this.cubicBezierK = 1.0;\r\n        this.N = n;\r\n        this.L = (4.0 / 3.0) * Math.tan(Math.PI / (2 * this.N));\r\n        this.radius = new Array(n);\r\n        this.angle = new Array(n);\r\n\r\n        this.radiusNext = new Array(n);\r\n        this.angleNext = new Array(n);\r\n        this.progress = new Array(n);\r\n        this.speed = new Array(n);\r\n\r\n        this.pointStart = new Array(4);\r\n        this.pointEnd = new Array(4);\r\n\r\n        for (let i = 0; i < this.N; i++) {\r\n            this.generateBlob(this.radius, this.angle, i);\r\n            this.generateBlob(this.radiusNext, this.angleNext, i);\r\n            this.progress[i] = 0;\r\n        }\r\n    }\r\n\r\n    generateBlob(radius, angle, i) {\r\n        const { maxRadius, minRadius, speed, N } = this;\r\n\r\n        const angleDif = 2 * Math.PI / N * 0.05;\r\n        const radDif = maxRadius - minRadius;\r\n        radius[i] = minRadius + Math.random() * radDif;\r\n        angle[i] = 2 * Math.PI / N * i + Math.random() * angleDif;\r\n        speed[i] = 0.017 + 0.003 * Math.random();\r\n    }\r\n\r\n    update(amplitude, speedScale) {\r\n        const { N, progress, speed, radius, radiusNext, angle, angleNext } = this;\r\n        for (let i = 0; i < N; i++) {\r\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\r\n            if (progress[i] >= 1.0) {\r\n                progress[i] = 0.0;\r\n                radius[i] = radiusNext[i];\r\n                angle[i] = angleNext[i];\r\n                this.generateBlob(radiusNext, angleNext, i);\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(cX, cY, canvas, paint) {\r\n        // console.log('[bd] draw', cX, cY, canvas, paint);\r\n        if (canvas.getContext) {\r\n            const ctx = canvas.getContext('2d');\r\n            // ctx.globalAlpha = 0.5;\r\n            // ctx.lineWidth = 1;\r\n\r\n            ctx.beginPath();\r\n\r\n            const { radius, radiusNext, angle, angleNext, N, L, cubicBezierK, pointStart, pointEnd } = this;\r\n\r\n            for (let i = 0; i < N; i++) {\r\n                const progress = this.progress[i];\r\n                const nextIndex = i + 1 < N ? i + 1 : 0;\r\n                const progressNext = this.progress[nextIndex];\r\n                const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\r\n                const r2 = radius[nextIndex] * (1.0 - progressNext) + radiusNext[nextIndex] * progressNext;\r\n                const angle1 = angle[i] * (1.0 - progress) + angleNext[i] * progress;\r\n                const angle2 = angle[nextIndex] * (1.0 - progressNext) + angleNext[nextIndex] * progressNext;\r\n                const l = L * (Math.min(r1, r2) + (Math.max(r1, r2) - Math.min(r1, r2)) / 2) * cubicBezierK;\r\n\r\n                pointStart[0] = cX;\r\n                pointStart[1] = cY - r1;\r\n                pointStart[2] = cX + l;\r\n                pointStart[3] = cY - r1;\r\n\r\n                this.mapPoints(pointStart, cX, cY, angle1);\r\n\r\n                pointEnd[0] = cX;\r\n                pointEnd[1] = cY - r2;\r\n                pointEnd[2] = cX - l;\r\n                pointEnd[3] = cY - r2;\r\n\r\n                this.mapPoints(pointEnd, cX, cY, angle2);\r\n\r\n                if (i === 0) {\r\n                    // console.log('[bd] moveTo', pointStart[0], pointStart[1]);\r\n                    ctx.moveTo(pointStart[0], pointStart[1]);\r\n                }\r\n                // console.log('[bd] bezierCurveTo', pointEnd[0], pointEnd[1]);\r\n                ctx.bezierCurveTo(\r\n                    pointStart[2], pointStart[3],\r\n                    pointEnd[2], pointEnd[3],\r\n                    pointEnd[0], pointEnd[1]\r\n                );\r\n            }\r\n\r\n            // ctx.scale(1.0, 1.0);\r\n            // this.fillStyleFunc(ctx);\r\n            paint(ctx);\r\n            ctx.fill();\r\n            ctx.closePath();\r\n        }\r\n    }\r\n\r\n    mapPoints(points, cX, cY, angle) {\r\n        const result1 = rotateZ(points[0], points[1], angle, cX, cY);\r\n        const result2 = rotateZ(points[2], points[3], angle, cX, cY);\r\n\r\n        points[0] = result1[0];\r\n        points[1] = result1[1];\r\n        points[2] = result2[0];\r\n        points[3] = result2[1];\r\n    }\r\n\r\n    generateInitBlob() {\r\n        const { radius, radiusNext, angle, angleNext, progress, N } = this;\r\n\r\n        for (let i = 0; i < N; i++) {\r\n            this.generateBlob(radius, angle, i);\r\n            this.generateBlob(radiusNext, angleNext, i);\r\n            progress[i] = 0;\r\n        }\r\n    }\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n// const MIN_SPEED = 0.8;\r\n// const MAX_SPEED = 8.2;\r\n\r\nimport { MIN_SPEED, MAX_SPEED } from './BlobDrawable';\r\n\r\nexport default class LineBlobDrawable {\r\n    constructor(n) {\r\n        this.maxRadius = 10;\r\n        this.minRadius = 0;\r\n\r\n        this.N = n;\r\n        this.radius = new Array(n + 1);\r\n\r\n        this.radiusNext = new Array(n + 1);\r\n        this.progress = new Array(n + 1);\r\n        this.speed = new Array(n + 1);\r\n\r\n        for (let i = 0; i <= n; i++) {\r\n            this.generateBlob(this.radius, i);\r\n            this.generateBlob(this.radiusNext, i);\r\n            this.progress[i] = 0;\r\n        }\r\n    }\r\n\r\n    generateBlob(radius, i) {\r\n        const { maxRadius, minRadius, speed } = this;\r\n\r\n        const radDif = maxRadius - minRadius;\r\n        radius[i] = minRadius + Math.random() * radDif;\r\n        speed[i] = 0.017 + 0.003 * Math.random();\r\n    }\r\n\r\n    generateNextBlob() {\r\n        const { radius, radiusNext, progress, N } = this;\r\n        for (let i = 0; i < N; i++) {\r\n            this.generateBlob(radius, i);\r\n            this.generateBlob(radiusNext, i);\r\n            progress[i] = 0.0;\r\n        }\r\n    }\r\n\r\n    update(amplitude, speedScale) {\r\n        const { N, progress, speed, radius, radiusNext } = this;\r\n        for (let i = 0; i <= N; i++) {\r\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\r\n            if (progress[i] >= 1.0) {\r\n                progress[i] = 0.0;\r\n                radius[i] = radiusNext[i];\r\n                this.generateBlob(radiusNext, i);\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(left, top, right, bottom, canvas, paint, pinnedTop, progressToPinned) {\r\n        if (canvas.getContext) {\r\n            const ctx = canvas.getContext('2d');\r\n            // ctx.globalAlpha = 0.5;\r\n            // ctx.lineWidth = 1;\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(right, bottom);\r\n            ctx.lineTo(left, bottom);\r\n\r\n            const { radius, radiusNext, N } = this;\r\n            for (let i = 0; i <= N; i++) {\r\n                if (i === 0) {\r\n                    const progress = this.progress[i];\r\n                    const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\r\n                    const y = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\r\n                    ctx.lineTo(left, y);\r\n                } else {\r\n                    const progress = this.progress[i - 1];\r\n                    const r1 = radius[i - 1] * (1.0 - progress) + radiusNext[i - 1] * progress;\r\n                    const progressNext = this.progress[i];\r\n                    const r2 = radius[i] * (1.0 - progressNext) + radiusNext[i] * progressNext;\r\n                    const x1 = (right - left) / N * (i - 1);\r\n                    const x2 = (right - left) / N * i;\r\n                    const cx = x1 + (x2 - x1) / 2;\r\n\r\n                    const y1 = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\r\n                    const y2 = (top - r2) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\r\n                    ctx.bezierCurveTo(\r\n                        cx, y1,\r\n                        cx, y2,\r\n                        x2, y2\r\n                    );\r\n                    if (i === N) {\r\n                        ctx.lineTo(right, bottom);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // ctx.scale(1.0, 1.0);\r\n            paint(ctx);\r\n            ctx.fill();\r\n            ctx.closePath();\r\n        }\r\n    }\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LineBlobDrawable from './LineBlobDrawable';\r\n\r\nexport const MUTE_BUTTON_STATE_UNMUTE = 0;\r\nexport const MUTE_BUTTON_STATE_MUTE = 1;\r\nexport const MUTE_BUTTON_STATE_CONNECTING = 2;\r\nexport const MUTE_BUTTON_STATE_MUTED_BY_ADMIN = 3;\r\n\r\nexport class WeavingState {\r\n    constructor(stateId) {\r\n        this.stateId = stateId;\r\n        this.shader = (ctx, left, top, right, bottom) => { };\r\n        this.createGradient(stateId);\r\n    }\r\n\r\n    createGradient(stateId) {\r\n        this.shader = (ctx, left, top, right, bottom) => {\r\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\r\n        };\r\n    }\r\n\r\n    // Android colors\r\n    static getGradientFromType(ctx, type, x0, y0, x1, y1) {\r\n        const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\r\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\r\n            gradient.addColorStop(0, '#57A4FE');\r\n            gradient.addColorStop(.6, '#766EE9');\r\n            gradient.addColorStop(1, '#F05459');\r\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\r\n            gradient.addColorStop(0, '#00B1C0');\r\n            gradient.addColorStop(1, '#52CE5D');\r\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\r\n            gradient.addColorStop(0, '#2BCEFF');\r\n            gradient.addColorStop(1, '#0976E3');\r\n        } else {\r\n            gradient.addColorStop(0, '#8599aa');\r\n            gradient.addColorStop(1, '#8599aa');\r\n        }\r\n\r\n        return gradient;\r\n    }\r\n\r\n    update(height, width, dt, amplitude) {\r\n        // TODO: move gradient here\r\n    }\r\n}\r\n\r\nclass TopBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.focused = true;\r\n        this.resizing = false;\r\n        this.lastUpdateTime = new Date();\r\n        this.amplitude = 0.0;\r\n        this.amplitude2 = 0.0;\r\n\r\n        this.states = [\r\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\r\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\r\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\r\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\r\n        ];\r\n        this.prevState = null;\r\n        this.currentState = this.states[MUTE_BUTTON_STATE_CONNECTING];\r\n        this.progressToState = 1.0;\r\n\r\n        this.scale = window.devicePixelRatio;\r\n        this.left = 0 * this.scale;\r\n        this.top = 20 * this.scale;\r\n        this.right = 1260 * this.scale;\r\n        this.bottom = 63 * this.scale;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        window.addEventListener('blur', this.handleBlur);\r\n        window.addEventListener('focus', this.handleFocus);\r\n        window.addEventListener('resize', this.handleResize);\r\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\r\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\r\n\r\n        const topBar = document.getElementById('top-bar');\r\n        this.right = topBar.offsetWidth * this.scale;\r\n        this.forceUpdate();\r\n\r\n        this.canvas = document.getElementById('canvas');\r\n        this.lbd = new LineBlobDrawable(3);\r\n        this.lbd1 = new LineBlobDrawable(7);\r\n        this.lbd2 = new LineBlobDrawable(8);\r\n        this.setAmplitude(this.amplitude);\r\n\r\n        this.draw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        window.removeEventListener('blur', this.handleBlur);\r\n        window.removeEventListener('focus', this.handleFocus);\r\n        window.removeEventListener('resize', this.handleResize);\r\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\r\n    }\r\n\r\n    handleDevicePixelRatioChanged = e => {\r\n        this.scale = window.devicePixelRatio;\r\n        this.left = 0 * this.scale;\r\n        this.top = 20 * this.scale;\r\n        this.bottom = 63 * this.scale;\r\n\r\n        const topBar = document.getElementById('top-bar');\r\n        if (!topBar) return;\r\n\r\n        this.right = topBar.offsetWidth * this.scale;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleResize = () => {\r\n        if (this.resizeHandler) {\r\n            clearTimeout(this.resizeHandler);\r\n            this.resizeHandler = null;\r\n        }\r\n\r\n        this.resizing = true;\r\n        this.resizeCanvas();\r\n        this.resizeHandler = setTimeout(() => {\r\n            this.resizing = false;\r\n            this.invokeDraw();\r\n        }, 250);\r\n    }\r\n\r\n    resizeCanvas() {\r\n        const topBar = document.getElementById('top-bar');\r\n\r\n        this.scale = window.devicePixelRatio;\r\n        this.right = topBar.offsetWidth * this.scale;\r\n\r\n        this.forceUpdate();\r\n        this.invokeDraw();\r\n    }\r\n\r\n    handleFocus = () => {\r\n        this.focused = true;\r\n        this.invokeDraw();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        this.focused = false;\r\n    }\r\n\r\n    invokeDraw = () => {\r\n        if (this.raf) return;\r\n\r\n        this.draw();\r\n    }\r\n\r\n    draw = (force = false) => {\r\n        this.raf = null;\r\n        if (!this.mounted) {\r\n            return;\r\n        }\r\n        const { lbd, lbd1, lbd2, scale, left, top, right, bottom, currentState, previousState, focused, resizing } = this;\r\n        if (!focused && !resizing && this.progressToState >= 1.0) {\r\n            return;\r\n        }\r\n\r\n        // console.log('[top] draw', [focused, resizing, this.mounted]);\r\n\r\n        const newTime = new Date();\r\n        let dt = (newTime - this.lastUpdateTime);\r\n        if (dt > 20) {\r\n            dt = 17;\r\n        }\r\n\r\n        // console.log('draw start', this.amplitude, this.animateToAmplitude);\r\n        if (this.animateToAmplitude !== this.amplitude) {\r\n            this.amplitude += this.animateAmplitudeDiff * dt;\r\n            if (this.animateAmplitudeDiff > 0) {\r\n                if (this.amplitude > this.animateToAmplitude) {\r\n                    this.amplitude = this.animateToAmplitude;\r\n                }\r\n            } else {\r\n                if (this.amplitude < this.animateToAmplitude) {\r\n                    this.amplitude = this.animateToAmplitude;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.animateToAmplitude !== this.amplitude2) {\r\n            this.amplitude2 += this.animateAmplitudeDiff2 * dt;\r\n            if (this.animateAmplitudeDiff2 > 0) {\r\n                if (this.amplitude2 > this.animateToAmplitude) {\r\n                    this.amplitude2 = this.animateToAmplitude;\r\n                }\r\n            } else {\r\n                if (this.amplitude2 < this.animateToAmplitude) {\r\n                    this.amplitude2 = this.animateToAmplitude;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (previousState) {\r\n            this.progressToState += dt / 250;\r\n            if (this.progressToState > 1) {\r\n                this.progressToState = 1;\r\n                this.previousState = null;\r\n            }\r\n        }\r\n\r\n        const top1 = 6 * this.amplitude2 * scale;\r\n        const top2 = 6 * this.amplitude2 * scale;\r\n\r\n        const ctx = this.canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        lbd.minRadius = 0;\r\n        lbd.maxRadius = (2 + 2 * this.amplitude) * scale;\r\n        lbd1.minRadius = 0;\r\n        lbd1.maxRadius = (3 + 9 * this.amplitude) * scale;\r\n        lbd2.minRadius = 0;\r\n        lbd2.maxRadius = (3 + 9 * this.amplitude) * scale;\r\n\r\n        lbd.update(this.amplitude, 0.3);\r\n        lbd1.update(this.amplitude, 0.7);\r\n        lbd2.update(this.amplitude, 0.7);\r\n\r\n        for (let i = 0; i < 2; i++) {\r\n            if (i === 0 && !previousState) {\r\n                continue;\r\n            }\r\n\r\n            let alpha = 1;\r\n            let state = null;\r\n            if (i === 0) {\r\n                alpha = 1 - this.progressToState;\r\n                state = previousState;\r\n                // previousState.setToPaint(paint);\r\n            } else {\r\n                alpha = previousState ? this.progressToState : 1;\r\n                currentState.update(bottom - top, right - left, dt, this.amplitude);\r\n                state = currentState;\r\n                // currentState.setToPaint(paint);\r\n            }\r\n\r\n            const paint1 = ctx => {\r\n                ctx.globalAlpha = 0.3 * alpha;\r\n                state.shader(ctx, left, top, right, bottom);\r\n            };\r\n            const paint = ctx => {\r\n                ctx.globalAlpha = i === 0? 1 : alpha;\r\n                state.shader(ctx, left, top, right, bottom);\r\n            };\r\n\r\n            lbd1.draw(left, top - top1, right, bottom, this.canvas, paint1,  top, 1.0);\r\n            lbd2.draw(left, top - top2, right, bottom, this.canvas, paint1,  top, 1.0);\r\n            lbd.draw(left, top, right, bottom, this.canvas, paint, top, 1.0);\r\n        }\r\n\r\n        if (!force) {\r\n            this.raf = requestAnimationFrame(() => this.draw());\r\n        }\r\n    };\r\n\r\n    setCurrentState = (stateId, animated) => {\r\n        const { currentState, states } = this;\r\n\r\n        if (currentState && currentState.id === stateId) {\r\n            return;\r\n        }\r\n\r\n        this.previousState = animated ? currentState : null;\r\n        this.currentState = states[stateId];\r\n        this.progressToState = this.previousState ? 0.0 : 1.0;\r\n    };\r\n\r\n    setAmplitude(value) {\r\n        this.animateToAmplitude = value;\r\n        this.animateAmplitudeDiff = (value - this.amplitude) / 250;\r\n        this.animateAmplitudeDiff2 = (value - this.amplitude) / 120;\r\n    }\r\n\r\n    render() {\r\n        const { left, right, top, bottom, scale } = this;\r\n\r\n        return(\r\n            <div id='top-bar' className='top-bar'>\r\n                <canvas id='canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTopBar.propTypes = {};\r\n\r\nexport default TopBar;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport MicIcon from '../../Assets/Icons/Mic';\r\nimport MicOffIcon from '../../Assets/Icons/MicOff';\r\nimport TopBar, { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport { getCallStatus } from '../../Calls/Utils';\r\nimport { openGroupCallPanel } from '../../Actions/Call';\r\nimport { showSnackbar } from '../../Actions/Client';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './GroupCallTopPanel.css';\r\n\r\nclass GroupCallTopPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.topBarRef = React.createRef();\r\n\r\n        const { currentGroupCall: call } = CallStore;\r\n        const { connected, status } = getCallStatus(call);\r\n        this.state = {\r\n            call,\r\n            status,\r\n            connected,\r\n            animated: CallStore.animated\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { call, status, connected, animated } = this.state;\r\n\r\n        if (nextState.call !== call) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.status !== status) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.connected !== connected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.animated !== animated) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.switchButtonState(false);\r\n\r\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\r\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\r\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    switchButtonState(animated = true) {\r\n        const { connected, status } = this.state;\r\n\r\n        let stateId = MUTE_BUTTON_STATE_MUTE;\r\n        if (!connected) {\r\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\r\n        } else {\r\n            if (status === 'forceMuted') {\r\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\r\n            } else if (status === 'unmuted') {\r\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\r\n            } else if (status === 'muted') {\r\n                stateId = MUTE_BUTTON_STATE_MUTE;\r\n            }\r\n        }\r\n\r\n        this.topBarRef.current && this.topBarRef.current.setCurrentState(stateId, animated);\r\n    }\r\n\r\n    onClientUpdateGroupCallAmplitudeChange = update => {\r\n        const { amplitudes, type } = update;\r\n        if (!amplitudes.length) return;\r\n\r\n        let max = 0;\r\n        for (let i = 0; i < amplitudes.length; i++) {\r\n            const { type, value } = amplitudes[i];\r\n            max = value > max ? value : max;\r\n        }\r\n\r\n        if (type !== 'input') {\r\n            this.topBarRef.current && this.topBarRef.current.setAmplitude(max);\r\n        }\r\n    };\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { group_call_id, participant } = update;\r\n        if (!participant) return;\r\n\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call_id !== call.groupCallId) return;\r\n\r\n        const { user_id } = participant;\r\n        if (user_id !== UserStore.getMyId()) return;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            status\r\n        }, () => {\r\n            this.switchButtonState(true);\r\n        });\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { group_call } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call.id !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCallConnectionState = update => {\r\n        const { groupCallId } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (groupCallId !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCall = update => {\r\n        const { currentGroupCall: call } = CallStore;\r\n        const { connected, status } = getCallStatus(call);\r\n        this.saveMessagesScrollPosition();\r\n        this.setState({\r\n            call,\r\n            status,\r\n            connected\r\n        }, () => {\r\n            this.restoreMessagesScrollPosition(Boolean(call));\r\n            this.switchButtonState(true);\r\n        });\r\n    };\r\n\r\n    saveMessagesScrollPosition() {\r\n        const elements = document.getElementsByClassName('messages-list-wrapper');\r\n        if (!elements.length) return;\r\n\r\n        [...elements].forEach(x => {\r\n            const list = x;\r\n            if (!list) return;\r\n\r\n            const prevOffsetHeight = list.offsetHeight;\r\n            const prevScrollTop = list.scrollTop;\r\n\r\n            list.prevOffsetHeight = prevOffsetHeight;\r\n            list.prevScrollTop = prevScrollTop;\r\n        });\r\n    }\r\n\r\n    restoreMessagesScrollPosition(openPanel = true) {\r\n        const elements = document.getElementsByClassName('messages-list-wrapper');\r\n        if (!elements.length) return;\r\n\r\n        [...elements].forEach(x => {\r\n            const list = x;\r\n            if (!list) return;\r\n\r\n            const { prevScrollTop, prevOffsetHeight } = list;\r\n            if (list.scrollTop === prevScrollTop) {\r\n                const offsetHeightDiff = Math.abs(prevOffsetHeight - list.offsetHeight);\r\n                list.scrollTop += openPanel ? offsetHeightDiff : - offsetHeightDiff;\r\n            }\r\n        });\r\n    }\r\n\r\n    handleMicrophone = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { call, status } = this.state;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId, stream } = call;\r\n\r\n        const groupCall = CallStore.get(groupCallId);\r\n        if (!groupCall) return;\r\n\r\n        if (!groupCall.can_unmute_self) {\r\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\r\n                return (\r\n                    <IconButton\r\n                        key='close'\r\n                        aria-label='Close'\r\n                        color='inherit'\r\n                        className='notification-close-button'\r\n                        onClick={() => { closeSnackbar(snackKey); }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                )\r\n            });\r\n        } else {\r\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\r\n        }\r\n    };\r\n\r\n    handleLeave = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId } = call;\r\n\r\n        await CallStore.leaveGroupCall(chatId, groupCallId);\r\n    };\r\n\r\n    handleOpenGroupCall = () => {\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        openGroupCallPanel();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { call, status, connected, animated } = this.state;\r\n        if (!call) return null;\r\n\r\n        const { chatId } = call;\r\n        const title = connected ? getChatTitle(chatId).toUpperCase() : t('Connecting');\r\n\r\n        return (\r\n            <div className='group-call-top-panel-wrapper'>\r\n                { animated ? (\r\n                    <TopBar ref={this.topBarRef}/>\r\n                    ) : (\r\n                    <div className={classNames('group-call-top-panel',\r\n                        {\r\n                            'group-call-top-panel-muted-by-admin ': connected && status === 'forceMuted',\r\n                            'group-call-top-panel-unmuted': connected && status === 'unmuted',\r\n                            'group-call-top-panel-connecting': !connected,\r\n\r\n                        })}\r\n                    />\r\n                )}\r\n                <div className='group-call-top-panel-buttons' onClick={this.handleOpenGroupCall}>\r\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleMicrophone}>\r\n                        {status === 'unmuted' ? <MicIcon fontSize='small'/> : <MicOffIcon fontSize='small' />}\r\n                    </IconButton>\r\n                    <div className='group-call-top-panel-title'>\r\n                        {title}\r\n                    </div>\r\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleLeave}>\r\n                        <CallEndIcon fontSize='small' />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nGroupCallTopPanel.propTypes = {};\r\n\r\nexport default withTranslation()(GroupCallTopPanel);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\r\n    'PlaylistEdit'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z' />,\r\n    'Block'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\r\n    'Broom'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z' />,\r\n    'Phone'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\r\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\r\nimport BlockIcon from '../../Assets/Icons/Block';\r\nimport BroomIcon from '../../Assets/Icons/Broom';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport MoreVertIcon from '../../Assets/Icons/More';\r\nimport PhoneIcon from '../../Assets/Icons/Phone';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport {\r\n    canClearHistory,\r\n    canDeleteChat,\r\n    getViewInfoTitle,\r\n    isPrivateChat,\r\n    getDeleteChatTitle,\r\n    hasOnePinnedMessage,\r\n    canSwitchBlocked,\r\n    getChatSender,\r\n    canManageVoiceChats,\r\n    canBeReported, getChatUserId, canBeCalled\r\n} from '../../Utils/Chat';\r\nimport { clearHistory, leaveChat, openReportChat } from '../../Actions/Chat';\r\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\r\nimport { requestUnpinMessage, showAlert } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MainMenuButton.css';\r\n\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            anchorEl: null\r\n        };\r\n    }\r\n\r\n    handleButtonClick = async event => {\r\n        const { currentTarget: anchorEl } = event;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\r\n        ChatStore.set(chat);\r\n\r\n        this.setState({ anchorEl });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleChatInfo = () => {\r\n        this.handleMenuClose();\r\n        setTimeout(() => this.props.openChatDetails(), 150);\r\n    };\r\n\r\n    handleClearHistory = () => {\r\n        this.handleMenuClose();\r\n\r\n        clearHistory(AppStore.getChatId());\r\n    };\r\n\r\n    handleDeleteChat = () => {\r\n        this.handleMenuClose();\r\n\r\n        leaveChat(AppStore.getChatId());\r\n    };\r\n\r\n    handleUnpin = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = AppStore.getChatId();\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        if (!media) return false;\r\n\r\n        const { pinned } = media;\r\n        if (!pinned) return false;\r\n        if (pinned.length !== 1) return false;\r\n\r\n        requestUnpinMessage(chatId, pinned[0].id);\r\n    };\r\n\r\n    handleSwitchBlocked = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const sender = getChatSender(chatId);\r\n        const { is_blocked } = chat;\r\n        if (is_blocked) {\r\n            unblockSender(sender);\r\n        } else {\r\n            requestBlockSender(sender);\r\n        }\r\n    };\r\n\r\n    handleStartGroupCall = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        showAlert({\r\n            title: LStore.getString('StartVoipChatTitle'),\r\n            message: LStore.getString('StartVoipChatAlertText'),\r\n            ok: LStore.getString('Start'),\r\n            cancel: LStore.getString('Cancel'),\r\n            onResult: async result => {\r\n                if (result){\r\n                    await CallStore.startGroupCall(chatId);\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n    handleStartP2PCall = () => {\r\n        this.handleMenuClose();\r\n\r\n        const userId = getChatUserId(AppStore.getChatId());\r\n\r\n        CallStore.p2pStartCall(userId, false);\r\n    };\r\n\r\n    handleReport = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { chatId } = this.props;\r\n\r\n        openReportChat(chatId, []);\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { is_blocked, voice_chat_group_call_id } = chat;\r\n\r\n        const clearHistory = canClearHistory(chatId);\r\n        const deleteChat = canDeleteChat(chatId);\r\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\r\n        const unpinMessage = hasOnePinnedMessage(chatId);\r\n        const switchBlocked = canSwitchBlocked(chatId);\r\n        const manageVoiceChats = canManageVoiceChats(chatId);\r\n        const reported = canBeReported(chatId);\r\n        const called = canBeCalled(chatId);\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    aria-label='Menu'\r\n                    onClick={this.handleButtonClick}>\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}>\r\n                    { CallStore.p2pCallsEnabled && called && (\r\n                        <MenuItem onClick={this.handleStartP2PCall}>\r\n                            <ListItemIcon>\r\n                                <CallOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Call')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    { !Boolean(voice_chat_group_call_id) && manageVoiceChats && (\r\n                        <MenuItem onClick={this.handleStartGroupCall}>\r\n                            <ListItemIcon>\r\n                                <PhoneIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('StartVoipChat')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    <MenuItem onClick={this.handleChatInfo}>\r\n                        <ListItemIcon>\r\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\r\n                    </MenuItem>\r\n                    {clearHistory && (\r\n                        <MenuItem onClick={this.handleClearHistory}>\r\n                            <ListItemIcon>\r\n                                <BroomIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('ClearHistory')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {deleteChat && deleteChatTitle && (\r\n                        <MenuItem onClick={this.handleDeleteChat}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={deleteChatTitle} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {unpinMessage && (\r\n                        <MenuItem onClick={this.handleUnpin}>\r\n                            <ListItemIcon>\r\n                                <UnpinIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {switchBlocked && (\r\n                        <MenuItem onClick={this.handleSwitchBlocked}>\r\n                            <ListItemIcon>\r\n                                <BlockIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {reported && (\r\n                        <MenuItem onClick={this.handleReport}>\r\n                            <ListItemIcon>\r\n                                <ReportOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('ReportChat')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './HeaderChatSubtitle.css';\r\n\r\nclass HeaderChatSubtitle extends React.Component {\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onUpdateChatOnlineMemberCount = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserChatAction = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        this.forceUpdate();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.props;\r\n\r\n        const subtitle = getChatSubtitle(chatId, true);\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n\r\n        return (\r\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\r\n                {subtitle}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderChatSubtitle.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HeaderChatSubtitle;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\r\nimport './HeaderChat.css';\r\n\r\nclass HeaderChat extends React.Component {\r\n    render() {\r\n        const { className, chatId, onClick } = this.props;\r\n\r\n        return (\r\n            <div className={classNames('header-chat', className)} onClick={onClick}>\r\n                <ChatTile chatId={chatId} size={44} />\r\n                <div className='header-chat-content'>\r\n                    <DialogTitle chatId={chatId} />\r\n                    <HeaderChatSubtitle chatId={chatId} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HeaderChat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AnimatedItem.css';\r\n\r\nclass AnimatedItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.containerRef = React.createRef();\r\n        this.item1Ref = React.createRef();\r\n        this.item2Ref = React.createRef();\r\n\r\n        this.state = { };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return nextProps.item !== this.props.item;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { item } = props;\r\n        const { to, prevItem } = state;\r\n\r\n        if (item !== prevItem) {\r\n            return {\r\n                prevItem: item,\r\n                from: to,\r\n                to: item,\r\n                scrollDown: item > to\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { scrollDown, animateOnMount } = this.props;\r\n        const { to } = this.state;\r\n\r\n        this.animate('', to, scrollDown, animateOnMount);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { item, scrollDown } = this.props;\r\n        const { from, to } = this.state;\r\n\r\n        if (prevProps.item !== item) {\r\n            this.animate(from, to, scrollDown);\r\n        }\r\n    }\r\n\r\n    animate = (from, to, scrollDown, animate = true) => {\r\n        const { height } = this.props;\r\n\r\n        const container = this.containerRef.current;\r\n        const item1 = this.item1Ref.current;\r\n        const item2 = this.item2Ref.current;\r\n\r\n        if (!container || !item1 || !item2) return;\r\n\r\n        const duration = !animate ? '0ms' : '250ms';\r\n        const timingFunction = 'ease-in-out';\r\n\r\n        if (scrollDown) {\r\n            container.style.cssText = `transform: translateY(-${height}px)`;\r\n            item1.style.cssText = 'opacity: 0';\r\n            item2.style.cssText = 'opacity: 1';\r\n            requestAnimationFrame(() => {\r\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\r\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n            });\r\n        } else {\r\n            container.style.cssText = 'transform: translateY(0px)';\r\n            item1.style.cssText = 'opacity: 1';\r\n            item2.style.cssText = 'opacity: 0';\r\n            requestAnimationFrame(() => {\r\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\r\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { scrollDown, height, getItemTemplate } = this.props;\r\n        const { from, to } = this.state;\r\n\r\n        return (\r\n            <div className='animated-item' style={{ height }}>\r\n                <div className='animated-item-placeholder'>{getItemTemplate(to)}</div>\r\n                <div ref={this.containerRef} className='animated-item-wrapper'>\r\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? getItemTemplate(to) : getItemTemplate(from) }</div>\r\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? getItemTemplate(from) : getItemTemplate(to) }</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnimatedItem.propTypes = {\r\n    item: PropTypes.string,\r\n    getItemTemplate: PropTypes.func,\r\n    scrollDown: PropTypes.bool,\r\n    height: PropTypes.number,\r\n    animateOnMount: PropTypes.bool\r\n};\r\n\r\nAnimatedItem.defaultProps = {\r\n    item: null,\r\n    getItemTemplate: x => x,\r\n    scrollDown: true,\r\n    height: 21,\r\n    animateOnMount: true\r\n}\r\n\r\nexport default AnimatedItem;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AnimatedItem from './AnimatedItem';\r\nimport './AnimatedCounter.css';\r\n\r\nclass AnimatedCounter extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { counter } = props;\r\n        const { prevCounter } = state;\r\n\r\n        if (counter !== prevCounter) {\r\n            return {\r\n                prevCounter: counter,\r\n\r\n                scrollDown: counter > prevCounter\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { counter, height, reverse } = this.props;\r\n        const { scrollDown } = this.state;\r\n        if (!counter) return null;\r\n\r\n        const counterStr = counter + '';\r\n\r\n        return (\r\n            <div className='animated-counter' style={{ height }}>\r\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnimatedCounter.propTypes = {\r\n    counter: PropTypes.number,\r\n    height: PropTypes.number,\r\n    reverse: PropTypes.bool\r\n};\r\n\r\nAnimatedCounter.defaultProps = {\r\n    counter: 0,\r\n    height: 21,\r\n    reverse: false\r\n}\r\n\r\nexport default AnimatedCounter;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './HeaderCommand.css';\r\nimport AnimatedCounter from './AnimatedCounter';\r\nimport { canBeReported } from '../../Utils/Chat';\r\nimport { openReportChat } from '../../Actions/Chat';\r\n\r\nclass HeaderCommand extends React.Component {\r\n    handleCancel = () => {\r\n        clearSelection();\r\n    };\r\n\r\n    handleDelete = () => {\r\n        let id = 0;\r\n        let messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        clearSelection();\r\n        deleteMessages(id, messageIds);\r\n    };\r\n\r\n    handleForward = () => {\r\n        let id;\r\n        const messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        clearSelection();\r\n        forwardMessages(id, messageIds);\r\n    };\r\n\r\n    handleReport = () => {\r\n        let id;\r\n        const messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        clearSelection();\r\n        openReportChat(id, messageIds);\r\n    };\r\n\r\n    render() {\r\n        const { t, count } = this.props;\r\n\r\n        let canBeDeleted = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let canBeForwarded = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_forwarded) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        const items = Array.from(MessageStore.selectedItems.values());\r\n        const canReport = canBeReported(items.length > 0 ? items[0].chatId : 0);\r\n\r\n        return (\r\n            <div className='header-command'>\r\n                {canBeForwarded && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\r\n                        {t('Forward')}\r\n                        <span>&nbsp;</span>\r\n                        <AnimatedCounter counter={count}/>\r\n                    </Button>\r\n                )}\r\n                {canBeDeleted && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\r\n                        {t('Delete')}\r\n                        <span>&nbsp;</span>\r\n                        <AnimatedCounter counter={count}/>\r\n                    </Button>\r\n                )}\r\n                {canReport && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleReport}>\r\n                        {t('ReportChat')}\r\n                        <span>&nbsp;</span>\r\n                        <AnimatedCounter counter={count}/>\r\n                    </Button>\r\n                )}\r\n                <div className='header-command-space' />\r\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\r\n                    {t('Cancel')}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderCommand.propTypes = {\r\n    count: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(HeaderCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './PinnedMessageBorder.css';\r\n\r\nclass PinnedMessageBorder extends React.Component {\r\n\r\n    drawRect = (x, y, width, height, radius) => {\r\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\r\n    };\r\n\r\n    getClipPath = (id, barHeight, count) => {\r\n        const radius = 1;\r\n\r\n        let d = '';\r\n        if (count === 3) {\r\n            d = this.drawRect(0, 0, 2, barHeight, radius)\r\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\r\n                + this.drawRect(0, 23, 2, barHeight, radius);\r\n        } else {\r\n            for (let i = 0; i < count; i++) {\r\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <clipPath id={id}>\r\n                <path d={d}/>\r\n            </clipPath>\r\n        );\r\n    };\r\n\r\n    getBarHeight = (count, index) => {\r\n        let barHeight = 32;\r\n        if (count === 1) {\r\n            barHeight = 32;\r\n        } else if (count === 2) {\r\n            barHeight = 15;\r\n        } else if (count === 3) {\r\n            barHeight = 9;\r\n        } else if (count === 4) {\r\n            barHeight = 7;\r\n        } else if (count > 3) {\r\n            barHeight = 7;\r\n        }\r\n\r\n        return barHeight;\r\n    };\r\n\r\n    getMarkHeight = (count, index) => {\r\n        let barHeight = 32;\r\n        if (count === 1) {\r\n            barHeight = 32;\r\n        } else if (count === 2) {\r\n            barHeight = 15;\r\n        } else if (count === 3) {\r\n            barHeight = index === 1 ? 10 : 9;\r\n        } else if (count === 4) {\r\n            barHeight = 7;\r\n        } else if (count > 3) {\r\n            barHeight = 7;\r\n        }\r\n\r\n        return barHeight;\r\n    };\r\n\r\n    getMarkTranslateY = (index, barHeight, count) => {\r\n        if (count === 1) {\r\n            return 0;\r\n        } else if (count === 2) {\r\n            return index === 0 ? 0 : barHeight + 2;\r\n        }\r\n\r\n        if (count === 3) {\r\n            if (index === 0) {\r\n                return 0;\r\n            } else if (index === 1) {\r\n                return 11;\r\n            }\r\n\r\n            return 23;\r\n        } else {\r\n            return (barHeight + 2) * index;\r\n        }\r\n    };\r\n\r\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\r\n        if (count <= 4) {\r\n            return 0;\r\n        }\r\n\r\n        if (index <= 1) {\r\n            return 0;\r\n        } else if (index >= count - 2) {\r\n            return trackHeight - 32;\r\n        }\r\n\r\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\r\n    };\r\n\r\n    getTrackHeight = (count, barHeight) => {\r\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\r\n    };\r\n\r\n    render() {\r\n        const { count, index } = this.props;\r\n        if (count === 1) {\r\n            return (\r\n                <div className='pinned-message-border'>\r\n                    <div className='pinned-message-border-wrapper-1'/>\r\n                </div>);\r\n        }\r\n\r\n        const barHeight = this.getBarHeight(count, index);\r\n        const markHeight = this.getMarkHeight(count, index);\r\n        const trackHeight = this.getTrackHeight(count, barHeight);\r\n\r\n        const clipPathId = `clipPath_${count}`;\r\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\r\n\r\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\r\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\r\n\r\n        return (\r\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\r\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\r\n                    <svg height='0' width='0'>\r\n                        <defs>{clipPath}</defs>\r\n                    </svg>\r\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPinnedMessageBorder.propTypes = {\r\n    count: PropTypes.number,\r\n    index: PropTypes.number\r\n};\r\n\r\nexport default PinnedMessageBorder;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\r\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\r\nimport { openChat } from '../../Actions/Client';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PinnedMessage.css';\r\nimport AnimatedCounter from './AnimatedCounter';\r\nimport PinnedMessageBorder from './PinnedMessageBorder';\r\n\r\nclass PinnedMessage extends React.Component {\r\n    state = {};\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevPropsChatId } = state;\r\n        const { chatId } = props;\r\n\r\n        if (prevPropsChatId !== chatId) {\r\n            const media = MessageStore.getMedia(chatId);\r\n\r\n            const pinned = media ? media.pinned : [];\r\n\r\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\r\n            const thumbnail = getReplyThumbnail(chatId, messageId);\r\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n            return {\r\n                prevPropsChatId: chatId,\r\n                clientData: ChatStore.getClientData(chatId),\r\n                pinned,\r\n                prevMessageId: 0,\r\n                messageId,\r\n                minithumbnail,\r\n                thumbnail,\r\n                lastPhoto: {\r\n                    messageId,\r\n                    minithumbnail,\r\n                    thumbnail\r\n                }\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.props;\r\n        const { clientData, pinned, messageId } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clientData !== clientData) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.pinned !== pinned) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.props;\r\n        const { prevMessageId, messageId } = this.state;\r\n\r\n        if (prevProps.chatId !== chatId) {\r\n            this.animateText(messageId, prevMessageId, 0);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    onClientUpdateCurrentPinnedMessage = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chatId) {\r\n            return;\r\n        }\r\n\r\n        this.scrollToMessageId(update.messageId);\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n        if (!message.is_pinned) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { pinned } = this.state;\r\n        const { chat_id, is_permanent, message_ids } = update;\r\n        const messageIds = new Map(message_ids.map(x => [x, x]));\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n        if (!pinned.some(x => messageIds.has(x.id))) {\r\n            return;\r\n        }\r\n        if (!is_permanent) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { pinned } = this.state;\r\n        const { chat_id, message_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n        if (!pinned.some(x => x.id === message_id)) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    animateText = (messageId, prevMessageId, duration = 250) => {\r\n        const textElement = document.getElementById('pinned-message-animated-text');\r\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\r\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\r\n        if (!textElement || !text1Element || !text2Element) return;\r\n\r\n        const timingFunction = 'ease-in-out';\r\n\r\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\r\n        if (scrollDown) {\r\n            textElement.style.cssText = 'transform: translateY(-19px)';\r\n            text1Element.style.cssText = 'opacity: 0';\r\n            text2Element.style.cssText = 'opacity: 1';\r\n            requestAnimationFrame(() => {\r\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\r\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\r\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\r\n            });\r\n        } else {\r\n            textElement.style.cssText = 'transform: translateY(0px)';\r\n            text1Element.style.cssText = 'opacity: 1';\r\n            text2Element.style.cssText = 'opacity: 0';\r\n            requestAnimationFrame(() => {\r\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\r\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\r\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\r\n            });\r\n        }\r\n    };\r\n\r\n    setPinnedState = () => {\r\n        const { chatId } = this.props;\r\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\r\n\r\n        const clientData = ChatStore.getClientData(chatId);\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\r\n        if (!messageId && pinned.length > 0) {\r\n            messageId = pinned[0].id;\r\n        }\r\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\r\n\r\n        const thumbnail = getReplyThumbnail(chatId, messageId);\r\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n        MessageStore.currentPinned = { chatId, id: messageId };\r\n        this.setState({\r\n            clientData,\r\n            pinned,\r\n            prevMessageId,\r\n            messageId,\r\n            thumbnail,\r\n            minithumbnail,\r\n            lastPhoto: {\r\n                messageId,\r\n                thumbnail,\r\n                minithumbnail\r\n            }\r\n        }, () => {\r\n            if (this.state.prevMessageId === 0) return;\r\n            if (currentMessageId === this.state.messageId) return;\r\n\r\n            this.animateText(this.state.messageId, this.state.prevMessageId);\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onClientUpdateSetChatClientData = update => {\r\n        const { chatId, clientData } = update;\r\n\r\n        if (this.props.chatId !== chatId) return;\r\n\r\n        this.setState({ clientData });\r\n    };\r\n\r\n    scrollToMessageId = nextMessageId => {\r\n        const { chatId } = this.props;\r\n        const { messageId, thumbnail, minithumbnail } = this.state;\r\n\r\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\r\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\r\n\r\n        const lastPhoto = nextThumbnail ? {\r\n            messageId: nextMessageId,\r\n            thumbnail: nextThumbnail,\r\n            minithumbnail: nextMinithumbnail\r\n        } : {\r\n            messageId,\r\n            thumbnail,\r\n            minithumbnail\r\n        }\r\n\r\n        MessageStore.currentPinned = { chatId, id: messageId };\r\n        this.setState({\r\n            prevMessageId: messageId,\r\n            messageId: nextMessageId,\r\n            thumbnail: nextThumbnail,\r\n            minithumbnail: nextMinithumbnail,\r\n            lastPhoto\r\n        }, () => {\r\n            if (this.state.prevMessageId === 0) return;\r\n            if (messageId === this.state.messageId) return;\r\n\r\n            this.animateText(this.state.messageId, this.state.prevMessageId);\r\n        });\r\n    };\r\n\r\n    handleClick = event => {\r\n        const { chatId } = this.props;\r\n        const { pinned, messageId } = this.state;\r\n        if (!pinned.length) return;\r\n\r\n        if (!messageId) return;\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        MessageStore.clickedPinned = { chatId, id: messageId };\r\n\r\n        openChat(chatId, messageId);\r\n\r\n        const index = pinned.findIndex(x => x.id === messageId);\r\n        if (index === -1) return;\r\n\r\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\r\n\r\n        this.scrollToMessageId(pinned[nextIndex].id);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleEditClick = event => {\r\n        const { chatId } = this.props;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateOpenPinned',\r\n            chatId\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\r\n\r\n        if (!chatId) return null;\r\n\r\n        if (clientData) {\r\n            const { unpinned } = clientData;\r\n            if (unpinned) return null;\r\n        }\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\r\n\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        if (isDeletedMessage(message)) {\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\r\n        if (isDeletedMessage(prevMessage)) {\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        let index = 0;\r\n        let caption = t('PinnedMessage');\r\n        if (pinned && pinned.length > 1) {\r\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\r\n            if (pinned.length === 2) {\r\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\r\n            } else {\r\n                caption = (\r\n                    <>\r\n                        {t('PinnedMessage')}\r\n                        {index > 0 && (\r\n                            <>\r\n                                {' #'}\r\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\r\n                            </>)\r\n                        }\r\n                    </>);\r\n            }\r\n        }\r\n\r\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\r\n\r\n        return (\r\n            <>\r\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\r\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\r\n                    <CSSTransition\r\n                        in={!!thumbnail}\r\n                        classNames='pinned-message-tile'\r\n                        timeout={250}\r\n                        mountOnEnter={true}\r\n                        unmountOnExit={true}>\r\n                        <div>\r\n                            <ReplyTile\r\n                                chatId={chatId}\r\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\r\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\r\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\r\n                            />\r\n                        </div>\r\n                    </CSSTransition>\r\n                    <div className='pinned-message-content'>\r\n                        <div className='pinned-message-title'>{caption}</div>\r\n                        <div className='pinned-message-subtitle'>\r\n                            <div id='pinned-message-animated-text'>\r\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\r\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ListItem>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPinnedMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(PinnedMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\r\nimport SearchIcon from '../../Assets/Icons/Search';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport HeaderChat from '../Tile/HeaderChat';\r\nimport HeaderCommand from './HeaderCommand';\r\nimport HeaderProgress from './HeaderProgress';\r\nimport PinnedMessage from './PinnedMessage';\r\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\r\nimport {\r\n    getChatSubtitle,\r\n    getChatTitle,\r\n    isAccentChatSubtitle\r\n} from '../../Utils/Chat';\r\nimport { openChat, searchChat } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        this.state = {\r\n            chatId,\r\n            pinned,\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            connectionState: AppStore.getConnectionState()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\r\n\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\r\n\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chatId } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.state;\r\n        const { chatId } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    setPinnedState() {\r\n        const { chatId } = this.state;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        this.setState({ pinned });\r\n    }\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const chatId = AppStore.getChatId();\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        this.setState({\r\n            chatId,\r\n            pinned\r\n        });\r\n    };\r\n\r\n    onUpdateConnectionState = update => {\r\n        this.setState({ connectionState: update.state });\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    openChatDetails = () => {\r\n        const { chatId } = this.state;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { isSmallWidth } = AppStore;\r\n\r\n        if (isSmallWidth) {\r\n            openChat(chatId, null, true);\r\n        } else {\r\n            changeChatDetailsVisibility(true);\r\n        }\r\n    };\r\n\r\n    handleSearchChat = () => {\r\n        const { chatId } = this.state;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        searchChat(chatId);\r\n    };\r\n\r\n    localize = str => {\r\n        const { t } = this.props;\r\n\r\n        return t(str)\r\n            .replace('...', '')\r\n            .replace('…', '');\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handlePinClick = () => {\r\n        const { chatId } = this.state;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateOpenPinned',\r\n            chatId\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            pinned,\r\n            authorizationState,\r\n            connectionState,\r\n            selectionCount,\r\n        } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n        let title = getChatTitle(chatId, true, t);\r\n        let subtitle = getChatSubtitle(chatId, true);\r\n        let showProgressAnimation = false;\r\n\r\n        if (connectionState) {\r\n            switch (connectionState['@type']) {\r\n                case 'connectionStateConnecting':\r\n                    title = this.localize('Connecting');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateConnectingToProxy':\r\n                    title = this.localize('Connecting to proxy');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateReady':\r\n                    break;\r\n                case 'connectionStateUpdating':\r\n                    title = this.localize('Updating');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateWaitingForNetwork':\r\n                    title = this.localize('Waiting for network');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else if (authorizationState) {\r\n            switch (authorizationState['@type']) {\r\n                case 'authorizationStateClosed':\r\n                    break;\r\n                case ' authorizationStateClosing':\r\n                    break;\r\n                case 'authorizationStateLoggingOut':\r\n                    title = this.localize('Logging out');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateReady':\r\n                    break;\r\n                case 'authorizationStateWaitCode':\r\n                    break;\r\n                case 'authorizationStateWaitEncryptionKey':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateWaitPassword':\r\n                    break;\r\n                case 'authorizationStateWaitPhoneNumber':\r\n                    break;\r\n                case 'authorizationStateWaitTdlibParameters':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else {\r\n            title = this.localize('Loading');\r\n            subtitle = '';\r\n            showProgressAnimation = true;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\r\n                <div className='header-details-content'>\r\n                    <HeaderCommand count={selectionCount} />\r\n                    <div className='header-details-row'>\r\n                        {showProgressAnimation ? (\r\n                            <div\r\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\r\n                                onClick={this.openChatDetails}>\r\n                                <span className='header-status-content'>{title}</span>\r\n                                <HeaderProgress />\r\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\r\n                                    {subtitle}\r\n                                </span>\r\n                                <span className='header-status-tail' />\r\n                            </div>\r\n                        ) : (\r\n                            <HeaderChat\r\n                                className={classNames('grow', 'cursor-pointer')}\r\n                                chatId={chatId}\r\n                                onClick={this.openChatDetails}\r\n                            />\r\n                        )}\r\n                        {/* <PinnedMessage chatId={chatId} /> */}\r\n                        {chat && (\r\n                            <div className='header-right-buttons'>\r\n                                { pinned.length > 1 && (\r\n                                    <IconButton\r\n                                        aria-label='Pins'\r\n                                        onClick={this.handlePinClick}\r\n                                        onMouseDown={this.handleMouseDown}>\r\n                                        <PlaylistEditIcon />\r\n                                    </IconButton>\r\n                                )}\r\n                                {/* <IconButton\r\n                                    aria-label='Search'\r\n                                    onClick={this.handleSearchChat}>\r\n                                    <SearchIcon />\r\n                                </IconButton> */}\r\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Header);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './VolumeButton.css';\r\n\r\nclass VolumeButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        value: PlayerStore.volume,\r\n        prevValue: PlayerStore.volume,\r\n        dragging: false,\r\n        buttonOver: false,\r\n        popupOver: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume, prevVolume } = update;\r\n\r\n        if (prevVolume === undefined) {\r\n            this.setState({ value: volume });\r\n        } else {\r\n            this.setState({ value: volume, prevValue: prevVolume });\r\n        }\r\n    };\r\n\r\n    handlePopoverOpen = anchorEl => {\r\n        this.setState({ anchorEl: anchorEl });\r\n    };\r\n\r\n    handlePopoverClose = () => {\r\n        const { dragging, buttonOver, popupOver } = this.state;\r\n\r\n        if (dragging) return;\r\n        if (buttonOver) return;\r\n        if (popupOver) return;\r\n\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleMouseEnter = (event, openPopover) => {\r\n        this.setState({ buttonOver: true });\r\n\r\n        if (openPopover) {\r\n            this.handlePopoverOpen(event.currentTarget);\r\n        }\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState({ buttonOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handlePopupMouseLeave = () => {\r\n        this.setState({ popupOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handleVoiceClick = () => {\r\n        const { value, prevValue } = this.state;\r\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaVolume',\r\n            volume: nextValue\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { dragging, prevValue } = this.state;\r\n\r\n        if (dragging) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                volume: value\r\n            });\r\n        } else {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                prevVolume: value > 0 ? value : prevValue,\r\n                volume: value\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDragStart = () => {\r\n        const { value } = this.state;\r\n\r\n        this.setState({\r\n            dragging: true,\r\n            prevValue: value\r\n        });\r\n    };\r\n\r\n    handleDragEnd = () => {\r\n        const { value, prevValue } = this.state;\r\n\r\n        this.setState(\r\n            {\r\n                dragging: false,\r\n                prevValue: value > 0 ? value : prevValue\r\n            },\r\n            () => {\r\n                this.handlePopoverClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    getVolumeIcon = value => {\r\n        if (value === 0) {\r\n            return <VolumeOffIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.25) {\r\n            return <VolumeMuteIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.5) {\r\n            return <VolumeDownIcon fontSize='small' />;\r\n        }\r\n\r\n        return <VolumeUpIcon fontSize='small' />;\r\n    };\r\n\r\n    render() {\r\n        const { anchorEl, value } = this.state;\r\n        const open = Boolean(anchorEl);\r\n\r\n        return (\r\n            <div\r\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\r\n                onMouseLeave={this.handleMouseLeave}\r\n                style={{\r\n                    position: 'relative',\r\n                    background: 'transparent'\r\n                }}>\r\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\r\n                    {this.getVolumeIcon(value)}\r\n                </IconButton>\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        background: 'transparent',\r\n                        visibility: open ? 'visible' : 'hidden',\r\n                        zIndex: 1\r\n                    }}\r\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\r\n                    onMouseLeave={this.handlePopupMouseLeave}>\r\n                    <div className='volume-button-panel'>\r\n                        <Slider\r\n                            min={0}\r\n                            max={1}\r\n                            step={0.01}\r\n                            value={value}\r\n                            onChange={this.handleChange}\r\n                            onDragStart={this.handleDragStart}\r\n                            onDragEnd={this.handleDragEnd}\r\n                            orientation='vertical'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VolumeButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\r\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass RepeatButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { repeat } = PlayerStore;\r\n\r\n        this.state = {\r\n            repeat\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    onClientUpdateMediaRepeat = update => {\r\n        const { repeat } = update;\r\n\r\n        this.setState({ repeat });\r\n    };\r\n\r\n    handleRepeat = () => {\r\n        const { repeat } = this.state;\r\n\r\n        let nextRepeat = repeat;\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                nextRepeat = RepeatEnum.REPEAT;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                nextRepeat = RepeatEnum.REPEAT_ONE;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                nextRepeat = RepeatEnum.NONE;\r\n                break;\r\n            }\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaRepeat',\r\n            repeat: nextRepeat\r\n        });\r\n    };\r\n\r\n    getIcon = repeat => {\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                return <RepeatOneIcon fontSize='small' />;\r\n            }\r\n            default: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { repeat } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\r\n                onClick={this.handleRepeat}>\r\n                {this.getIcon(repeat)}\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RepeatButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass ShuffleButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { shuffle } = PlayerStore;\r\n\r\n        this.state = {\r\n            shuffle\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    onClientUpdateMediaShuffle = update => {\r\n        const { shuffle } = update;\r\n\r\n        this.setState({ shuffle });\r\n    };\r\n\r\n    handleShuffle = () => {\r\n        const { shuffle } = this.state;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaShuffle',\r\n            shuffle: !shuffle\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { shuffle } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={!shuffle ? 'default' : 'primary'}\r\n                onClick={this.handleShuffle}>\r\n                <ShuffleIcon fontSize='small' />\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShuffleButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass PlaybackRateButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\r\n\r\n        this.state = {\r\n            audioPlaybackRate,\r\n            playbackRate\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n    }\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        this.setState({ playbackRate });\r\n    };\r\n\r\n    onClientUpdateMediaAudioPlaybackRate = update => {\r\n        const { audioPlaybackRate } = update;\r\n\r\n        this.setState({ audioPlaybackRate });\r\n    };\r\n\r\n    handlePlaybackRate = () => {\r\n        const { audio } = this.props;\r\n        const { audioPlaybackRate, playbackRate } = this.state;\r\n\r\n        const rate = audio ? audioPlaybackRate : playbackRate;\r\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\r\n            ? PLAYER_PLAYBACKRATE_FAST\r\n            : PLAYER_PLAYBACKRATE_NORMAL;\r\n\r\n        if (audio) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\r\n                audioPlaybackRate: nextRate\r\n            });\r\n        } else {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaybackRate',\r\n                playbackRate: nextRate\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { audio } = this.props;\r\n        const { audioPlaybackRate, playbackRate } = this.state;\r\n\r\n        const rate = audio ? audioPlaybackRate : playbackRate;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\r\n                onClick={this.handlePlaybackRate}>\r\n                <div className='header-player-playback-icon'>2X</div>\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nPlaybackRateButton.defaultProps = {\r\n    audio: false\r\n}\r\n\r\nPlaybackRateButton.propTypes = {\r\n    audio: PropTypes.bool\r\n}\r\n\r\nexport default PlaybackRateButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getDurationString } from '../../Utils/Common';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport './Time.css';\r\n\r\nclass Time extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { duration } = this.props;\r\n\r\n        const currentTime = 0;\r\n        const reverse = false;\r\n\r\n        this.state = {\r\n            reverse,\r\n            currentTime,\r\n            duration,\r\n            currentTimeString: getDurationString(currentTime, duration, reverse),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    onClientUpdateMediaTime = update => {\r\n        const { currentTime, duration } = update;\r\n        const { reverse } = this.state;\r\n\r\n        this.setState({\r\n            currentTime,\r\n            duration,\r\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\r\n        });\r\n    };\r\n\r\n    handleReverse = event => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        const { currentTime, duration, reverse } = this.state;\r\n\r\n        this.setState({\r\n            reverse: !reverse,\r\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { currentTimeString } = this.state;\r\n\r\n        return (\r\n            <div className='header-player-time' onClick={this.handleReverse}>\r\n                {currentTimeString}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Time;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as ReactDOM from 'react-dom';\r\nimport MediaAudio from '../Message/Media/Audio';\r\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getMedia } from '../../Utils/Media';\r\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\r\nimport { openInstantViewMedia } from '../../Utils/InstantView';\r\nimport { SCROLL_PRECISION } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Playlist.css';\r\n\r\nclass Playlist extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemRefMap = new Map();\r\n\r\n        const { message, block, playlist } = PlayerStore;\r\n        this.state = {\r\n            message,\r\n            block,\r\n            playlist,\r\n\r\n            open: false,\r\n            titleMouseOver: false,\r\n            playlistMouseOver: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.state;\r\n\r\n        if (!prevState.open && open) {\r\n            this.scrollToActive();\r\n        }\r\n    }\r\n\r\n    scrollToActive = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { playlist, message, block } = this.state;\r\n        if (!message && !block) return;\r\n        if (!playlist) return;\r\n\r\n        const index = [...playlist.items]\r\n            .reverse()\r\n            .findIndex(x => playlistItemEquals(x, message || block));\r\n        if (index === -1) return;\r\n\r\n        const item = this.itemRefMap.get(index);\r\n        if (!item) return;\r\n\r\n        const node = ReactDOM.findDOMNode(item);\r\n        if (!node) return;\r\n\r\n        list.scrollTop = node.offsetTop - 15;\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    onClientUpdateMediaTitleMouseOver = update => {\r\n        const { over } = update;\r\n\r\n        if (over) {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryOpen();\r\n                }\r\n            );\r\n        } else {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryClose();\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { source } = update;\r\n\r\n        switch (source['@type']) {\r\n            case 'message': {\r\n\r\n                this.setState({\r\n                    message: source,\r\n                    block: null\r\n                })\r\n                break;\r\n            }\r\n            case 'instantViewSource': {\r\n\r\n                this.setState({\r\n                    message: null,\r\n                    block: source.block\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylistLoading = update => {\r\n        const { message, block } = this.state;\r\n        const { source } = update;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({\r\n                playlist: null\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { message, block } = this.state;\r\n        const { source, playlist } = update;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({\r\n                playlist\r\n            });\r\n        }\r\n    };\r\n\r\n    tryOpen = () => {\r\n        clearTimeout(this.openTimeout);\r\n\r\n        this.openTimeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    tryClose = () => {\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    handleMouseEnter = () => {\r\n        this.setState({\r\n            playlistMouseOver: true,\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState(\r\n            {\r\n                playlistMouseOver: false\r\n            },\r\n            () => {\r\n                this.tryClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        if (list.scrollTop <= SCROLL_PRECISION) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistNext'\r\n            });\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistPrev'\r\n            });\r\n        }\r\n    };\r\n\r\n    getPageBlock(block, instantView) {\r\n        if (!block) return null;\r\n\r\n        let element = null;\r\n        switch (block['@type']) {\r\n            case 'pageBlockAudio': {\r\n                element = (\r\n                    <MediaAudio\r\n                        block={block}\r\n                        audio={block.audio}\r\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\r\n                );\r\n                break;\r\n            }\r\n            case 'pageBlockVoiceNote': {\r\n                element = (\r\n                    <MediaVoiceNote\r\n                        block={block}\r\n                        voiceNote={block.voice_note}\r\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\r\n                );\r\n                break;\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    render() {\r\n        const { open, playlist } = this.state;\r\n\r\n        if (!open) return null;\r\n        if (!playlist) return null;\r\n\r\n        const { items } = playlist;\r\n        if (!items) return null;\r\n        if (items.length <= 1) return null;\r\n\r\n        this.itemRefMap.clear();\r\n\r\n        let iv = null;\r\n        if (items[0]['@type'] === 'instantViewSource') {\r\n            iv = playlist.source.instantView;\r\n        }\r\n\r\n        const getMediaFunc = items[0]['@type'] === 'message'\r\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\r\n            : x => this.getPageBlock(x, iv)\r\n\r\n        return (\r\n            <div className='playlist'>\r\n                <div className='playlist-wrapper'>\r\n                    <div\r\n                        ref={this.listRef}\r\n                        className='playlist-items'\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseLeave={this.handleMouseLeave}\r\n                        onScroll={this.handleScroll}>\r\n                        {[...items]\r\n                            .reverse()\r\n                            .map((x, index) => (\r\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\r\n                                    {getMediaFunc(x)}\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPlaylist.propTypes = {\r\n\r\n};\r\n\r\nexport default Playlist;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { loadInstantViewContent } from '../Utils/File';\r\nimport { setInstantViewContent } from './Client';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nexport function openMediaInstantView(instantView, block) {\r\n    const url = urlCache.get(instantView);\r\n    if (!url) return;\r\n\r\n    console.log('[IV] open', instantView);\r\n    loadInstantViewContent(instantView);\r\n    setInstantViewContent({ instantView, block, url });\r\n}\r\n\r\nlet timestamp = null;\r\n\r\nconst ivCache = new Map();\r\nconst urlCache = new Map();\r\n\r\nexport async function openInstantView(url) {\r\n    try {\r\n        let result = null;\r\n        if (ivCache.has(url)) {\r\n            result = ivCache.get(url);\r\n        } else {\r\n            const now = (timestamp = new Date());\r\n            result = await TdLibController.send({\r\n                '@type': 'getWebPageInstantView',\r\n                url,\r\n                force_full: true\r\n            });\r\n            ivCache.set(url, result);\r\n            urlCache.set(result, url);\r\n            if (timestamp !== now) return;\r\n        }\r\n\r\n        console.log('[IV] open', result);\r\n        loadInstantViewContent(result);\r\n        setInstantViewContent({ instantView: result, url });\r\n    } catch {\r\n        const newWindow = window.open();\r\n        newWindow.opener = null;\r\n        newWindow.location = url;\r\n    }\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\r\nimport PauseIcon from '../../Assets/Icons/Pause';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VolumeButton from '../Player/VolumeButton';\r\nimport RepeatButton from '../Player/RepeatButton';\r\nimport ShuffleButton from '../Player/ShuffleButton';\r\nimport PlaybackRateButton from './PlaybackRateButton';\r\nimport Time from '../Player/Time';\r\nimport Playlist from '../Player/Playlist';\r\nimport { supportsStreaming } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\r\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\r\nimport { openMediaInstantView } from '../../Actions/InstantView';\r\nimport { clamp } from '../../Utils/Common';\r\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './HeaderPlayer.css';\r\n\r\nclass HeaderPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        const { message, block, instantView, playlist } = PlayerStore;\r\n        const { currentTime, duration } = getCurrentTime(message);\r\n\r\n        this.state = {\r\n            currentTime,\r\n            duration,\r\n            message,\r\n            block,\r\n            instantView,\r\n            playlist,\r\n            playing: false,\r\n            src: getMediaSrc(message),\r\n            mimeType: getMediaMimeType(message)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { message, block, playlist, src, playing } = this.state;\r\n\r\n        if (nextState.block !== block) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.message !== message) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playlist !== playlist) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.src !== src) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playing !== playing) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addMediaSessionHandlers();\r\n\r\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.removeMediaSessionHandlers();\r\n\r\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n    }\r\n\r\n    addMediaSessionHandlers() {\r\n        const { mediaSession } = navigator;\r\n        if (!mediaSession) return;\r\n\r\n        try {\r\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\r\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\r\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\r\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\r\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    handleSeekForward = () => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\r\n    };\r\n\r\n    handleSeekBackward = () => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\r\n    };\r\n\r\n    handleSeekTo = event => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(event.seekTime);\r\n    };\r\n\r\n    handleSeek = currentTime => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        currentTime = clamp(currentTime, 0, video.duration || 0);\r\n\r\n        video.currentTime = currentTime;\r\n    };\r\n\r\n    removeMediaSessionHandlers() {\r\n        const { mediaSession } = navigator;\r\n        if (!mediaSession) return;\r\n\r\n        try{\r\n            mediaSession.setActionHandler('nexttrack', null);\r\n            mediaSession.setActionHandler('previoustrack', null);\r\n            mediaSession.setActionHandler('seekforward', null);\r\n            mediaSession.setActionHandler('seekbackward', null);\r\n            mediaSession.setActionHandler('seekto', null);\r\n        }catch {\r\n\r\n        }\r\n    }\r\n\r\n    fadeOutVolume(duration) {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const totalIterations = 20;\r\n        let count = 0;\r\n        const currentVolume = player.volume;\r\n        this.volumeInterval = setInterval(() => {\r\n            if (count >= totalIterations) {\r\n                player.pause();\r\n                player.volume = currentVolume;\r\n                clearInterval(this.volumeInterval);\r\n            } else {\r\n                player.volume = currentVolume / (count + 1);\r\n                count++;\r\n            }\r\n        }, duration / totalIterations);\r\n    }\r\n\r\n    fadeInVolume(duration) {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const totalIterations = 20;\r\n        let count = 0;\r\n        const currentVolume = player.volume;\r\n        player.volume = 0;\r\n        player.play();\r\n        this.volumeInterval = setInterval(() => {\r\n            if (count >= totalIterations) {\r\n                player.volume = currentVolume;\r\n                clearInterval(this.volumeInterval);\r\n            } else {\r\n                player.volume = currentVolume / totalIterations * (count + 1);\r\n                count++;\r\n            }\r\n        }, duration / totalIterations);\r\n    }\r\n\r\n    onClientUpdateRecordStart = update => {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (!player.paused) {\r\n            this.fadeOutVolume(250);\r\n            this.pausedForRecord = true;\r\n        }\r\n    };\r\n\r\n    onClientUpdateRecordStop = update => {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (player.paused && this.pausedForRecord) {\r\n            this.fadeInVolume(250);\r\n            this.pausedForRecord = false;\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const audio = hasAudio(message || block);\r\n        if (audio) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.playbackRate = playbackRate;\r\n    };\r\n\r\n    onClientUpdateMediaAudioPlaybackRate = update => {\r\n        const { audioPlaybackRate } = update;\r\n\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        if (!hasAudio(message || block)) return;\r\n        if (!useAudioPlaybackRate(message || block)) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.playbackRate = audioPlaybackRate;\r\n    };\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume } = update;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.volume = volume;\r\n    };\r\n\r\n    onClientUpdateMediaSeek = update => {\r\n        const { source, value, duration } = update;\r\n        const { message, block } = this.state;\r\n\r\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n        if (!player.duration) {\r\n            this.currentValue = { value, duration };\r\n            return;\r\n        }\r\n\r\n        player.currentTime = value * player.duration;\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\r\n    };\r\n\r\n    onClientUpdateMediaViewerEnded = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPause = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPlay = update => {\r\n        this.playingMediaViewer = true;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        this.fadeOutVolume(250);\r\n    };\r\n\r\n    startPlayingFile = source => {\r\n        if (!source) return;\r\n\r\n        const { playlist } = PlayerStore;\r\n        const { src: prevSrc } = this.state;\r\n\r\n        const src = getMediaSrc(source);\r\n        const mimeType = getMediaMimeType(source);\r\n        const { currentTime, duration } = getCurrentTime(source);\r\n        const playing = Boolean(src);\r\n\r\n        const srcSource = source['@type'] === 'instantViewSource'\r\n            ? { message: null, block: source.block, instantView: source.instantView }\r\n            : { message: source, block: null, instantView: null };\r\n\r\n        this.setState(\r\n            {\r\n                currentTime,\r\n                duration,\r\n                playlist,\r\n                playing,\r\n                src,\r\n                ...srcSource,\r\n                mimeType\r\n            },\r\n            () => {\r\n                const player = this.videoRef.current;\r\n                if (!player) return;\r\n\r\n                if (prevSrc !== src) {\r\n                    player.load();\r\n                    if (this.currentValue) {\r\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\r\n                        this.currentValue = null;\r\n                    } else {\r\n                        player.currentTime = currentTime;\r\n                    }\r\n                }\r\n\r\n                if (this.playingMediaViewer) {\r\n                    player.pause();\r\n\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateMediaPause',\r\n                        source\r\n                    });\r\n                } else if (player.paused) {\r\n                    player.play();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId, fileId } = update;\r\n        const { message, block, instantView } = this.state;\r\n\r\n        if (message) {\r\n            const { chat_id, id, content } = message;\r\n            if (!content) return;\r\n            if (chatId !== chat_id || messageId !== id) return;\r\n\r\n            let startPlaying = false;\r\n            switch (content['@type']) {\r\n                case 'messageText': {\r\n                    const { web_page } = content;\r\n                    if (web_page) {\r\n                        const { audio, voice_note, video_note } = web_page;\r\n\r\n                        if (audio) {\r\n                            if (supportsStreaming()) return;\r\n\r\n                            const { audio: file } = audio;\r\n                            if (file) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (voice_note) {\r\n                            const { voice } = voice_note;\r\n                            if (voice) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (video_note) {\r\n                            const { video } = video_note;\r\n                            if (video) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageAudio': {\r\n                    const { audio } = content;\r\n                    if (audio) {\r\n                        if (supportsStreaming()) return;\r\n\r\n                        const { audio: file } = audio;\r\n                        if (file) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVoiceNote': {\r\n                    const { voice_note } = content;\r\n                    if (voice_note) {\r\n                        const { voice } = voice_note;\r\n                        if (voice) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVideoNote': {\r\n                    const { video_note } = content;\r\n                    if (video_note) {\r\n                        const { video } = video_note;\r\n                        if (video) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (startPlaying) {\r\n                this.startPlayingFile(message);\r\n            }\r\n        } else if (block) {\r\n            let startPlaying = false;\r\n            switch (block['@type']) {\r\n                case 'pageBlockAudio': {\r\n                    const { audio } = block;\r\n                    if (audio) {\r\n                        if (supportsStreaming()) return;\r\n\r\n                        const { audio: file } = audio;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'pageBlockVoiceNote': {\r\n                    const { voice_note } = block;\r\n                    if (voice_note) {\r\n                        const { voice: file } = voice_note;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'pageBlockVideoNote': {\r\n                    const { video_note } = block;\r\n                    if (video_note) {\r\n                        const { video: file } = video_note;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (startPlaying) {\r\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { playlist, source } = update;\r\n        const { message, block } = this.state;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({ playlist });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaClose = update => {\r\n        this.setState({\r\n            message: null,\r\n            block: null,\r\n            instantView: null,\r\n            playlist: null,\r\n            playing: false,\r\n            src: null,\r\n            mimeType: null\r\n        }, () => {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { source } = update;\r\n        const { message, block, src } = this.state;\r\n\r\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\r\n            if (!src) return;\r\n\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            this.pausedForRecord = false;\r\n            if (player.paused) {\r\n                player.play();\r\n            } else {\r\n                player.pause();\r\n            }\r\n        } else {\r\n            this.startPlayingFile(source);\r\n        }\r\n    };\r\n\r\n    handlePrev = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPrev'\r\n        });\r\n    };\r\n\r\n    handlePlay = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaActive',\r\n            source\r\n        });\r\n    };\r\n\r\n    handleNext = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaNext'\r\n        });\r\n    };\r\n\r\n    handleEnded = (moveNext = true) => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaEnding',\r\n            source,\r\n            moveNext\r\n        });\r\n\r\n        this.setState(\r\n            {\r\n                //playing: false,\r\n                //message: null,\r\n                //src: null\r\n            },\r\n            () => {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateMediaEnd',\r\n                    source,\r\n                    moveNext\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleVideoEnded = () => {\r\n        const video = this.videoRef.current;\r\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\r\n\r\n        this.handleEnded(true);\r\n    };\r\n\r\n    handleClose = () => {\r\n        const player = this.videoRef.current;\r\n        if (player) {\r\n            player.pause();\r\n        }\r\n\r\n        this.handleEnded(false);\r\n    };\r\n\r\n    handleLoadedMetadata = () => {\r\n        let { message, block, instantView, currentTime } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\r\n\r\n        const audio = hasAudio(message || block);\r\n        const voiceNote = hasVoice(message || block);\r\n\r\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\r\n        if (voiceNote) {\r\n            rate = playbackRate;\r\n        } else if (audio && useAudioPlaybackRate(message || block)) {\r\n            rate = audioPlaybackRate;\r\n        }\r\n\r\n        player.playbackRate = rate;\r\n        player.volume = volume;\r\n        player.muted = false;\r\n        if (this.currentValue) {\r\n            player.currentTime = player.duration * this.currentValue.value;\r\n            this.currentValue = null;\r\n        } else {\r\n            player.currentTime = currentTime;\r\n        }\r\n\r\n        player.play();\r\n\r\n        const { buffered, duration, videoWidth, videoHeight } = player;\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaLoadedMetadata',\r\n            source,\r\n            buffered,\r\n            duration,\r\n            videoWidth,\r\n            videoHeight\r\n        });\r\n\r\n        if (audio) {\r\n            return;\r\n        }\r\n        if (voiceNote) {\r\n            return;\r\n        }\r\n\r\n        let stream = null;\r\n        if ('captureStream' in player) {\r\n            stream = player.captureStream();\r\n        } else if ('mozCaptureStream' in player) {\r\n            stream = player.mozCaptureStream();\r\n        }\r\n\r\n        if (!stream) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaCaptureStream',\r\n            chatId: message.chat_id,\r\n            messageId: message.id,\r\n            stream: stream\r\n        });\r\n    };\r\n\r\n    handleProgress = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { buffered } = player;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaProgress',\r\n            source,\r\n            buffered\r\n        });\r\n    }\r\n\r\n    handleTimeUpdate = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { currentTime, buffered, duration } = player;\r\n\r\n        this.setState({ currentTime });\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTime',\r\n            source,\r\n            duration,\r\n            currentTime,\r\n            buffered,\r\n            timestamp: Date.now()\r\n        });\r\n\r\n        this.setCurrentTime({ currentTime, duration });\r\n    };\r\n\r\n    handleCanPlay = () => {\r\n\r\n    };\r\n\r\n    handleVideoPlay = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        this.setState({ playing: true });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { currentTime, duration } = player;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlay',\r\n            source,\r\n            currentTime,\r\n            duration,\r\n            timestamp: Date.now()\r\n        });\r\n    };\r\n\r\n    handleVideoPause = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        this.setState({\r\n            playing: false\r\n        });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPause',\r\n            source\r\n        });\r\n    };\r\n\r\n    hasPrev = (item, playlist) => {\r\n        if (!item) return false;\r\n        if (!playlist || !playlist.items.length) return false;\r\n\r\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\r\n        if (index === -1) return false;\r\n\r\n        return index + 1 < playlist.items.length;\r\n    };\r\n\r\n    hasNext = (item, playlist) => {\r\n        if (!item) return false;\r\n        if (!playlist || !playlist.items.length) return false;\r\n\r\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\r\n        if (index === -1) return false;\r\n\r\n        return index - 1 >= 0;\r\n    };\r\n\r\n    handleTitleMouseEnter = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: true\r\n        });\r\n    };\r\n\r\n    handleTitleMouseLeave = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: false\r\n        });\r\n    };\r\n\r\n    handleTitleClick = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (message) {\r\n            openChat(message.chat_id, message.id);\r\n            return;\r\n        }\r\n\r\n        if (block && instantView) {\r\n            openMediaInstantView(instantView, block);\r\n            return;\r\n        }\r\n    };\r\n\r\n    setCurrentTime = currentTime => {\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        if (!useAudioPlaybackRate(message || block)) return;\r\n\r\n        const audio = getMessageAudio(message.chat_id, message.id);\r\n        if (!audio) return;\r\n\r\n        const { audio: file } = audio;\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        if (!currentTime) {\r\n            PlayerStore.clearCurrentTime(unique_id);\r\n        } else {\r\n            PlayerStore.setCurrentTime(unique_id, currentTime);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\r\n\r\n        const audio = hasAudio(message || block);\r\n        const useAudioRate = useAudioPlaybackRate(message || block);\r\n\r\n        const date = message ? message.date : null;\r\n\r\n        const title = getMediaTitle(message || block, t);\r\n        const dateHintStr = getDateHint(date);\r\n        const dateStr = getDate(date);\r\n        const showDate = false; //!audio;\r\n        const showPlaybackRate = !audio || useAudioRate;\r\n        const showRepeat = audio;\r\n        const showShuffle = audio;\r\n        const hasPrev = this.hasPrev(message || block, playlist);\r\n        const hasNext = this.hasNext(message || block, playlist);\r\n\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n\r\n        return (\r\n            <>\r\n                <video\r\n                    className='header-player-video'\r\n                    ref={this.videoRef}\r\n                    autoPlay={true}\r\n                    controls={false}\r\n                    width={44}\r\n                    height={44}\r\n                    disablePictureInPicture={true}\r\n                    onLoadedMetadata={this.handleLoadedMetadata}\r\n                    onCanPlay={this.handleCanPlay}\r\n                    onPlay={this.handleVideoPlay}\r\n                    onPause={this.handleVideoPause}\r\n                    onEnded={this.handleVideoEnded}\r\n                    onTimeUpdate={this.handleTimeUpdate}\r\n                    onProgress={this.handleProgress}\r\n                >\r\n                    {source}\r\n                </video>\r\n                {(message || block) && (\r\n                    <div className='header-player'>\r\n                        <IconButton\r\n                            disabled={!hasPrev}\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            onClick={this.handlePrev}>\r\n                            <SkipPreviousIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            disabled={!src}\r\n                            onClick={this.handlePlay}>\r\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n                        </IconButton>\r\n                        <IconButton\r\n                            disabled={!hasNext}\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            onClick={this.handleNext}>\r\n                            <SkipNextIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <Playlist />\r\n                        <div\r\n                            className='header-player-content'\r\n                            onMouseEnter={this.handleTitleMouseEnter}\r\n                            onMouseLeave={this.handleTitleMouseLeave}\r\n                            onClick={this.handleTitleClick}>\r\n                            <div className='header-player-title'>\r\n                                {title}\r\n                                {showDate && (\r\n                                    <span title={dateHintStr}>\r\n                                        &nbsp;\r\n                                        {dateStr}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            &nbsp;\r\n                        </div>\r\n                        <Time duration={duration}/>\r\n                        <VolumeButton />\r\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\r\n                        {showRepeat && <RepeatButton />}\r\n                        {showShuffle && <ShuffleButton />}\r\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\r\n                            <CloseIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(HeaderPlayer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\r\nimport { requestBlockSender } from '../../Actions/Message';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ActionBar.css';\r\n\r\nclass ActionBar extends React.Component {\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\r\n    }\r\n\r\n    onUpdateChatActionBar = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        TdLibController.send({\r\n            '@type': 'removeChatActionBar',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleReportSpam = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    handleReportUnrelatedLocation = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    handleSharePhoneNumber = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'sharePhoneNumber',\r\n            user_id: userId\r\n        });\r\n    };\r\n\r\n    handleAddContact = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        const user = UserStore.get(userId);\r\n        if (!user) return;\r\n\r\n        const { user_id, phone_number, first_name, last_name } = user;\r\n\r\n        TdLibController.send({\r\n            '@type': 'addContact',\r\n            contact: {\r\n                '@type': 'contact',\r\n                phone_number,\r\n                first_name,\r\n                last_name,\r\n                vcard: '',\r\n                user_id\r\n            },\r\n            share_phone_number: false\r\n        });\r\n    };\r\n\r\n    handleBlockUser = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        if (!chatId) return null;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { action_bar } = chat;\r\n        if (!action_bar) return null;\r\n\r\n        let content = null;\r\n        switch (action_bar['@type']) {\r\n            case 'chatActionBarSharePhoneNumber': {\r\n                content = (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\r\n                        {t('ShareMyPhone')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarAddContact': {\r\n                content = (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\r\n                        {t('AddContactChat')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarReportAddBlock': {\r\n                content = (\r\n                    <>\r\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\r\n                            {t('AddContactChat')}\r\n                        </Button>\r\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\r\n                            {t('ReportSpamUser')}\r\n                        </Button>\r\n                    </>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarUnrelatedLocation': {\r\n                content = (\r\n                    <Button\r\n                        color='secondary'\r\n                        className='header-command-button'\r\n                        onClick={this.handleReportUnrelatedLocation}>\r\n                        {t('ReportSpamLocation')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarReportSpam': {\r\n                content = (\r\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\r\n                        {t('ReportSpam')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarInviteMembers': {\r\n                break;\r\n            }\r\n        }\r\n        if (!content) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className='action-bar' onMouseDown={this.handleClick}>\r\n                <div className='action-bar-content'>{content}</div>\r\n                <div className='action-bar-close-button'>\r\n                    <IconButton onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nActionBar.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(ActionBar);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\r\n    'Copy'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\r\n    'FrameCheck'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\r\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\r\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\r\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\r\n    </g>,\r\n    'RemoveCheck'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CopyIcon from '../../Assets/Icons/Copy';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\r\nimport EditIcon from '../../Assets/Icons/Edit';\r\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\r\nimport ShareIcon from '../../Assets/Icons/Share';\r\nimport StopIcon from '../../Assets/Icons/Stop';\r\nimport PinIcon from '../../Assets/Icons/Pin2';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\r\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\r\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\r\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\r\nimport { copy } from '../../Utils/Text';\r\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\r\nimport { saveBlob } from '../../Utils/File';\r\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessageMenu.css';\r\n\r\nclass MessageMenu extends React.PureComponent {\r\n    state = {\r\n        confirmStopPoll: false\r\n    };\r\n\r\n    handleConfirmStopPoll = event => {\r\n        const { dialog } = this.state;\r\n        if (dialog) return;\r\n\r\n        this.setState({\r\n            confirmStopPoll: true,\r\n            contextMenu: false\r\n        });\r\n    };\r\n\r\n    handleCloseConfirm = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ confirmStopPoll: false });\r\n    };\r\n\r\n    handleStopPoll = event => {\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n        const { confirmStopPoll } = this.state;\r\n\r\n        if (confirmStopPoll) {\r\n            this.setState({ confirmStopPoll: false });\r\n        }\r\n\r\n        stopPoll(chatId, messageId);\r\n    };\r\n\r\n    handleUnvote = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        cancelPollAnswer(chatId, messageId);\r\n    };\r\n\r\n    handleCopyLink = event => {\r\n        const { onClose, copyLink, t } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        if (!copyLink) return;\r\n\r\n        copy(copyLink);\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleCopyPublicMessageLink = async event => {\r\n        const { onClose, chatId, messageId, t } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        const httpUrl = await TdLibController.send({\r\n            '@type': 'getMessageLink',\r\n            chat_id: chatId,\r\n            message_id: messageId,\r\n            for_album: false,\r\n            for_comment: false\r\n        });\r\n\r\n        if (!httpUrl) return;\r\n        const { link: copyLink } = httpUrl;\r\n\r\n        if (!copyLink) return;\r\n\r\n        copy(copyLink);\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => {\r\n                        closeSnackbar(snackKey);\r\n                    }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleReply = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n        replyMessage(chatId, messageId);\r\n    };\r\n\r\n    handlePin = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n\r\n        if (isMessagePinned(chatId, messageId)) {\r\n            requestUnpinMessage(chatId, messageId);\r\n        } else {\r\n            requestPinMessage(chatId, messageId);\r\n        }\r\n    };\r\n\r\n    handleForward = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        forwardMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleEdit = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n        editMessage(chatId, messageId);\r\n    };\r\n\r\n    handleSelect = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n        onClose(event);\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        deleteMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleDownload = event => {\r\n        const { chatId, messageId } = this.props;\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        const { sticker } = content;\r\n        if (!sticker) return;\r\n\r\n        const { sticker: file } = sticker;\r\n        if (!file) return;\r\n\r\n        const blob = FileStore.getBlob(file.id);\r\n        if (!blob) return;\r\n\r\n        saveBlob(blob, 'sticker.tgs');\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\r\n        const { confirmStopPoll } = this.state;\r\n        if (!confirmStopPoll && !open) return null;\r\n\r\n        const isPinned = isMessagePinned(chatId, messageId);\r\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\r\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\r\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\r\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\r\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\r\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\r\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\r\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\r\n        const canCopyLink = Boolean(copyLink);\r\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\r\n\r\n        const hasItems =\r\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\r\n        if (!hasItems) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Popover\r\n                    open={true}\r\n                    onClose={onClose}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={anchorPosition}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\r\n                        {/*    <ListItemIcon>*/}\r\n                        {/*        <CopyIcon />*/}\r\n                        {/*    </ListItemIcon>*/}\r\n                        {/*    <ListItemText primary={t('Download')} />*/}\r\n                        {/*</MenuItem>*/}\r\n                        {canBeSelected && (\r\n                            <MenuItem onClick={this.handleSelect}>\r\n                                <ListItemIcon>\r\n                                    <FrameCheckIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Select')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canCopyPublicMessageLink && (\r\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\r\n                                <ListItemIcon>\r\n                                    <CopyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('CopyMessageLink')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canCopyLink && (\r\n                            <MenuItem onClick={this.handleCopyLink}>\r\n                                <ListItemIcon>\r\n                                    <CopyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('CopyLink')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeReplied && (\r\n                            <MenuItem onClick={this.handleReply}>\r\n                                <ListItemIcon>\r\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Reply')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBePinned && (\r\n                            <MenuItem onClick={this.handlePin}>\r\n                                {isPinned ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnpinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('UnpinMessage')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <PinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('PinMessage')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeForwarded && (\r\n                            <MenuItem onClick={this.handleForward}>\r\n                                <ListItemIcon>\r\n                                    <ShareIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Forward')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeEdited && (\r\n                            <MenuItem onClick={this.handleEdit}>\r\n                                <ListItemIcon>\r\n                                    <EditIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Edit')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeDeleted && (\r\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\r\n                                <ListItemIcon>\r\n                                    <DeleteIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Delete')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeUnvoted && (\r\n                            <MenuItem onClick={this.handleUnvote}>\r\n                                <ListItemIcon>\r\n                                    <RemoveCheckIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Unvote')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeClosed && (\r\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\r\n                                <ListItemIcon>\r\n                                    <StopIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('StopPoll')} />\r\n                            </MenuItem>\r\n                        )}\r\n                    </MenuList>\r\n                </Popover>\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={confirmStopPoll}\r\n                    onClose={this.handleCloseConfirm}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleStopPoll} color='primary'>\r\n                            {t('Stop')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nMessageMenu.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    anchorPosition: PropTypes.object,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    copyLink: PropTypes.string\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(MessageMenu);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\r\n    'PinFilled'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PinIcon from '../../Assets/Icons/PinFilled';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Status from './Status';\r\nimport { albumHistoryEquals } from '../../Utils/Common';\r\nimport { getDate, getDateHint, getViews, isCallMessage } from '../../Utils/Message';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Meta.css';\r\n\r\nclass Meta extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId, messageIds } = props;\r\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\r\n\r\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\r\n\r\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\r\n            const id = ids[ids.length - 1];\r\n\r\n            const message = MessageStore.get(chatId, id);\r\n            if (!message) return null;\r\n\r\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                prevMessageIds: messageIds,\r\n\r\n                message,\r\n                date,\r\n                editDate,\r\n                interactionInfo,\r\n                isOutgoing,\r\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId, messageIds } = this.props;\r\n\r\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!ids.some(x => x === message_id)) return;\r\n\r\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\r\n    };\r\n\r\n    onUpdateMessageEdited = update => {\r\n        const { chat_id, message_id, edit_date: editDate } = update;\r\n        const { message } = this.state;\r\n\r\n        if (!message) return;\r\n        if (message.chat_id !== chat_id) return;\r\n        if (message.id !== message_id) return;\r\n\r\n        this.setState({ editDate });\r\n    };\r\n\r\n    onUpdateMessageInteractionInfo = update => {\r\n        const { chat_id, message_id, interaction_info } = update;\r\n        const { message } = this.state;\r\n\r\n        if (!message) return;\r\n        if (message.chat_id !== chat_id) return;\r\n        if (message.id !== message_id) return;\r\n\r\n        this.setState({ interactionInfo: interaction_info });\r\n    };\r\n\r\n    render() {\r\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\r\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\r\n\r\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\r\n\r\n        const dateStr = getDate(date);\r\n        const dateHintStr = getDateHint(date);\r\n        const viewsStr = getViews(views);\r\n\r\n        const isCall = isCallMessage(chatId, messageId);\r\n\r\n        return (\r\n            <div className={classNames('meta', className)} style={style}>\r\n                <span>&ensp;</span>\r\n                {views > 0 && (\r\n                    <>\r\n                        <VisibilityIcon className='meta-views-icon' />\r\n                        <span className='meta-views' title={views}>\r\n                            &nbsp;\r\n                            {viewsStr}\r\n                            &nbsp; &nbsp;\r\n                        </span>\r\n                    </>\r\n                )}\r\n                {isPinned && (\r\n                    <>\r\n                        <PinIcon className='meta-pin-icon' />\r\n                        <span>&nbsp;</span>\r\n                    </>\r\n                )}\r\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\r\n                <a onClick={onDateClick}>\r\n                    <span title={dateHintStr}>{dateStr}</span>\r\n                </a>\r\n                {isOutgoing && !isCall && <Status chatId={chatId} messageId={messageId} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMeta.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number),\r\n    onDateClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Meta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport Audio from '../Media/Audio';\r\nimport Document from '../Media/Document';\r\nimport MessageMenu from '../MessageMenu';\r\nimport Meta from '../Meta';\r\nimport Photo from '../Media/Photo';\r\nimport Video from '../Media/Video';\r\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './AlbumItem.css';\r\n\r\nclass AlbumItem extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false\r\n    };\r\n\r\n    getAlbumItem = (message, displaySize) => {\r\n        const { chat_id, id, content } = message;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageAudio': {\r\n                const inlineMeta = (\r\n                    <Meta\r\n                        className='meta-hidden'\r\n                        key={`${chat_id}_${id}_meta`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                    />\r\n                );\r\n\r\n                const webPage = getWebPage(message);\r\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\r\n\r\n                return (\r\n                    <>\r\n                        <Audio\r\n                            type='message'\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            audio={content.audio}\r\n                            displaySize={displaySize}\r\n                            style={{ width: '100%', height: '100%' }}\r\n                            openMedia={this.openMedia}/>\r\n                        { text && text.length > 0 && (\r\n                            <div className={'message-text'}>\r\n                                {text}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            }\r\n            case 'messagePhoto': {\r\n                return (\r\n                    <Photo\r\n                        type='message'\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        photo={content.photo}\r\n                        displaySize={displaySize}\r\n                        style={{ width: '100%', height: '100%' }}\r\n                        openMedia={this.openMedia}/>\r\n                    );\r\n            }\r\n            case 'messageVideo': {\r\n                return (\r\n                    <Video\r\n                        type='message'\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        video={content.video}\r\n                        displaySize={displaySize}\r\n                        style={{ width: '100%', height: '100%' }}\r\n                        openMedia={this.openMedia}/>\r\n                );\r\n            }\r\n            case 'messageDocument': {\r\n                const inlineMeta = (\r\n                    <Meta\r\n                        className='meta-hidden'\r\n                        key={`${chat_id}_${id}_meta`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                    />\r\n                );\r\n\r\n                const webPage = getWebPage(message);\r\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\r\n\r\n                return (\r\n                    <>\r\n                        <Document\r\n                            type='message'\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            document={content.document}\r\n                            displaySize={displaySize}\r\n                            style={{ width: '100%', height: '100%' }}\r\n                            openMedia={this.openMedia}/>\r\n                        { text && text.length > 0 && (\r\n                            <div className={'message-text'}>\r\n                                {text}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { message } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { message } = this.props;\r\n        const { chat_id: chatId, id: messageId } = message;\r\n\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ selected, highlighted: false });\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (MessageStore.selectedItems.size > 0) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { message } = this.props;\r\n        if (!message) return;\r\n\r\n        const { chat_id, id } = message;\r\n\r\n        openMedia(chat_id, id);\r\n    };\r\n\r\n    handleSelection = event => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { message } = this.props;\r\n        const { chat_id: chatId, id: messageId } = message;\r\n\r\n        if (MessageStore.selectedItems.size === 0) return;\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { message, position, displaySize, source } = this.props;\r\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\r\n\r\n        const { chat_id, id } = message;\r\n\r\n        let style = {};\r\n        let className = 'album-document-item';\r\n        if (position) {\r\n            style = { width: position.width, height: position.height * displaySize };\r\n            className = 'album-item'\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\r\n                    onClick={this.handleSelection}\r\n                    onContextMenu={this.handleOpenContextMenu}\r\n                    style={style}>\r\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\r\n                    {(selected || highlighted) && (\r\n                        <div className='album-item-selection'>\r\n                            <div className='album-item-selection-mark'>\r\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={copyLink}\r\n                    source={source}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAlbumItem.propTypes = {\r\n    message: PropTypes.object,\r\n    position: PropTypes.object,\r\n    displaySize: PropTypes.number\r\n};\r\n\r\nexport default AlbumItem;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport './DayMeta.css';\r\n\r\nclass DayMeta extends React.Component {\r\n    componentDidMount() {\r\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\r\n    }\r\n\r\n    onClientUpdateLanguage = () => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { date, i18n } = this.props;\r\n\r\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\r\n        const options = showYear\r\n            ? {\r\n                  day: 'numeric',\r\n                  month: 'long',\r\n                  year: 'numeric'\r\n              }\r\n            : {\r\n                  day: 'numeric',\r\n                  month: 'long'\r\n              };\r\n\r\n        return (\r\n            <div className='day-meta'>\r\n                <div className='day-meta-wrapper'>\r\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDayMeta.propTypes = {\r\n    date: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(DayMeta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\r\nimport { openUser, openChat } from '../../Actions/Client';\r\nimport './Forward.css';\r\n\r\nclass Forward extends React.Component {\r\n    state = {\r\n        arrowRef: null\r\n    };\r\n\r\n    handleArrowRef = node => {\r\n        this.setState({\r\n            arrowRef: node\r\n        });\r\n    };\r\n\r\n    openForward = event => {\r\n        event.stopPropagation();\r\n\r\n        const { forwardInfo } = this.props;\r\n        if (!forwardInfo) return null;\r\n\r\n        const { origin } = forwardInfo;\r\n\r\n        switch (origin['@type']) {\r\n            case 'messageForwardOriginUser': {\r\n                const { sender_user_id } = origin;\r\n\r\n                openUser(sender_user_id, true);\r\n                break;\r\n            }\r\n            case 'messageForwardOriginHiddenUser': {\r\n                break;\r\n            }\r\n            case 'messageForwardOriginChannel': {\r\n                const { chat_id, message_id } = origin;\r\n\r\n                openChat(chat_id, message_id);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, forwardInfo } = this.props;\r\n        const { arrowRef } = this.state;\r\n\r\n        const title = getForwardTitle(forwardInfo, t);\r\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\r\n            <>\r\n                {t('HidAccount')}\r\n                <span className='forward-arrow' ref={this.handleArrowRef} />\r\n            </>\r\n        ) : (\r\n            ''\r\n        );\r\n\r\n        return (\r\n            <div className={classNames('message-author', 'forward')}>\r\n                <div>{t('ForwardedMessage')}</div>\r\n                <div className='forward-subtitle'>\r\n                    {t('From') + ' '}\r\n                    {/*<Tooltip*/}\r\n                    {/*    title={tooltip}*/}\r\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\r\n                    {/*    PopperProps={{*/}\r\n                    {/*        popperOptions: {*/}\r\n                    {/*            modifiers: {*/}\r\n                    {/*                arrow: {*/}\r\n                    {/*                    enabled: Boolean(arrowRef),*/}\r\n                    {/*                    element: arrowRef*/}\r\n                    {/*                }*/}\r\n                    {/*            }*/}\r\n                    {/*        }*/}\r\n                    {/*    }}*/}\r\n                    {/*    placement='top'>*/}\r\n                        <a onClick={this.openForward}>{title}</a>\r\n                    {/*</Tooltip>*/}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForward.propTypes = {\r\n    forwardInfo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(Forward);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\r\n\r\nconst POSITION_FLAG_LEFT = 1;\r\nconst POSITION_FLAG_RIGHT = 2;\r\nconst POSITION_FLAG_TOP = 4;\r\nconst POSITION_FLAG_BOTTOM = 8;\r\n\r\nclass MessageGroupedLayoutAttempt {\r\n    constructor(lineCounts, heights) {\r\n        this.lineCounts = lineCounts;\r\n        this.heights = heights;\r\n    }\r\n}\r\n\r\nclass GroupedMessagePosition {\r\n    aspectRatio;\r\n    isEdge;\r\n    flags;\r\n    isLast;\r\n    leftSpanOffset;\r\n    minX;\r\n    maxX;\r\n    minY;\r\n    maxY;\r\n    height;\r\n    width;\r\n    siblingHeights;\r\n    spanSize;\r\n\r\n    set(minX, maxX, minY, maxY, w, h, flags) {\r\n        this.minX = minX;\r\n        this.maxX = maxX;\r\n        this.minY = minY;\r\n        this.maxY = maxY;\r\n        this.spanSize = w;\r\n        this.width = w;\r\n        this.height = h;\r\n        this.flags = flags;\r\n    }\r\n\r\n    getInfo() {\r\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\r\n    }\r\n}\r\n\r\nclass GroupedMessages {\r\n\r\n    constructor() {\r\n        this.posArray = [];\r\n        this.positions = new Map();\r\n        this.maxSizeWidth = 800;\r\n        this.hasSibling = false;\r\n        this.scale = 1.0;\r\n    }\r\n\r\n    multiHeight(array, start, end) {\r\n        let sum = 0.0;\r\n        for (let i = start; i < end; i++) {\r\n            sum += array[i];\r\n        }\r\n\r\n        return 800.0 * this.scale / sum;\r\n    }\r\n\r\n    calculate(messages, desiredWidth) {\r\n        this.posArray = [];\r\n        this.positions = new Map();\r\n        this.messages = messages;\r\n\r\n        if (!messages) return;\r\n        const { length } = messages;\r\n        if (length <= 1) {\r\n            return;\r\n        }\r\n\r\n        this.totalWidth = 0;\r\n        this.totalHeight = 0.0;\r\n\r\n        this.scale = desiredWidth / this.maxSizeWidth;\r\n        this.maxSizeWidth = desiredWidth;\r\n\r\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\r\n        const minHeight = Math.trunc(120 * this.scale);\r\n        const minWidth = Math.trunc(96 * this.scale);\r\n        const paddingsWidth = Math.trunc(32 * this.scale);\r\n        const maxSizeHeight = 814.0 * this.scale;\r\n        let averageAspectRatio = 1.0;\r\n        let proportions = '';\r\n        const isOut = false;\r\n        let maxX = 0;\r\n        let forceCalc = false;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            const message = messages[i];\r\n            const { w, h } = GroupedMessages.getWidthHeight(message);\r\n\r\n            const position = new GroupedMessagePosition();\r\n            position.isLast = i === messages.length - 1;\r\n            position.aspectRatio = w / h;\r\n            if (position.aspectRatio > 1.2) {\r\n                proportions += 'w';\r\n            } else if (position.aspectRatio < 0.8) {\r\n                proportions += 'n';\r\n            } else {\r\n                proportions += 'q';\r\n            }\r\n\r\n            averageAspectRatio += position.aspectRatio;\r\n            if (position.aspectRatio > 2.0) {\r\n                forceCalc = true;\r\n            }\r\n\r\n            this.positions.set(message, position);\r\n            this.posArray.push(position);\r\n        }\r\n\r\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\r\n        averageAspectRatio = averageAspectRatio / length;\r\n\r\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\r\n            switch (length) {\r\n                case 2: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n\r\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\r\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = height * 2;\r\n                    } else if (proportions === 'ww' || proportions === 'qq') {\r\n                        const width = this.maxSizeWidth / 2;\r\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = width + width;\r\n                        this.totalHeight = height;\r\n                    } else {\r\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\r\n                        let firstWidth = this.maxSizeWidth - secondWidth;\r\n                        if (firstWidth < minWidth) {\r\n                            const diff = minWidth - firstWidth;\r\n                            firstWidth = minWidth;\r\n                            secondWidth -= diff;\r\n                        }\r\n\r\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = firstWidth + secondWidth;\r\n                        this.totalHeight = height;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 3: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n                    const position3 = this.posArray[2];\r\n                    if (proportions[0] === 'n')\r\n                    {\r\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\r\n                        const secondHeight = maxSizeHeight - thirdHeight;\r\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\r\n\r\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\r\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        position3.spanSize = this.maxSizeWidth;\r\n\r\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\r\n\r\n                        if (isOut) {\r\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\r\n                        } else {\r\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\r\n                            position3.leftSpanOffset = leftWidth;\r\n                        }\r\n                        this.hasSibling = true;\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = leftWidth + rightWidth;\r\n                        this.totalHeight = 1.0;\r\n                    }\r\n                    else\r\n                    {\r\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\r\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n\r\n                        const width = this.maxSizeWidth / 2;\r\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\r\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\r\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = firstHeight + secondHeight;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 4: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n                    const position3 = this.posArray[2];\r\n                    const position4 = this.posArray[3];\r\n                    if (proportions[0] === 'w') {\r\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\r\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n\r\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\r\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\r\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\r\n                        const w1 = this.maxSizeWidth - w0 - w2;\r\n                        h = Math.min(maxSizeHeight - h0, h);\r\n                        h /= maxSizeHeight;\r\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\r\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\r\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        maxX = 2;\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = h0 + h;\r\n                    } else {\r\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\r\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\r\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\r\n                        const h2 = 1.0 - h0 - h1;\r\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\r\n\r\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\r\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\r\n                        position3.spanSize = this.maxSizeWidth;\r\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        position4.spanSize = this.maxSizeWidth;\r\n\r\n                        if (isOut) {\r\n                            position1.spanSize = this.maxSizeWidth - w;\r\n                        } else {\r\n                            position2.spanSize = this.maxSizeWidth - w0;\r\n                            position3.leftSpanOffset = w0;\r\n                            position4.leftSpanOffset = w0;\r\n                        }\r\n                        position1.siblingHeights = [ h0, h1, h2 ];\r\n                        this.hasSibling = true;\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = w + w0;\r\n                        this.totalHeight = h0 + h1 + h2;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            const croppedRatios = new Array(this.posArray.length);\r\n            for (let i = 0; i < length; i++) {\r\n                if (averageAspectRatio > 1.1) {\r\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\r\n                } else {\r\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\r\n                }\r\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\r\n            }\r\n\r\n            let firstLine;\r\n            let secondLine;\r\n            let thirdLine;\r\n            let fourthLine;\r\n            const attempts = [];\r\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\r\n                secondLine = croppedRatios.length - firstLine;\r\n                if (firstLine > 3 || secondLine > 3) {\r\n                    continue;\r\n                }\r\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\r\n            }\r\n\r\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\r\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\r\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\r\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\r\n                        continue;\r\n                    }\r\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\r\n                }\r\n            }\r\n\r\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\r\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\r\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\r\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\r\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\r\n                            continue;\r\n                        }\r\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\r\n                    }\r\n                }\r\n            }\r\n\r\n            let optimal = null;\r\n            let optimalDiff = 0.0;\r\n            let maxHeight = this.maxSizeWidth / 3 * 4;\r\n            for (let i = 0; i < attempts.length; i++) {\r\n                const attempt = attempts[i];\r\n                let height = 0;\r\n                let minLineHeight = Number.MAX_VALUE;\r\n                for (let j = 0; j < attempt.heights.length; j++) {\r\n                    height += attempt.heights[j];\r\n                    if (attempt.heights[j] < minLineHeight) {\r\n                        minLineHeight = attempt.heights[j];\r\n                    }\r\n                }\r\n\r\n                let diff = Math.abs(height - maxHeight);\r\n                if (attempt.lineCounts.length > 1) {\r\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\r\n                        diff *= 1.5;\r\n                    }\r\n                }\r\n\r\n                if (minLineHeight < minWidth) {\r\n                    diff *= 1.5;\r\n                }\r\n\r\n                if (optimal === null || diff < optimalDiff) {\r\n                    optimal = attempt;\r\n                    optimalDiff = diff;\r\n                }\r\n            }\r\n\r\n            if (optimal === null) {\r\n                return;\r\n            }\r\n\r\n            let index = 0;\r\n            let y = 0.0;\r\n\r\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\r\n                let c = optimal.lineCounts[i];\r\n                let lineHeight = optimal.heights[i];\r\n                let spanLeft = this.maxSizeWidth;\r\n                let posToFix = null;\r\n                maxX = Math.max(maxX, c - 1);\r\n                for (let j = 0; j < c; j++) {\r\n                    let ratio = croppedRatios[index];\r\n                    let width = Math.trunc(ratio * lineHeight);\r\n                    spanLeft -= width;\r\n                    let pos = this.posArray[index];\r\n                    let flags = 0;\r\n                    if (i === 0) {\r\n                        flags |= POSITION_FLAG_TOP;\r\n                    }\r\n                    if (i === optimal.lineCounts.length - 1) {\r\n                        flags |= POSITION_FLAG_BOTTOM;\r\n                    }\r\n                    if (j === 0) {\r\n                        flags |= POSITION_FLAG_LEFT;\r\n                        if (isOut) {\r\n                            posToFix = pos;\r\n                        }\r\n                    }\r\n                    if (j === c - 1) {\r\n                        flags |= POSITION_FLAG_RIGHT;\r\n                        if (!isOut) {\r\n                            posToFix = pos;\r\n                        }\r\n                    }\r\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\r\n                    index++;\r\n                }\r\n                posToFix.width += spanLeft;\r\n                posToFix.spanSize += spanLeft;\r\n                y += lineHeight;\r\n            }\r\n\r\n            this.totalWidth = this.maxSizeWidth;\r\n            this.totalHeight = y / maxSizeHeight;\r\n        }\r\n    }\r\n\r\n    static getWidthHeight(message) {\r\n        let w = 0;\r\n        let h = 0;\r\n        let sizes = [];\r\n        switch (message.content['@type']){\r\n            case 'messagePhoto': {\r\n                const { photo, minithumbnail } = message.content;\r\n                if (photo) {\r\n                    sizes = photo.sizes;\r\n                } else if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video, thumbnail, minithumbnail } = message.content;\r\n                if (video) {\r\n                    const { width, height } = video;\r\n                    sizes.push({ width, height });\r\n                } else if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                } else if (thumbnail) {\r\n                    sizes.push(thumbnail);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { thumbnail, minithumbnail } = message.content;\r\n                if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                } else if (thumbnail) {\r\n                    sizes.push(thumbnail);\r\n                } else {\r\n                    sizes.push({ width: 90, height: 90 });\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\r\n        if (photoSize) {\r\n            w = photoSize.width;\r\n            h = photoSize.height;\r\n        }\r\n\r\n        return { w, h };\r\n    }\r\n\r\n    static getPhotoSize(sizes, side, byMinSize) {\r\n        if (!sizes || !sizes.length) return null;\r\n\r\n        let lastSide = 0;\r\n        let lastSize = null;\r\n        for (let i = 0; i < sizes.length; i++) {\r\n            const { width: w, height: h } = sizes[i];\r\n\r\n            if (byMinSize) {\r\n                const currentSide = h >= w ? w : h;\r\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\r\n                    lastSide = currentSide;\r\n                    lastSize = sizes[i];\r\n                }\r\n\r\n            } else {\r\n                const currentSide = w >= h ? w : h;\r\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\r\n                    lastSide = currentSide;\r\n                    lastSize = sizes[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return lastSize;\r\n    }\r\n}\r\n\r\nexport default GroupedMessages;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport './UnreadSeparator.css';\r\n\r\nfunction UnreadSeparator(props) {\r\n    const { t } = props;\r\n\r\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\r\n}\r\n\r\nexport default withTranslation()(UnreadSeparator);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './EmptyTile.css';\r\n\r\nfunction EmptyTile(props) {\r\n    const { dialog, small, big, style } = props;\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                'chat-tile',\r\n                { 'tile-dialog': dialog },\r\n                { 'tile-small': small },\r\n                { 'tile-big': big }\r\n            )}\r\n            style={style}/>\r\n    );\r\n}\r\n\r\nEmptyTile.propTypes = {};\r\n\r\nexport default EmptyTile;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport AlbumItem from './AlbumItem';\r\nimport DayMeta from '../DayMeta';\r\nimport Forward from '../Forward';\r\nimport GroupedMessages from './GroupedMessages';\r\nimport UnreadSeparator from '../UnreadSeparator';\r\nimport MessageAuthor from '../MessageAuthor';\r\nimport Reply from '../Reply';\r\nimport Meta from '../Meta';\r\nimport ChatTile from '../../Tile/ChatTile';\r\nimport EmptyTile from '../../Tile/EmptyTile';\r\nimport UserTile from '../../Tile/UserTile';\r\nimport { albumHistoryEquals } from '../../../Utils/Common';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\r\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\r\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './Album.css';\r\n\r\nclass Album extends React.Component {\r\n    state = { };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { messageIds } = this.props;\r\n        const { emojiMatches, selected, highlighted } = this.state;\r\n\r\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { displaySize, chatId, messageIds } = props;\r\n\r\n        if (messageIds !== state.prevMessageIds) {\r\n            const grouped = new GroupedMessages();\r\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\r\n\r\n            return {\r\n                grouped,\r\n                prevMessageIds: messageIds\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false, lastHighlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageIds, displaySize } = this.props;\r\n        const { emojiMatches: oldEmojiMatches } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (!messageIds.some(x => x === message_id)) return;\r\n\r\n        const grouped = new GroupedMessages();\r\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\r\n\r\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\r\n        if (emojiMatches !== oldEmojiMatches) {\r\n            this.setState({ emojiMatches, grouped });\r\n        } else {\r\n            this.setState({ grouped });\r\n        }\r\n    };\r\n\r\n    handleSelection = () => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        if (selected) {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], false);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], true);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showTail, source } = this.props;\r\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            highlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n        const { grouped } = this.state;\r\n        if (!grouped) {\r\n            return null;\r\n        }\r\n\r\n        if (!messageIds.length) {\r\n            return null;\r\n        }\r\n\r\n        let messageId = messageIds[messageIds.length - 1];\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender_id } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n            />\r\n        );\r\n        const webPage = getWebPage(message);\r\n        let text = null;\r\n        for (let i = 0; i < messageIds.length; i++) {\r\n            const m = MessageStore.get(chatId, messageIds[i]);\r\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\r\n            if (t && t.length) {\r\n                if (text !== null) {\r\n                    text = null;\r\n                    break;\r\n                } else {\r\n                    text = t;\r\n                    messageId = messageIds[i];\r\n                }\r\n            }\r\n        }\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': !hasCaption\r\n                })}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender_id.user_id) {\r\n                tile = <UserTile small userId={sender_id.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = { width: grouped.totalWidth - 2 - 2 };\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\r\n\r\n        const items = grouped.messages.map(x => (\r\n            <AlbumItem\r\n                key={x.id}\r\n                message={x}\r\n                position={grouped.positions.get(x)}\r\n                displaySize={displaySize}\r\n                source={source}\r\n            />));\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', 'message-album', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        // 'message-highlighted': highlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div\r\n                                className={classNames(\r\n                                    'message-content', {\r\n                                    'message-bubble': withBubble,\r\n                                    'message-bubble-out': withBubble && isOutgoing\r\n                                })}\r\n                                style={style}>\r\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                    <div className='message-title'>\r\n                                        {showTitle && !showForward && (\r\n                                            <MessageAuthor sender={sender_id} forwardInfo={forward_info} openChat openUser />\r\n                                        )}\r\n                                        {showForward && <Forward forwardInfo={forward_info} />}\r\n                                    </div>\r\n                                )}\r\n                                {showReply && (\r\n                                    <Reply\r\n                                        chatId={chatId}\r\n                                        messageId={reply_to_message_id}\r\n                                        onClick={this.handleReplyClick}\r\n                                    />\r\n                                )}\r\n                                <div className={classNames(\r\n                                    'album',\r\n                                    { 'album-caption': hasCaption },\r\n                                    { 'album-title': hasTitle }\r\n                                    )}>\r\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\r\n                                        {items}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className={classNames('message-text', {\r\n                                        'message-text-1emoji': emojiMatches === 1,\r\n                                        'message-text-2emoji': emojiMatches === 2,\r\n                                        'message-text-3emoji': emojiMatches === 3\r\n                                    })}>\r\n                                    {text}\r\n                                </div>\r\n                                {withBubble && meta}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAlbum.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    displaySize: PropTypes.number,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n};\r\n\r\nAlbum.defaultProps = {\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showData: false\r\n};\r\n\r\nexport default Album;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport AlbumItem from './AlbumItem';\r\nimport DayMeta from '../DayMeta';\r\nimport Forward from '../Forward';\r\nimport UnreadSeparator from '../UnreadSeparator';\r\nimport MessageAuthor from '../MessageAuthor';\r\nimport Reply from '../Reply';\r\nimport Meta from '../Meta';\r\nimport ChatTile from '../../Tile/ChatTile';\r\nimport EmptyTile from '../../Tile/EmptyTile';\r\nimport UserTile from '../../Tile/UserTile';\r\nimport { albumHistoryEquals } from '../../../Utils/Common';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\r\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\r\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './DocumentAlbum.css';\r\n\r\nclass DocumentAlbum extends React.Component {\r\n    state = { };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { messageIds } = this.props;\r\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\r\n\r\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.lastSelected !== lastSelected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.lastHighlighted !== lastHighlighted) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { displaySize, chatId, messageIds } = props;\r\n\r\n        if (messageIds !== state.prevMessageIds) {\r\n\r\n            return {\r\n                prevMessageIds: messageIds\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false, lastHighlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            this.setState({\r\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\r\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        this.setState({ selected: false, lastSelected: false });\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageIds, displaySize } = this.props;\r\n        const { emojiMatches: oldEmojiMatches } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (!messageIds.some(x => x === message_id)) return;\r\n\r\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\r\n        if (emojiMatches !== oldEmojiMatches) {\r\n            this.setState({ emojiMatches });\r\n        } else {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelection = () => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        if (selected) {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], false);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], true);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showTail, source } = this.props;\r\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            lastSelected,\r\n            highlighted,\r\n            lastHighlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n\r\n        if (!messageIds.length) {\r\n            return null;\r\n        }\r\n\r\n        let messageId = messageIds[messageIds.length - 1];\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n            />\r\n        );\r\n        const webPage = getWebPage(message);\r\n        let text = null;\r\n        for (let i = 0; i < messageIds.length; i++) {\r\n            const m = MessageStore.get(chatId, messageIds[i]);\r\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\r\n            if (t && t.length) {\r\n                if (text !== null) {\r\n                    text = null;\r\n                    break;\r\n                } else {\r\n                    text = t;\r\n                    messageId = messageIds[i];\r\n                }\r\n            }\r\n        }\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': false\r\n                })}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender.user_id) {\r\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = {  };\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\r\n\r\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\r\n            <AlbumItem\r\n                key={m.id}\r\n                message={m}\r\n                position={null}\r\n                displaySize={displaySize}\r\n                source={source}\r\n            />));\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', 'message-album', 'message-document-album', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        'message-album-last-selected': lastSelected,\r\n                        // 'message-highlighted': highlighted && !selected,\r\n                        'message-album-last-highlighted': lastHighlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div\r\n                                className={classNames(\r\n                                    'message-content', {\r\n                                        'message-bubble': withBubble,\r\n                                        'message-bubble-out': withBubble && isOutgoing\r\n                                    })}\r\n                                style={style}>\r\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                    <div className='message-title'>\r\n                                        {showTitle && !showForward && (\r\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\r\n                                        )}\r\n                                        {showForward && <Forward forwardInfo={forward_info} />}\r\n                                    </div>\r\n                                )}\r\n                                {showReply && (\r\n                                    <Reply\r\n                                        chatId={chatId}\r\n                                        messageId={reply_to_message_id}\r\n                                        onClick={this.handleReplyClick}\r\n                                    />\r\n                                )}\r\n                                <div className={classNames(\r\n                                    'album',\r\n                                    'document-album',\r\n                                    { 'album-caption': false },\r\n                                    { 'album-title': hasTitle }\r\n                                )}>\r\n                                    <div className='album-wrapper'>\r\n                                        {items}\r\n                                    </div>\r\n                                </div>\r\n                                {/*<div*/}\r\n                                {/*    className={classNames('message-text', {*/}\r\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\r\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\r\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\r\n                                {/*    })}>*/}\r\n                                {/*    {text}*/}\r\n                                {/*</div>*/}\r\n                                {withBubble && meta}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDocumentAlbum.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    displaySize: PropTypes.number,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n};\r\n\r\nDocumentAlbum.defaultProps = {\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showData: false\r\n};\r\n\r\nexport default DocumentAlbum;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './FilesDropTarget.css';\r\n\r\nclass FilesDropTarget extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { dragParams } = AppStore;\r\n\r\n        this.state = { dragParams };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    onClientUpdateDragging = update => {\r\n        const { dragParams } = AppStore;\r\n\r\n        this.setState({ dragParams });\r\n    };\r\n\r\n    handleDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleDrop = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: false\r\n        });\r\n\r\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\r\n    };\r\n\r\n    handleDragLeave = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: false\r\n        });\r\n    };\r\n\r\n    handleAttachDocumentComplete = files => {\r\n        if (files.length === 0) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSendFiles',\r\n            files\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { dragParams } = this.state;\r\n        if (!dragParams) return null;\r\n\r\n        return (\r\n            <div\r\n                className='files-drop-target'\r\n                onDragEnter={this.handleDragEnter}\r\n                onDragLeave={this.handleDragLeave}\r\n                onDrop={this.handleDrop}>\r\n                <div className='files-drop-target-wrapper'>\r\n                    <div className='files-drop-target-text'>\r\n                        <div className='files-drop-target-title'>Drop files here</div>\r\n                        <div className='files-drop-target-subtitle'>to send them</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilesDropTarget;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './GroupCallJoinPanelSubtitle.css';\r\n\r\nclass GroupCallJoinPanelSubtitle extends React.Component {\r\n    state = {\r\n        participantCount: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { participantCount } = this.state;\r\n\r\n        if (nextState.participantCount !== participantCount) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { groupCallId } = props;\r\n        const { prevGroupCallId } = state;\r\n\r\n        if (prevGroupCallId !== groupCallId) {\r\n            let participantCount = 0;\r\n            const groupCall = CallStore.get(groupCallId);\r\n            if (groupCall) {\r\n                const { participant_count } = groupCall;\r\n                participantCount = participant_count;\r\n            }\r\n\r\n            return {\r\n                prevGroupCallId: groupCallId,\r\n                participantCount\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { groupCallId } = this.props;\r\n        const { group_call } = update;\r\n\r\n        if (group_call && group_call.id !== groupCallId) return;\r\n\r\n        let participantCount = 0;\r\n        const groupCall = CallStore.get(groupCallId);\r\n        if (groupCall) {\r\n            const { participant_count } = groupCall;\r\n            participantCount = participant_count;\r\n        }\r\n\r\n        this.setState({ participantCount });\r\n    };\r\n\r\n    render() {\r\n        const { t, participantsOnly } = this.props;\r\n        const { participantCount } = this.state;\r\n        // console.log('[call][GroupCallPanelSubtitle] render');\r\n\r\n        return (\r\n            <div className='group-call-join-panel-subtitle'>\r\n                {participantCount === 0 && !participantsOnly? t('MembersTalkingNobody') : LStore.formatPluralString('Participants', participantCount)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nGroupCallJoinPanelSubtitle.propTypes = {\r\n    groupCallId: PropTypes.number,\r\n    participantsOnly: PropTypes.bool\r\n};\r\n\r\nGroupCallJoinPanelSubtitle.defaultProps = {\r\n    participantsOnly: false\r\n}\r\n\r\nexport default withTranslation()(GroupCallJoinPanelSubtitle);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport UserTile from '../Tile/UserTile';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './GroupCallRecentParticipants.css';\r\n\r\nfunction speakersEquals(lhs, rhs) {\r\n    if (lhs.length !== rhs.length) return false;\r\n\r\n    for (let i = 0; i < lhs.length; i++) {\r\n        if (lhs[i].user_id !== rhs[i].user_id) return false;\r\n        if (lhs[i].is_speaking !== rhs[i].is_speaking) return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nclass GroupCallRecentParticipants extends React.Component {\r\n    state = {\r\n        speakers: []\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { speakers } = this.state;\r\n\r\n        if (!speakersEquals(nextState.speakers, speakers)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { id } = props;\r\n        const { prevId } = state;\r\n\r\n        if (prevId !== id) {\r\n            let speakers = [];\r\n            const groupCall = CallStore.get(id);\r\n            if (groupCall) {\r\n                const { recent_speakers } = groupCall;\r\n                speakers = recent_speakers;\r\n            }\r\n\r\n            return {\r\n                prevId: id,\r\n                speakers\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    loadContent(speakers) {\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, speakers.map(x => x.user_id));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent(this.state.speakers);\r\n\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { id } = this.props;\r\n        const { group_call } = update;\r\n\r\n        if (group_call && group_call.id !== id) return;\r\n\r\n        let speakers = [];\r\n        const groupCall = CallStore.get(id);\r\n        if (groupCall) {\r\n            const { recent_speakers } = groupCall;\r\n            speakers = recent_speakers;\r\n        }\r\n\r\n        clearTimeout(this.timeout);\r\n        if (!speakers.length) {\r\n            this.setState({ speakers: [] });\r\n        } else {\r\n            this.loadContent(speakers);\r\n\r\n            this.timeout = setTimeout(() => {\r\n                this.updateSpeakers();\r\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\r\n        }\r\n    };\r\n\r\n    updateSpeakers() {\r\n        const { id } = this.props;\r\n\r\n        let speakers = [];\r\n        const groupCall = CallStore.get(id);\r\n        if (groupCall) {\r\n            const { recent_speakers } = groupCall;\r\n            speakers = recent_speakers;\r\n        }\r\n\r\n        this.setState({ speakers });\r\n    }\r\n\r\n    render() {\r\n        const { speakers } = this.state;\r\n        if (!speakers) return null;\r\n        if (!speakers.length) return null;\r\n\r\n        return (\r\n            <div className='group-call-recent-participants'>\r\n                {[...speakers].reverse().map(x => <UserTile key={x.user_id} userId={x.user_id} small speaking={x.is_speaking}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallRecentParticipants.propTypes = {\r\n    id: PropTypes.number\r\n};\r\n\r\nexport default GroupCallRecentParticipants;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport GroupCallJoinPanelSubtitle from './GroupCallJoinPanelSubtitle';\r\nimport GroupCallRecentParticipants from './GroupCallRecentParticipants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './GroupCallJoinPanel.css';\r\n\r\nclass GroupCallJoinPanel extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n        const { prevChatId } = state;\r\n\r\n        if (prevChatId !== chatId) {\r\n            const chat = ChatStore.get(chatId);\r\n\r\n            let groupCallId = 0;\r\n            if (chat) {\r\n                const { voice_chat_group_call_id } = chat;\r\n                groupCallId = voice_chat_group_call_id;\r\n            }\r\n\r\n            const { currentGroupCall } = CallStore;\r\n            const isCurrent = Boolean(currentGroupCall && currentGroupCall.chatId === chatId);\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                groupCallId,\r\n                isCurrent\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.props;\r\n        const { isCurrent, groupCallId } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.groupCallId !== groupCallId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isCurrent !== isCurrent) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        CallStore.on('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\r\n        CallStore.on('updateGroupCall', this.handleUpdateGroupCall);\r\n        ChatStore.on('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\r\n        CallStore.off('updateGroupCall', this.handleUpdateGroupCall);\r\n        ChatStore.off('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\r\n    }\r\n\r\n    handleUpdateChatVoiceChat = update => {\r\n        const { chat_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if ( chatId !== chat_id) return;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { voice_chat_group_call_id } = chat;\r\n\r\n        this.setState({\r\n            groupCallId: voice_chat_group_call_id\r\n        });\r\n    }\r\n\r\n    handleUpdateGroupCall = update => {\r\n        const { group_call } = update;\r\n\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { voice_chat_group_call_id } = chat;\r\n        if (group_call && group_call.id !== voice_chat_group_call_id) return;\r\n\r\n        this.setState({\r\n            groupCallId: group_call ? group_call.id : 0\r\n        });\r\n    };\r\n\r\n    handleClientUpdateGroupCall = update => {\r\n        const { chatId } = this.props;\r\n\r\n        const { currentGroupCall } = CallStore;\r\n        const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\r\n\r\n        this.setState({ isCurrent });\r\n    };\r\n\r\n    handleJoin = async () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { voice_chat_group_call_id } = chat;\r\n        const groupCall = CallStore.get(voice_chat_group_call_id);\r\n        console.log('[call] handleJoin', groupCall);\r\n        if (groupCall && groupCall.is_joined) return;\r\n\r\n        const muted = true;\r\n        await CallStore.joinGroupCall(chatId, voice_chat_group_call_id, muted);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        if (!chatId) return null;\r\n\r\n        const { groupCallId, isCurrent } = this.state;\r\n        if (!groupCallId) return null;\r\n        if (isCurrent) return null;\r\n\r\n        return (\r\n            <div className='group-call-join-panel' onClick={this.handleJoin}>\r\n                <div className='group-call-join-panel-content'>\r\n                    <div className='group-call-join-panel-title'>{t('VoipGroupVoiceChat')}</div>\r\n                    <GroupCallJoinPanelSubtitle groupCallId={groupCallId}/>\r\n                </div>\r\n                <GroupCallRecentParticipants id={groupCallId}/>\r\n                <Button className='group-call-join-panel-button' variant='contained' color='primary' disableElevation>\r\n                    {t('VoipChatJoin')}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallJoinPanel.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(GroupCallJoinPanel);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getDisplayName } from '../../Utils/HOC';\r\n\r\nconst MessageContext = React.createContext({\r\n    chatId: 0,\r\n    messageId: 0\r\n});\r\n\r\nexport default MessageContext;\r\n\r\nexport function withMessage(Component) {\r\n    class MessageComponent extends React.Component {\r\n        render() {\r\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\r\n        }\r\n    }\r\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\r\n\r\n    return MessageComponent;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ListItem } from '@material-ui/core';\r\nimport User from '../Tile/User';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './InputBoxHints.css'\r\n\r\nclass InputBoxHints extends React.Component {\r\n    state = {\r\n        local: [],\r\n        global: [],\r\n        id: null\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { local, global, id } = this.state;\r\n\r\n        if (nextState.local !== local) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.global !== global) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.id !== id) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\r\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\r\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\r\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\r\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\r\n    }\r\n\r\n    onClientUpdateHintsClose = update => {\r\n        this.setState({\r\n            id: null,\r\n            local: [],\r\n            global: []\r\n        });\r\n    };\r\n\r\n    onClientUpdateHintsGlobal = update => {\r\n        const { id, global } = update;\r\n        if (this.state.id !== id) return;\r\n\r\n        this.setState({\r\n            id,\r\n            global\r\n        });\r\n    };\r\n\r\n    onClientUpdateHintsLocal = update => {\r\n        const { id, local } = update;\r\n\r\n        this.setState({\r\n            id,\r\n            local,\r\n            global: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { local, global } = this.state;\r\n\r\n        const results = (local || []).concat(global || []);\r\n\r\n        // console.log('[hints] render', local, global, results);\r\n        if (!results.length) return null;\r\n\r\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\r\n\r\n        return (\r\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\r\n                {controls}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nInputBoxHints.propTypes = {};\r\n\r\nexport default InputBoxHints;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\r\n    'ArrowTopRight'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\r\n    'ShareFilled'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withMessage } from '../MessageContext';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport PendingIcon from '../../../Assets/Icons/Pending';\r\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\r\nimport { getUserFullName } from '../../../Utils/User';\r\nimport { getChatTitle } from '../../../Utils/Chat';\r\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\r\nimport { openChatSelect } from '../../../Actions/Message';\r\nimport LStore from '../../../Stores/LocalizationStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './KeyboardButton.css';\r\n\r\nclass KeyboardButton extends React.Component {\r\n    state = {\r\n        loading: false\r\n    }\r\n\r\n    handleCallbackQueryAnswer = (type, result, message) => {\r\n        const { chatId } = this.props;\r\n        const { sender_id, content, via_bot_user_id } = message;\r\n        const { text, show_alert, url } = result;\r\n        const { game } = content;\r\n\r\n        let title = '';\r\n        if (message) {\r\n            if (via_bot_user_id) {\r\n                title = getUserFullName(via_bot_user_id, null);\r\n            } else {\r\n                title = getChatTitle(chatId, false);\r\n            }\r\n        }\r\n        title = title || LStore.getString('Bot');\r\n\r\n        if (text) {\r\n            if (show_alert) {\r\n                showAlert({\r\n                    title,\r\n                    message: text,\r\n                    ok: LStore.getString('OK')\r\n                });\r\n            } else {\r\n                showSnackbar(text, closeSnackbar => snackKey => {\r\n                    return (\r\n                        <IconButton\r\n                            key='close'\r\n                            aria-label='Close'\r\n                            color='inherit'\r\n                            className='notification-close-button'\r\n                            onClick={() => { closeSnackbar(snackKey); }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    )\r\n                });\r\n            }\r\n        } else if (url) {\r\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\r\n                const userId = via_bot_user_id ? via_bot_user_id : sender_id.user_id;\r\n                const user = UserStore.get(userId);\r\n\r\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\r\n            } else {\r\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClick = async event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId, type } = this.props;\r\n\r\n        switch (type['@type']) {\r\n            case 'inlineKeyboardButtonTypeBuy': {\r\n                showAlert({\r\n                    title: LStore.getString('AppName'),\r\n                    message: LStore.getString('PaymentsNotSupported'),\r\n                    ok: LStore.getString('OK')\r\n                });\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallback':\r\n            case 'inlineKeyboardButtonTypeCallbackGame': {\r\n                /// gamee, querty_bot\r\n\r\n                const { data } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                const { sender_id, content, via_bot_user_id } = message;\r\n                if (!content) break;\r\n\r\n                let payload = null;\r\n                let game = null;\r\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\r\n                    game = content.game;\r\n                    if (!game) break;\r\n\r\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\r\n                } else {\r\n                    payload = { '@type': 'callbackQueryPayloadData', data };\r\n                }\r\n\r\n                this.setState({ loading: true });\r\n                const result = await TdLibController.send({\r\n                    '@type': 'getCallbackQueryAnswer',\r\n                    chat_id: chatId,\r\n                    message_id: messageId,\r\n                    payload\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                this.handleCallbackQueryAnswer(type, result, message);\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\r\n                /// BotFather + transfer bot\r\n                const { data } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                this.setState({ loading: true });\r\n                const passwordState = await TdLibController.send({\r\n                    '@type': 'getPasswordState'\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                const { has_password } = passwordState;\r\n                if (!has_password) break;\r\n\r\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\r\n                    console.log('[pwd] onPassword', password);\r\n                    this.setState({ loading: true });\r\n                    let error = null;\r\n                    const result = await TdLibController.send({\r\n                        '@type': 'getCallbackQueryAnswer',\r\n                        chat_id: chatId,\r\n                        message_id: messageId,\r\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\r\n                    }).catch(e => {\r\n                        error = e;\r\n                    }).finally(() => {\r\n                        this.setState({ loading: false });\r\n                    });\r\n\r\n                    if (error) {\r\n                        console.log('[pwd] onPassword error', error);\r\n                        onError && onError(error);\r\n                    } else if (result) {\r\n                        console.log('[pwd] onPassword result', result);\r\n                        onCloseDialog && onCloseDialog();\r\n                        this.handleCallbackQueryAnswer(type, result, message);\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeLoginUrl': {\r\n                const { url, id, forward_text } = type;\r\n\r\n                this.setState({ loading: true });\r\n                let hasError = false;\r\n                const result = await TdLibController.send({\r\n                    '@type': 'getLoginUrlInfo',\r\n                    chat_id: chatId,\r\n                    message_id: messageId,\r\n                    button_id: id\r\n                }).catch(e => {\r\n                    hasError = true;\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                if (hasError) {\r\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\r\n                } else {\r\n                    switch (result['@type']) {\r\n                        case 'loginUrlInfoOpen': {\r\n                            const { url, skip_confirm } = result;\r\n\r\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\r\n                            break;\r\n                        }\r\n                        case 'loginUrlInfoRequestConfirmation': {\r\n                            const { url } = result;\r\n\r\n\r\n                            console.log('[login] result', result);\r\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeSwitchInline': {\r\n                /// youtube\r\n                const { in_current_chat, query } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                const { sender_id, via_bot_user_id } = message;\r\n                let userId = sender_id.user_id;\r\n                if (via_bot_user_id !== 0) {\r\n                    userId = via_bot_user_id;\r\n                }\r\n\r\n                const user = UserStore.get(userId);\r\n                if (!user) break;\r\n\r\n                const inline = `@${user.username} ${query}`;\r\n\r\n                if (in_current_chat){\r\n                    setText(inline);\r\n                } else {\r\n                    openChatSelect({ switchInline: inline });\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeUrl': {\r\n                /// qwerty_bot\r\n                const { url } = type;\r\n\r\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    getIcon(type) {\r\n        switch (type['@type']) {\r\n            case 'inlineKeyboardButtonTypeBuy': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallback':\r\n            case 'inlineKeyboardButtonTypeCallbackGame': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeLoginUrl': {\r\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\r\n            }\r\n            case 'inlineKeyboardButtonTypeSwitchInline': {\r\n                const { in_current_chat } = type;\r\n\r\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\r\n            }\r\n            case 'inlineKeyboardButtonTypeUrl': {\r\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { text, type } = this.props;\r\n        const { loading } = this.state;\r\n\r\n        const icon = this.getIcon(type);\r\n\r\n        return (\r\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\r\n                {text}\r\n                {icon}\r\n                {loading && (\r\n                    <PendingIcon\r\n                        className='keyboard-button-progress'\r\n                        viewBox='0 0 14 14'\r\n                    />\r\n                )}\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nKeyboardButton.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    text: PropTypes.string,\r\n    type: PropTypes.object,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withMessage(KeyboardButton);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport KeyboardButton from './KeyboardButton';\r\nimport './KeyboardRow.css';\r\n\r\nclass KeyboardRow extends React.Component {\r\n    render() {\r\n        const { row } = this.props;\r\n        if (!row) return null;\r\n        if (!row.length) return null;\r\n\r\n        return (\r\n            <div className='keyboard-row'>\r\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nKeyboardRow.propTypes = {\r\n    row: PropTypes.array\r\n};\r\n\r\nexport default KeyboardRow;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport KeyboardRow from './KeyboardRow';\r\nimport MessageContext from '../MessageContext';\r\nimport './ReplyMarkup.css';\r\n\r\nclass ReplyMarkup extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevChatId, prevMessageId } = state;\r\n        const { chatId, messageId } = props;\r\n\r\n\r\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                message: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { markup } = this.props;\r\n        const { message } = this.state;\r\n\r\n        if (!markup) return null;\r\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\r\n\r\n        const { rows } = markup;\r\n        if (!rows.length) return null;\r\n\r\n        return (\r\n            <div className='reply-markup'>\r\n                <MessageContext.Provider value={message}>\r\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\r\n                </MessageContext.Provider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReplyMarkup.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    markup: PropTypes.object\r\n};\r\n\r\nexport default ReplyMarkup;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Animation from './Animation';\r\nimport Audio from './Audio';\r\nimport Document from './Document';\r\nimport Photo from './Photo';\r\nimport Sticker, { StickerSourceEnum } from './Sticker';\r\nimport Video from './Video';\r\nimport VideoNote from './VideoNote';\r\nimport VoiceNote from './VoiceNote';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { openInstantView } from '../../../Actions/InstantView';\r\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\r\nimport {\r\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\r\n    PHOTO_DISPLAY_SIZE,\r\n    PHOTO_DISPLAY_SMALL_SIZE,\r\n    PHOTO_SIZE\r\n} from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './WebPage.css';\r\n\r\nclass WebPage extends React.Component {\r\n    getMedia = () => {\r\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const {\r\n            site_name,\r\n            title,\r\n            description,\r\n            url,\r\n            photo,\r\n            animation,\r\n            video,\r\n            audio,\r\n            document,\r\n            voice_note,\r\n            video_note,\r\n            sticker,\r\n            type\r\n        } = web_page;\r\n\r\n        if (sticker) {\r\n            return [\r\n                null,\r\n                <Sticker\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    sticker={sticker}\r\n                    openMedia={openMedia}\r\n                    source={StickerSourceEnum.MESSAGE}\r\n                />\r\n            ];\r\n        }\r\n\r\n        if (voice_note) {\r\n            return [\r\n                null,\r\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\r\n            ];\r\n        }\r\n\r\n        if (video_note) {\r\n            return [\r\n                null,\r\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\r\n            ];\r\n        }\r\n\r\n        if (audio) {\r\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\r\n        }\r\n\r\n        if (document) {\r\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\r\n        }\r\n\r\n        if (animation) {\r\n            const animationSrc = getSrc(animation.animation);\r\n            if (animationSrc || animation.thumbnail) {\r\n                return [\r\n                    null,\r\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\r\n                ];\r\n            }\r\n        }\r\n\r\n        if (video) {\r\n            if (video.thumbnail) {\r\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\r\n            }\r\n        }\r\n\r\n        if (photo) {\r\n            const photoSize = getSize(photo.sizes, size);\r\n            const smallPhoto =\r\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\r\n                (site_name || title || description && description.text.length > 0) &&\r\n                photoSize &&\r\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\r\n            let totalLength = 0;\r\n            if (site_name) {\r\n                totalLength += site_name.length;\r\n            }\r\n            if (title) {\r\n                totalLength += title.length;\r\n            }\r\n            if (description) {\r\n                totalLength += description.text.length;\r\n            }\r\n\r\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\r\n\r\n            const style =\r\n                smallPhoto || extraSmallPhoto\r\n                    ? {\r\n                          float: 'right',\r\n                          marginLeft: 6\r\n                      }\r\n                    : {};\r\n\r\n            return [\r\n                smallPhoto ? (\r\n                    <Photo\r\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\r\n                        style={style}\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        photo={photo}\r\n                        openMedia={openMedia}\r\n                    />\r\n                ) : null,\r\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\r\n            ];\r\n        }\r\n\r\n        return [null, null];\r\n    };\r\n\r\n    handleInstantViewClick = async event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const { url } = web_page;\r\n\r\n        openInstantView(url);\r\n    };\r\n\r\n    getWebPage() {\r\n        const { chatId, messageId, t } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const { instant_view_version, site_name } = web_page;\r\n        let { description, title } = web_page;\r\n\r\n        if (description['@type'] === 'formattedText') {\r\n            description = getFormattedText(description);\r\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\r\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\r\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\r\n\r\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\r\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\r\n        }\r\n\r\n        const webPageContent = (\r\n            <>\r\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\r\n                {title && <div className='web-page-title'>{title}</div>}\r\n                {description && <div className='web-page-description'>{description}</div>}\r\n            </>\r\n        );\r\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\r\n        const webPageInstantView = instant_view_version > 0 && (\r\n            <Button\r\n                variant='outlined'\r\n                color='primary'\r\n                classes={{\r\n                    outlinedPrimary: 'message-control',\r\n                    disabled: 'message-control-disabled'\r\n                }}\r\n                fullWidth\r\n                onClick={this.handleInstantViewClick}\r\n                className='web-page-button'>\r\n                <SvgIcon>\r\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\r\n                </SvgIcon>\r\n                {t('InstantView')}\r\n            </Button>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                {webPageMediaTop}\r\n                {webPageContent}\r\n                {webPageMediaBottom}\r\n                {webPageInstantView}\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { meta } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='web-page'>\r\n                    <div className='border' />\r\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\r\n                </div>\r\n                {meta}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nWebPage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number,\r\n    displaySmallSize: PropTypes.number,\r\n    displayExtraSmallSize: PropTypes.number,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nWebPage.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\r\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\r\n};\r\n\r\nexport default withTranslation()(WebPage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport DayMeta from './DayMeta';\r\nimport Reply from './Reply';\r\nimport ReplyMarkup from './Markup/ReplyMarkup';\r\nimport Forward from './Forward';\r\nimport Meta from './Meta';\r\nimport MessageAuthor from './MessageAuthor';\r\nimport MessageMenu from './MessageMenu';\r\nimport UserTile from '../Tile/UserTile';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport EmptyTile from '../Tile/EmptyTile';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport WebPage from './Media/WebPage';\r\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\r\nimport {\r\n    getEmojiMatches,\r\n    getText,\r\n    getWebPage,\r\n    openMedia,\r\n    showMessageForward,\r\n    isMetaBubble,\r\n    canMessageBeForwarded,\r\n    getMessageStyle,\r\n    isEmptySelection\r\n} from '../../Utils/Message';\r\nimport { getMedia } from '../../Utils/Media';\r\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\r\nimport {\r\n    openUser,\r\n    openChat,\r\n    selectMessage,\r\n    openReply,\r\n    replyMessage,\r\n    forwardMessages\r\n} from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Message.css';\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n        this.state = {\r\n            message: MessageStore.get(chatId, messageId),\r\n            emojiMatches: getEmojiMatches(chatId, messageId),\r\n            selected: false,\r\n            highlighted: false,\r\n            shook: false,\r\n\r\n            contextMenu: false,\r\n            copyLink: null,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\r\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('Message.shouldComponentUpdate true chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            // console.log('Message.shouldComponentUpdate true messageId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            // console.log('Message.shouldComponentUpdate true sendingState');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showTail !== showTail) {\r\n            // console.log('Message.shouldComponentUpdate true showTail');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showTitle !== showTitle) {\r\n            // console.log('Message.shouldComponentUpdate true showTitle');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            // console.log('Message.shouldComponentUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            // console.log('Message.shouldComponentUpdate true selected');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            // console.log('Message.shouldComponentUpdate true highlighted');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.shook !== shook) {\r\n            // console.log('Message.shouldComponentUpdate true shook');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\r\n            return true;\r\n        }\r\n\r\n        // console.log('Message.shouldComponentUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\r\n    }\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onClientUpdateMessageShake = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { shook } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (shook) {\r\n                this.setState({ shook: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ shook: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ shook: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ selected, highlighted: false });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        this.updateMessageContent = update;\r\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\r\n    };\r\n\r\n    onUpdateMessageEdited = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        this.updateMessageEdited = update;\r\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\r\n    };\r\n\r\n    handleUpdateMessageContentAndEditedOnce = () => {\r\n        const { updateMessageContent, updateMessageEdited } = this;\r\n        this.updateMessageContent = null;\r\n        this.updateMessageEdited = null;\r\n\r\n        if (!updateMessageContent && !updateMessageEdited) return;\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        let handled = false;\r\n        if (updateMessageContent) {\r\n            const { emojiMatches } = this.state;\r\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\r\n            if (newEmojiMatches !== emojiMatches) {\r\n                handled = true;\r\n                this.setState({ emojiMatches: newEmojiMatches });\r\n            }\r\n        }\r\n\r\n        if (handled) return;\r\n\r\n        startMessageEditing(chatId, messageId);\r\n        this.forceUpdate(() => {\r\n            stopMessageEditing(chatId, messageId);\r\n        });\r\n    };\r\n\r\n    handleSelectUser = userId => {\r\n        openUser(userId, true);\r\n    };\r\n\r\n    handleSelectChat = chatId => {\r\n        openChat(chatId, null, true);\r\n    };\r\n\r\n    handleSelection = () => {\r\n        if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n    };\r\n\r\n    handleDateClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const canBeReplied = canSendMessages(chatId);\r\n        if (canBeReplied) {\r\n            replyMessage(chatId, messageId);\r\n\r\n            return;\r\n        }\r\n\r\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\r\n        if (canBeForwarded) {\r\n            forwardMessages(chatId, [messageId]);\r\n        }\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    handleMouseDown = () => {\r\n        this.mouseDown = true;\r\n    };\r\n\r\n    handleMouseOver = () => {\r\n        this.mouseDown = false;\r\n    };\r\n\r\n    handleMouseOut = () => {\r\n        this.mouseOut = false;\r\n    };\r\n\r\n    handleReplyClick = () => {\r\n        const { chatId, messageId } = this.props;\r\n        openReply(chatId, messageId);\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            if (MessageStore.selectedItems.size > 1) {\r\n                return;\r\n            }\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        let { showTail } = this.props;\r\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            highlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n\r\n        // console.log('Message.render', messageId);\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender_id, reply_markup } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageId={messageId}\r\n            />\r\n        );\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': isMetaBubble(chatId, messageId)\r\n                })}\r\n                chatId={chatId}\r\n                messageId={messageId}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const webPage = getWebPage(message);\r\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender_id.user_id) {\r\n                tile = <UserTile small userId={sender_id.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = getMessageStyle(chatId, messageId);\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded =\r\n            !hasCaption  && (\r\n                content['@type'] === 'messageAnimation' ||\r\n                content['@type'] === 'messageVideo' ||\r\n                content['@type'] === 'messagePhoto' ||\r\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\r\n        const showMeta = withBubble && content['@type'] !== 'messageCall';\r\n\r\n\r\n        // console.log('[p] m.render id=' + message.id);\r\n\r\n        // return (\r\n        //     <StubMessage>\r\n        //         {text}\r\n        //         {media}\r\n        //         <WebPage\r\n        //             chatId={chatId}\r\n        //             messageId={messageId}\r\n        //             openMedia={this.openMedia}\r\n        //             meta={inlineMeta}\r\n        //         />\r\n        //     </StubMessage>\r\n        // );\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        'message-highlighted': highlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div>\r\n                                <div\r\n                                    className={classNames('message-content', {\r\n                                        'message-bubble': withBubble,\r\n                                        'message-bubble-out': withBubble && isOutgoing\r\n                                    })}\r\n                                    style={style}>\r\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                        <div className='message-title'>\r\n                                            {showTitle && !showForward && (\r\n                                                <MessageAuthor sender={sender_id} forwardInfo={forward_info} openChat openUser/>\r\n                                            )}\r\n                                            {showForward && <Forward forwardInfo={forward_info} />}\r\n                                        </div>\r\n                                    )}\r\n                                    {showReply && (\r\n                                        <Reply\r\n                                            chatId={chatId}\r\n                                            messageId={reply_to_message_id}\r\n                                            onClick={this.handleReplyClick}\r\n                                        />\r\n                                    )}\r\n                                    {media}\r\n                                    <div\r\n                                        className={classNames('message-text', {\r\n                                            'message-text-1emoji': emojiMatches === 1,\r\n                                            'message-text-2emoji': emojiMatches === 2,\r\n                                            'message-text-3emoji': emojiMatches === 3\r\n                                        })}>\r\n                                        {text}\r\n                                    </div>\r\n                                    {webPage && (\r\n                                        <WebPage\r\n                                            chatId={chatId}\r\n                                            messageId={messageId}\r\n                                            openMedia={this.openMedia}\r\n                                            meta={inlineMeta}\r\n                                        />\r\n                                    )}\r\n                                    {showMeta && meta}\r\n                                </div>\r\n                                {reply_markup && (\r\n                                    <ReplyMarkup\r\n                                        chatId={chatId}\r\n                                        messageId={messageId}\r\n                                        markup={reply_markup}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={copyLink}\r\n                    source={source}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    sendingState: PropTypes.object,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n}\r\n\r\nMessage.defaultProps = {\r\n    sendingState: null,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showDate: false\r\n}\r\n\r\n// const enhance = compose(\r\n//     withSaveRef(),\r\n//     withTranslation(),\r\n//     withRestoreRef()\r\n// );\r\n\r\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\r\n\r\nexport default message;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport DayMeta from './DayMeta';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport Photo from './Media/Photo';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './ServiceMessage.css';\r\nimport MessageMenu from './MessageMenu';\r\n\r\nconst chatPhotoStyle = {\r\n    width: 96,\r\n    height: 96,\r\n    borderRadius: '50%',\r\n    margin: '0 auto 5px'\r\n};\r\n\r\nclass ServiceMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n        this.state = {\r\n            message: MessageStore.get(chatId, messageId),\r\n            highlighted: false,\r\n            contextMenu: false,\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\r\n        const { highlighted, contextMenu } = this.state;\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            if (MessageStore.selectedItems.size > 1) {\r\n                return;\r\n            }\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\r\n        const { highlighted, contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content, date } = message;\r\n        if (!content) return null;\r\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\r\n\r\n        const { photo } = content;\r\n\r\n        const text = getServiceMessageContent(message, true);\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='service-message-wrapper'>\r\n                        <div className='service-message-content'>\r\n                            <div>{text}</div>\r\n                        </div>\r\n                    </div>\r\n                    {photo && (\r\n                        <Photo\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            photo={photo}\r\n                            displaySize={96}\r\n                            style={chatPhotoStyle}\r\n                            openMedia={this.openMedia}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={null}\r\n                    source={'chat'}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nServiceMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    showUnreadSeparator: PropTypes.bool\r\n}\r\n\r\nServiceMessage.defaultProps = {\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false\r\n}\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ServiceMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './Placeholder.css';\r\nimport { isMobile } from '../../Utils/Common';\r\n\r\nclass Placeholder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\r\n        this.state = {\r\n            chatId,\r\n            dialogsReady,\r\n            cacheLoaded\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextState.chatId !== this.state.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== this.props.t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n    }\r\n\r\n    onClientUpdateCacheLoaded = update => {\r\n        const { cacheLoaded } = AppStore;\r\n\r\n        this.setState({ cacheLoaded });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId: chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    };\r\n\r\n    onClientUpdateDialogsReady = update => {\r\n        const { dialogsReady } = AppStore;\r\n\r\n        this.setState({ dialogsReady });\r\n    };\r\n\r\n    render() {\r\n        const { t, force } = this.props;\r\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\r\n        if (chatId) return null;\r\n        // if (!dialogsReady && !cacheLoaded) return null;\r\n\r\n        return (\r\n            <div className='placeholder'>\r\n                <div className='placeholder-wrapper'>\r\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\r\n                    <div className='placeholder-meta'>{isMobile() ? t('Loading') : t('SelectChatToStartMessaging')}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Placeholder);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport './ScrollDownButton.css';\r\n\r\nclass ScrollDownButton extends React.Component {\r\n    render() {\r\n        const { onClick } = this.props;\r\n\r\n        return (\r\n            <div className='scroll-down-button'>\r\n                <IconButton disableRipple={true} onMouseDown={onClick}>\r\n                    <ArrowDownwardIcon />\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nScrollDownButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ScrollDownButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerPreview from './StickerPreview';\r\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\r\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickersHint.css';\r\n\r\nclass StickersHint extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hintsRef = React.createRef();\r\n\r\n        this.state = {\r\n            hint: null,\r\n            items: [],\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    onClientUpdateRemoteStickersHint = update => {\r\n        const { hint } = update;\r\n        const { hint: currentHint } = this.state;\r\n\r\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\r\n\r\n        this.setState({\r\n            hint: StickerStore.hint,\r\n            items: this.getItems(StickerStore.hint)\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    onClientUpdateLocalStickersHint = update => {\r\n        const { hint } = update;\r\n\r\n        this.setState({\r\n            hint,\r\n            items: this.getItems(hint),\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        });\r\n\r\n        if (!hint) return;\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    handleSend = sticker => {\r\n        const { cancelSend } = this.state;\r\n        if (cancelSend) return;\r\n        if (!sticker) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSend',\r\n            sticker\r\n        });\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { items } = this.state;\r\n\r\n        const sticker = items.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        let stickersPerRow = 8;\r\n        if (this.hintsRef && this.hintsRef.current) {\r\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\r\n        }\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const row = Math.floor(index / stickersPerRow);\r\n        const column = index % stickersPerRow;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * prevRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * prevRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(stickersPerRow * row + prevColumn);\r\n        }\r\n        if (nextColumn < stickersPerRow) {\r\n            indexes.push(stickersPerRow * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * nextRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * nextRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        if (this.mouseDownStickerId !== stickerId) {\r\n            this.mouseDownStickerId = null;\r\n        }\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        this.mouseDownStickerId = stickerId;\r\n        const now = Date.now();\r\n\r\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\r\n        setTimeout(() => {\r\n            const { timestamp } = this.state;\r\n            if (timestamp === now) {\r\n                this.setState({ showPreview: true, cancelSend: true });\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateStickerPreview',\r\n                    sticker\r\n                });\r\n            }\r\n        }, 500);\r\n\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleMouseUp = () => {\r\n        const sticker = null;\r\n        this.setState({ sticker, timestamp: 0, showPreview: false });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    getItems = hint => {\r\n        const items = [];\r\n        if (!hint) return items;\r\n\r\n        const dict = new Map();\r\n        const { stickers, foundStickers } = hint;\r\n        if (stickers) {\r\n            stickers.stickers.forEach(x => {\r\n                items.push(x);\r\n                dict.set(x.sticker.id, x.sticker.id);\r\n            });\r\n        }\r\n        if (foundStickers) {\r\n            foundStickers.stickers.forEach(x => {\r\n                if (!dict.has(x.sticker.id)) {\r\n                    items.push(x);\r\n                    dict.set(x.sticker.id, x.sticker.id);\r\n                }\r\n            });\r\n        }\r\n\r\n        return items;\r\n    };\r\n\r\n    getSticker(stickerId) {\r\n        const { items } = this.state;\r\n\r\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\r\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\r\n    }\r\n\r\n    render() {\r\n        const { hint, items, sticker, showPreview } = this.state;\r\n        if (!hint) return null;\r\n        if (!items) return null;\r\n        if (!items.length) return null;\r\n\r\n        const controls = items.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\r\n                onClick={() => this.handleSend(x)}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseDown={this.handleMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    sticker={x}\r\n                    autoplay={false}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    preview\r\n                    source={StickerSourceEnum.HINTS}\r\n                />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\r\n                {controls}\r\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StickersHint;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\nimport ActionBar from './ActionBar';\r\nimport Album from '../Message/Album/Album';\r\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\r\nimport FilesDropTarget from './FilesDropTarget';\r\nimport GroupCallJoinPanel from '../Calls/GroupCallJoinPanel';\r\nimport InputBoxHints from './InputBoxHints';\r\nimport Message from '../Message/Message';\r\nimport ServiceMessage from '../Message/ServiceMessage';\r\nimport Placeholder from './Placeholder';\r\nimport ScrollDownButton from './ScrollDownButton';\r\nimport StickersHint from './StickersHint';\r\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\r\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\r\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\r\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\r\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\r\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\r\nimport { sendBotStartMessage } from '../../Actions/Message';\r\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessagesList.css';\r\n\r\nconst ScrollBehaviorEnum = Object.freeze({\r\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\r\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\r\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\r\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\r\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\r\n    NONE: 'NONE'\r\n});\r\n\r\nclass MessagesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lastRequests = new Map();\r\n        this.sessionId = {\r\n            date: new Date(),\r\n            loading: false,\r\n            completed: false,\r\n            loadMigratedHistory: false\r\n        };\r\n\r\n        this.state = {\r\n            prevChatId: 0,\r\n            prevMessageId: null,\r\n            playerOpened: false,\r\n            history: [],\r\n            clearHistory: false,\r\n            selectionActive: false,\r\n            separatorMessageId: 0,\r\n            scrollDownVisible: false,\r\n            replyHistory: []\r\n        };\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemsRef = React.createRef();\r\n        this.scrollDownButtonRef = React.createRef();\r\n\r\n        this.defferedActions = [];\r\n        this.itemsMap = new Map();\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\r\n    }\r\n\r\n    hasLastMessage() {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return false;\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return true;\r\n\r\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: props.chatId,\r\n                prevMessageId: props.messageId,\r\n                clearHistory: false,\r\n                selectionActive: false,\r\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\r\n                scrollDownVisible:\r\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\r\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const list = this.listRef.current;\r\n        const { scrollTop, scrollHeight, offsetHeight } = list;\r\n\r\n        const snapshot = {\r\n            scrollTop,\r\n            scrollHeight,\r\n            offsetHeight\r\n        };\r\n\r\n        this.snapshot = snapshot;\r\n        return snapshot;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollDownVisible } = this.state;\r\n\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] componentDidUpdate\r\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\r\n        //     scrollDownVisible=${scrollDownVisible}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}`\r\n        // );\r\n\r\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\r\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[ml] shouldComponentUpdate chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            // console.log('[ml] shouldComponentUpdate messageId');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\r\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playerOpened !== playerOpened) {\r\n            // console.log('[ml] shouldComponentUpdate playerOpened');\r\n            return true;\r\n        }\r\n\r\n        if (!historyEquals(nextState.history, history)) {\r\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dragging !== dragging) {\r\n            // console.log('[ml] shouldComponentUpdate dragging');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clearHistory !== clearHistory) {\r\n            // console.log('[ml] shouldComponentUpdate clearHistory');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selectionActive !== selectionActive) {\r\n            // console.log('[ml] shouldComponentUpdate selectionActive');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[ml] shouldComponentUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId, messageId } = this.props;\r\n        this.handleSelectChat(chatId, null, messageId, null);\r\n\r\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\r\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\r\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\r\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\r\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\r\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\r\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    onClientUpdateStartMessageEditing = update => {\r\n        const { chatId, messageId } = update;\r\n        const { chatId: currentChatId } = this.props;\r\n        if (currentChatId !== chatId) return;\r\n\r\n        const { history } = this.state;\r\n        if (!history.length) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\r\n            return;\r\n        }\r\n\r\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\r\n\r\n        this.scrollBottomAfterEditing = {\r\n            chatId,\r\n            messageId\r\n        };\r\n    };\r\n\r\n    onClientUpdateStopMessageEditing = update => {\r\n        const { chatId, messageId } = update;\r\n        const { chatId: currentChatId } = this.props;\r\n        if (currentChatId !== chatId) return;\r\n\r\n        const { scrollBottomAfterEditing } = this;\r\n        if (!scrollBottomAfterEditing) return;\r\n\r\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\r\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\r\n        this.scrollBottomAfterEditing = null;\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chat_id, message_id, is_pinned } = update;\r\n        const { chatId, filter } = this.props;\r\n        if (chatId !== chat_id) return;\r\n        if (!filter) return;\r\n\r\n        if (is_pinned) {\r\n            const message = MessageStore.get(chat_id, message_id);\r\n\r\n            const list = this.listRef.current;\r\n\r\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\r\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n            }\r\n\r\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\r\n\r\n            const history = [message];\r\n            this.scrollBehaviorNone = true;\r\n            this.insert(history, newState, () => {\r\n                this.scrollBehaviorNone = false;\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, history);\r\n            this.viewMessages(history);\r\n        } else {\r\n            this.deleteHistory([message_id]);\r\n\r\n            const media = MessageStore.getMedia(chatId);\r\n            if (media && !media.pinned.length) {\r\n                closePinned();\r\n            }\r\n        }\r\n    };\r\n\r\n    onKeyDown = event => {\r\n        // if (event.keyCode === 27) {\r\n        //     if (MessageStore.selectedItems.size > 0) {\r\n        //         console.log('[k] messagesList onKeyDown');\r\n        //         clearSelection();\r\n        //         event.stopPropagation();\r\n        //         event.preventDefault();\r\n        //     }\r\n        // }\r\n    };\r\n\r\n    onClientUpdateTryEditMessage = async update => {\r\n        if (this.hasLastMessage()) {\r\n            const { history } = this.state;\r\n\r\n            for (let i = history.length - 1; i >= 0; i--) {\r\n                const message = history[i];\r\n                if (canMessageBeEdited(message.chat_id, message.id)) {\r\n                    editMessage(message.chat_id, message.id);\r\n\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: this.props.chatId,\r\n            query: '',\r\n            sender_user_id: UserStore.getMyId(),\r\n            from_message_id: 0,\r\n            offset: 0,\r\n            limit: 100,\r\n            filter: { '@type': 'searchMessagesFilterEmpty' }\r\n        });\r\n\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            const message = result.messages[i];\r\n            if (canMessageBeEdited(message.chat_id, message.id)) {\r\n                editMessage(message.chat_id, message.id);\r\n\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateDialogsReady = async update => {\r\n        const { list } = update;\r\n        if (!list) return;\r\n        if (list['@type'] !== 'chatListMain') return;\r\n\r\n        const { history } = this.state;\r\n        if (history && history.length > 0) return;\r\n\r\n        await FileStore.initDB(async () => {\r\n            const { chatId, messageId } = this.props;\r\n            if (chatId) {\r\n                const chat = ChatStore.get(chatId);\r\n                if (chat) {\r\n                    const { type } = chat;\r\n                    switch (type['@type']) {\r\n                        case 'chatTypePrivate':\r\n                        case 'chatTypeSecret': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createPrivateChat',\r\n                                user_id: type.user_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'chatTypeBasicGroup': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createBasicGroupChat',\r\n                                basic_group_id: type.basic_group_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'chatTypeSupergroup': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createSupergroupChat',\r\n                                supergroup_id: type.supergroup_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                    }\r\n                    this.handleSelectChat(chatId, 0, messageId, 0);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        const { focused } = update;\r\n        if (focused) {\r\n            this.defferedActions.forEach(x => x());\r\n            this.defferedActions = [];\r\n        }\r\n    };\r\n\r\n    onClientUpdateOpenReply = update => {\r\n        const { chatId, messageId } = update;\r\n        const { replyHistory } = this.state;\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\r\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\r\n            return;\r\n        }\r\n\r\n        replyHistory.push({ chatId, messageId });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const list = this.listRef.current;\r\n\r\n        const prevOffsetHeight = list.offsetHeight;\r\n        const prevScrollTop = list.scrollTop;\r\n        this.setState({ playerOpened: true }, () => {\r\n            if (list.scrollTop === prevScrollTop) {\r\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaEnding = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        this.prevOffsetHeight = list.offsetHeight;\r\n        this.prevScrollTop = list.scrollTop;\r\n    };\r\n\r\n    onClientUpdateMediaEnd = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        const { prevScrollTop, prevOffsetHeight } = this;\r\n        this.setState({ playerOpened: false }, () => {\r\n            if (list.scrollTop === prevScrollTop) {\r\n                list.scrollTop -= Math.abs(prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateSelection = update => {\r\n        this.setState({\r\n            selectionActive: MessageStore.selectedItems.size > 0\r\n        });\r\n    };\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.setState({ clearHistory: update.inProgress });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (history.findIndex(x => x.id === message_id) !== -1) {\r\n            const message = MessageStore.get(chat_id, message_id);\r\n            if (!message) return;\r\n\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, [message]);\r\n        }\r\n    };\r\n\r\n    onUpdateMessageSendSucceeded = update => {\r\n        const { message, old_message_id } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        // let handleSendSucceeded = false;\r\n        // const { content } = message;\r\n        // switch (content['@type']) {\r\n        //     case 'messagePoll': {\r\n        //         handleSendSucceeded = true;\r\n        //         break;\r\n        //     }\r\n        // }\r\n        //\r\n        // if (!handleSendSucceeded) return;\r\n\r\n        const scrollBehavior = message.is_outgoing\r\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\r\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\r\n\r\n        this.replaceMessage(old_message_id, message, () => {\r\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n            }\r\n\r\n            this.updateItemsInView();\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n        this.viewMessages([message]);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        if (!this.hasLastMessage()) return;\r\n\r\n        const { message } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        const { date } = message;\r\n        if (date === 0) return;\r\n\r\n        const list = this.listRef.current;\r\n\r\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\r\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n        }\r\n\r\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\r\n\r\n        const history = [message];\r\n        this.scrollBehaviorNone = true;\r\n        this.insertPrevious(history, newState, () => {\r\n            this.scrollBehaviorNone = false;\r\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, history);\r\n        this.viewMessages(history);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, is_permanent, message_ids } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (!is_permanent) return;\r\n\r\n        this.deleteHistory(message_ids);\r\n    };\r\n\r\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId, ignoreUnread = false) {\r\n        const chat = ChatStore.get(chatId);\r\n        const previousChat = ChatStore.get(previousChatId);\r\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\r\n        this.sessionId = {\r\n            date: new Date(),\r\n            loading: false,\r\n            completed: false,\r\n            loadMigratedHistory: false\r\n        };\r\n        const { sessionId } = this;\r\n\r\n        this.prevScrollTop = null;\r\n        this.defferedActions = [];\r\n\r\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\r\n\r\n        if (chat) {\r\n            if (previousChatId !== chatId && !this.props.filter) {\r\n                TdLibController.send({\r\n                    '@type': 'openChat',\r\n                    chat_id: chatId\r\n                });\r\n            }\r\n\r\n            const unread = !messageId && chat.unread_count > 1;\r\n            let fromMessageId = 0;\r\n            if (!ignoreUnread && unread && chat.last_read_inbox_message_id) {\r\n                fromMessageId = chat.last_read_inbox_message_id;\r\n            } else if (messageId) {\r\n                fromMessageId = messageId;\r\n            } else if (scrollPosition) {\r\n                fromMessageId = scrollPosition.messageId;\r\n            }\r\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\r\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\r\n\r\n            sessionId.loading = true;\r\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\r\n            .catch(error => {\r\n                return {\r\n                    '@type': 'messages',\r\n                    messages: [],\r\n                    total_count: 0\r\n                };\r\n            }).finally(() => {\r\n                sessionId.loading = false;\r\n            });\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            MessageStore.setItems(result.messages);\r\n            result.messages.reverse();\r\n\r\n            let separatorMessageId = this.state.separatorMessageId;\r\n            if (chatId !== previousChatId) {\r\n                separatorMessageId = Number.MAX_VALUE;\r\n                if (chat && chat.unread_count > 1) {\r\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\r\n                        const { id } = result.messages[i];\r\n                        if (\r\n                            !result.messages[i].is_outgoing &&\r\n                            id > chat.last_read_inbox_message_id &&\r\n                            id < separatorMessageId\r\n                        ) {\r\n                            separatorMessageId = id;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\r\n            }\r\n\r\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n            if (messageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\r\n            } else if (unread && separatorMessageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\r\n            } else if (scrollPosition) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\r\n            }\r\n\r\n            this.cancelUpdatePinnedMessage = true;\r\n            this.replace(separatorMessageId, result.messages, () => {\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\r\n                if (messageId) {\r\n                    highlightMessage(chatId, messageId);\r\n                }\r\n                requestAnimationFrame(() => {\r\n                    this.cancelUpdatePinnedMessage = false;\r\n                });\r\n\r\n                this.loadIncompleteHistory(result, limit);\r\n            });\r\n\r\n            // load files\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, result.messages);\r\n            this.viewMessages(result.messages);\r\n\r\n            loadChatsContent(store, [chatId]);\r\n            loadDraftContent(store, chatId);\r\n\r\n            if (previousChatId !== chatId && !this.props.filter) {\r\n                // getChatFullInfo(chatId);\r\n                getChatMedia(chatId);\r\n                if (this.props.options) {\r\n                    const { botStartMessage } = this.props.options;\r\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\r\n                        const { botUserId, parameter } = botStartMessage;\r\n\r\n                        await sendBotStartMessage(chatId, botUserId, parameter);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            sessionId.loading = true;\r\n            this.replace(0, [], () => {\r\n                sessionId.loading = false;\r\n            });\r\n        }\r\n\r\n        if (previousChatId !== chatId && !this.props.filter) {\r\n            if (previousChat) {\r\n                TdLibController.send({\r\n                    '@type': 'closeChat',\r\n                    chat_id: previousChatId\r\n                });\r\n\r\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\r\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\r\n                const message = this.messages[scrollMessage.index];\r\n                if (message) {\r\n                    const { chatId, messageId } = message.props;\r\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\r\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    viewMessages(messages) {\r\n        if (!messages) return;\r\n        if (messages.length === 0) return;\r\n        if (!messages[0].chat_id) return;\r\n\r\n        const viewAction = () => {\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: messages[0].chat_id,\r\n                message_ids: messages.map(x => x.id)\r\n            });\r\n        };\r\n\r\n        if (window.hasFocus) {\r\n            viewAction();\r\n        } else {\r\n            this.defferedActions.push(viewAction);\r\n        }\r\n    }\r\n\r\n    cancelLoadMessageContents(messages) {\r\n        //return;\r\n        for (let i = messages.length - 1; i >= 0; i--) {\r\n            let message = messages[i];\r\n            if (message && message.content) {\r\n                switch (message.content['@type']) {\r\n                    case 'messagePhoto': {\r\n                        let [id, pid] = this.getMessagePhoto(message);\r\n                        if (pid) {\r\n                            let obj = getPhotoSize(message.content.photo.sizes);\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'messageSticker': {\r\n                        let [id, pid] = this.getMessageSticker(message);\r\n                        if (pid) {\r\n                            let obj = message.content.sticker.sticker;\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadIncompleteHistory = async (result, limit) => {\r\n        const MAX_ITERATIONS = 5;\r\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\r\n\r\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\r\n            result = await this.onLoadNext();\r\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\r\n        }\r\n    };\r\n\r\n    isCompleteHistory = (result, limit) => {\r\n        if (!result) return false;\r\n        if (!result.messages.length) return true;   // end of the history\r\n\r\n        return result.messages.length >= limit;\r\n    };\r\n\r\n    onLoadNext = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        if (!chatId) return;\r\n        if (sessionId.loading) return;\r\n\r\n        if (sessionId.loadMigratedHistory) {\r\n            return await this.onLoadMigratedHistory();\r\n        }\r\n\r\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\r\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        let result = null;\r\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\r\n        if (this.lastRequests.has(lastRequestKey)) {\r\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\r\n        } else {\r\n            sessionId.loading = true;\r\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\r\n                .finally(() => {\r\n                    sessionId.loading = false;\r\n                });\r\n        }\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (!result.messages.length) {\r\n            this.lastRequests.set(lastRequestKey, result);\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n\r\n        this.insertNext(result.messages, state => {\r\n            if (result.messages.length > 0) {\r\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n                setTimeout(() => {\r\n                    const { history: currentHistory } = this.state;\r\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\r\n                        this.setState({\r\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\r\n                        });\r\n                    }\r\n                }, 100);\r\n            }\r\n            if (!result.messages.length) {\r\n                this.onLoadMigratedHistory();\r\n            }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    onLoadMigratedHistory = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        if (!chatId) return;\r\n\r\n        const supergroupId = getSupergroupId(chatId);\r\n        if (!supergroupId) return;\r\n\r\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\r\n        if (!fullInfo) {\r\n            fullInfo = await getChatFullInfo(chatId);\r\n        }\r\n        if (!fullInfo.upgraded_from_basic_group_id) {\r\n            return;\r\n        }\r\n\r\n        sessionId.loadMigratedHistory = true;\r\n\r\n        const basicGroupChat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\r\n        });\r\n\r\n        if (!basicGroupChat) return;\r\n        if (sessionId.loading) return;\r\n\r\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\r\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        sessionId.loading = true;\r\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\r\n        .finally(() => {\r\n            sessionId.loading = false;\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.insertNext(result.messages, state => {\r\n            if (result.messages.length > 0) {\r\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n            }\r\n\r\n            this.loadIncompleteHistory(result, limit);\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        if (!chat) return;\r\n        if (sessionId.loading) return;\r\n        if (this.hasLastMessage()) return;\r\n\r\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\r\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        sessionId.loading = true;\r\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\r\n            .finally(() => {\r\n                sessionId.loading = false;\r\n            });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.state.history);\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.scrollBehaviorNone = true;\r\n        this.insertPrevious(result.messages, {}, () => {\r\n            this.scrollBehaviorNone = false;\r\n            if (result.messages.length > 0) {\r\n                setTimeout(() => {\r\n                    const { history: currentHistory } = this.state;\r\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\r\n                        this.setState({\r\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\r\n                        }, () => {\r\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n                        });\r\n                    }\r\n                }, 0);\r\n            }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    replace(separatorMessageId, history, callback) {\r\n        this.setState({ separatorMessageId, history }, callback);\r\n    }\r\n\r\n    replaceMessage(oldMessageId, message, callback) {\r\n        if (!message) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        let history = [...this.state.history];\r\n        const index = history.findIndex(x => x.id === oldMessageId);\r\n        if (index !== -1) {\r\n            history.splice(index, 1, message);\r\n        } else {\r\n            history = this.state.history;\r\n        }\r\n\r\n        this.setState({ history }, callback);\r\n    }\r\n\r\n    insert(history, newState, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: history.concat(this.state.history).sort((a, b) => {\r\n                if (a.id < b.id) {\r\n                    return -1;\r\n                } else if (a.id > b.id) {\r\n                    return 1;\r\n                }\r\n\r\n                return 0;\r\n            })\r\n        }, callback);\r\n    }\r\n\r\n    insertNext(history, callback) {\r\n        if (history.length === 0) {\r\n            callback && callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: history.concat(this.state.history)//.slice(0, 100)\r\n        }, callback);\r\n    }\r\n\r\n    insertPrevious(history, newState, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: this.state.history.concat(history),\r\n            ...newState\r\n        }, callback);\r\n    }\r\n\r\n    deleteHistory(message_ids, callback) {\r\n        const { history } = this.state;\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        const map = new Map(message_ids.map(x => [x, x]));\r\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\r\n    }\r\n\r\n    updateItemsInView = () => {\r\n        if (!this.messages) return null;\r\n\r\n        const messages = [];\r\n        const messagesMap = new Map();\r\n        const items = itemsInView(this.listRef, this.itemsRef);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const messageWrapper = this.messages[items[i]];\r\n            if (messageWrapper) {\r\n                const message = messageWrapper;\r\n                const { chatId, messageId, messageIds } = message.props;\r\n                if (messageId) {\r\n                    const key = `${chatId}_${messageId}`;\r\n                    messagesMap.set(key, key);\r\n                    messages.push({ chatId, messageId });\r\n                } else if (messageIds) {\r\n                    for (let j = 0; j < messageIds.length; j++) {\r\n                        const key = `${chatId}_${messageIds[j]}`;\r\n                        messagesMap.set(key, key);\r\n                        messages.push({ chatId, messageId: messageIds[j] });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!mapEquals(this.inViewMap, messagesMap)) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\r\n\r\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\r\n            this.inViewMap = messagesMap;\r\n\r\n            return messages;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    updatePinnedMessage = scrollToNext => {\r\n        const { chatId, filter } = this.props;\r\n        if (filter) return;\r\n\r\n        const { prevScrollTop } = this;\r\n        if (prevScrollTop === null) {\r\n            // console.log('[pin] handleScroll 3.1');\r\n            return;\r\n        }\r\n        // const { prevScrollTop } = this;\r\n        // if (prevScrollTop === null) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        if (!media) return;\r\n        if (!media.pinned) return;\r\n        if (media.pinned.length <= 1) return;\r\n\r\n        const messages = [];\r\n        const items = itemsInView(this.listRef, this.itemsRef);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const messageWrapper = this.messages[items[i]];\r\n            if (messageWrapper) {\r\n                const message = messageWrapper;\r\n                const { chatId, messageId, messageIds } = message.props;\r\n                if (messageId) {\r\n                    messages.push({ chatId, messageId });\r\n                } else if (messageIds) {\r\n                    for (let j = 0; j < messageIds.length; j++) {\r\n                        messages.push({ chatId, messageId: messageIds[j] });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!messages) return;\r\n        if (messages.length <= 1) return;\r\n\r\n        const minId = messages[0].messageId;\r\n        const maxId = messages[messages.length - 1].messageId;\r\n\r\n        let id = 0;\r\n        for (let i = 0; i < media.pinned.length; i++) {\r\n            const pinned = media.pinned[i];\r\n            if (pinned.id >= minId && pinned.id <= maxId) {\r\n                id = pinned.id;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!id) {\r\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\r\n            const pinnedMaxId = media.pinned[0].id\r\n\r\n            if (pinnedMaxId < minId) {\r\n                id = pinnedMaxId;\r\n            } else if (pinnedMinId > maxId) {\r\n                id = pinnedMinId;\r\n            }\r\n        }\r\n\r\n        const { clickedPinned, currentPinned } = MessageStore;\r\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\r\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\r\n\r\n\r\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\r\n                // console.log('[pin] handleScroll 3.2');\r\n                return;\r\n            }\r\n\r\n            // console.log('[pin] handleScroll 4', { chatId, id });\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\r\n        } else {\r\n            // console.log('[pin] handleScroll 3.3');\r\n        }\r\n    };\r\n\r\n    updateScrollDownVisibility = () => {\r\n        const { scrollDownVisible, replyHistory, history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (this.hasLastMessage() && scrollDownVisible) {\r\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\r\n                    this.setState({\r\n                        scrollDownVisible: false,\r\n                        replyHistory: []\r\n                    });\r\n                } else if (!replyHistory.length) {\r\n                    this.setState({\r\n                        scrollDownVisible: false\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            if (!scrollDownVisible) {\r\n                this.setState({ scrollDownVisible: true });\r\n            }\r\n        }\r\n\r\n        this.prevHistory = history;\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] handleScroll\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\r\n\r\n        this.updateItemsInView();\r\n\r\n        if (!this.cancelUpdatePinnedMessage) {\r\n            this.updatePinnedMessage(scrollToNext);\r\n        }\r\n\r\n        this.updateScrollDownVisibility();\r\n\r\n        if (this.prevScrollTop !== null) {\r\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\r\n                this.onLoadNext();\r\n            }\r\n\r\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\r\n                this.onLoadPrevious();\r\n            }\r\n        }\r\n\r\n        this.prevScrollTop = list.scrollTop;\r\n    };\r\n\r\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\r\n            scrollTop: 0,\r\n            scrollHeight: 0,\r\n            offsetHeight: 0\r\n        };\r\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\r\n\r\n        // console.log(\r\n        //     `[ml] handleScrollBehavior\r\n        //     scrollBehavior=${scrollBehavior}\r\n        //     snapshot.scrollTop=${scrollTop}\r\n        //     snapshot.offsetHeight=${offsetHeight}\r\n        //     snapshot.scrollHeight=${scrollHeight}`\r\n        // );\r\n\r\n        switch (scrollBehavior) {\r\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\r\n                this.scrollToBottom();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\r\n                this.scrollToMessage();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\r\n                this.scrollToUnread();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\r\n                this.scrollToPosition(position);\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\r\n                this.keepScrollPosition(snapshot);\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.NONE: {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    keepScrollPosition = snapshot => {\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] keepScrollPosition before\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     snapshot.scrollTop=${snapshot.scrollTop}\r\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\r\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\r\n        // );\r\n\r\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\r\n\r\n        // console.log(\r\n        //     `[ml] keepScrollPosition after\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}`\r\n        // );\r\n    };\r\n\r\n    scrollToUnread = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToUnread before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            let itemComponent = this.itemsMap.get(i);\r\n            let item = ReactDOM.findDOMNode(itemComponent);\r\n            if (item) {\r\n                if (itemComponent.props.showUnreadSeparator) {\r\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToUnread after\r\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        if (!scrolled) {\r\n            this.scrollToBottom();\r\n        }\r\n    };\r\n\r\n    scrollToPosition = position => {\r\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\r\n        const { messageId, offset } = position;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            const itemComponent = this.itemsMap.get(i);\r\n            const node = ReactDOM.findDOMNode(itemComponent);\r\n            if (node) {\r\n                if (itemComponent.props.messageId === messageId) {\r\n                    list.scrollTop = node.offsetTop - offset;\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToMessage before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`,\r\n        //     this.itemsMap\r\n        // );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            const itemComponent = this.itemsMap.get(i);\r\n            const node = ReactDOM.findDOMNode(itemComponent);\r\n            if (node) {\r\n                if (itemComponent.props.messageId === messageId\r\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\r\n                    if (list.offsetHeight < node.offsetHeight) {\r\n                        // scroll to the message top\r\n                        list.scrollTop = node.offsetTop;\r\n                    } else {\r\n                        // scroll message to the center of screen\r\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\r\n                    }\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!scrolled) {\r\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\r\n        }\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToMessage after\r\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        // if (!scrolled) {\r\n        //     this.scrollToBottom();\r\n        // }\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToBottom before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\r\n        if (nextScrollTop !== list.scrollTop) {\r\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\r\n\r\n            // console.log(\r\n            //     `MessagesList.scrollToBottom after\r\n            // chatId=${chatId} messageId=${messageId}\r\n            // list.scrollTop=${list.scrollTop}\r\n            // list.offsetHeight=${list.offsetHeight}\r\n            // list.scrollHeight=${list.scrollHeight}`\r\n            // );\r\n        } else {\r\n            // console.log(\r\n            //     `MessagesList.scrollToBottom after (no changes)\r\n            // chatId=${chatId} messageId=${messageId}\r\n            // list.scrollTop=${list.scrollTop}\r\n            // list.offsetHeight=${list.offsetHeight}\r\n            // list.scrollHeight=${list.scrollHeight}`\r\n            // );\r\n        }\r\n    };\r\n\r\n    getRequest = (chatId, fromMessageId, offset, limit) => {\r\n        const { filter } = this.props;\r\n\r\n        if (filter) {\r\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\r\n                const media = MessageStore.getMedia(chatId);\r\n                if (media && media.pinned && media.pinned.length > 0) {\r\n                    return Promise.resolve({\r\n                        '@type': 'messages',\r\n                        messages: [...media.pinned]\r\n                    });\r\n                }\r\n            }\r\n\r\n            return TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                from_message_id: fromMessageId,\r\n                offset,\r\n                limit,\r\n                filter,\r\n                sender_user_id: null,\r\n                query: null\r\n            });\r\n        }\r\n\r\n        return TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: chatId,\r\n            from_message_id: fromMessageId,\r\n            offset,\r\n            limit\r\n        });\r\n    };\r\n\r\n    scrollToStart = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\r\n        if (hasLastMessage) {\r\n            this.scrollToBottom();\r\n        } else {\r\n            this.handleSelectChat(chatId, chatId, 0, messageId, true);\r\n        }\r\n    };\r\n\r\n    handleListDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId } = this.props;\r\n        if (!canSendMediaMessages(chatId)) return;\r\n\r\n        if (!event.dataTransfer) return;\r\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: true,\r\n            dataTransfer: event.dataTransfer\r\n        });\r\n    };\r\n\r\n    handleScrollDownClick = event => {\r\n        const { replyHistory } = this.state;\r\n\r\n        if (replyHistory.length > 0) {\r\n            const lastReply = replyHistory.pop();\r\n            if (lastReply) {\r\n                const { chatId, messageId } = lastReply;\r\n                if (chatId === this.props.chatId) {\r\n                    openChat(chatId, messageId);\r\n                }\r\n            }\r\n        } else {\r\n            this.scrollToStart();\r\n        }\r\n    };\r\n\r\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\r\n        if (!message) return false;\r\n\r\n        const { chat_id, date, is_outgoing, sender_id, content, forward_info } = message;\r\n\r\n        if (isFirst) {\r\n            return true;\r\n        }\r\n\r\n        if (isFirstUnread) {\r\n            return true;\r\n        }\r\n\r\n        if (isChannelChat(chat_id)) {\r\n            return true;\r\n        }\r\n\r\n        return (\r\n            prevMessage &&\r\n            (isServiceMessage(prevMessage) ||\r\n                prevMessage.content['@type'] === 'messageSticker' ||\r\n                prevMessage.content['@type'] === 'messageVideoNote' ||\r\n                !senderEquals(sender_id, prevMessage.sender_id) ||\r\n                is_outgoing !== prevMessage.is_outgoing ||\r\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\r\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\r\n        );\r\n    }\r\n\r\n    showMessageDate(message, prevMessage, isFirst) {\r\n        if (isFirst) {\r\n            return true;\r\n        }\r\n\r\n        const date = new Date(message.date * 1000);\r\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\r\n\r\n        if (\r\n            date.getFullYear() !== prevDate.getFullYear() ||\r\n            date.getMonth() !== prevDate.getMonth() ||\r\n            date.getDate() !== prevDate.getDate()\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, filter } = this.props;\r\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\r\n\r\n        // console.log('[ml] render ', history);\r\n\r\n        this.itemsMap.clear();\r\n\r\n        if (clearHistory) {\r\n            this.messages = null;\r\n        } else {\r\n            this.messages = [];\r\n            for (let i = 0; i < history.length; i++) {\r\n                const message = history[i];\r\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\r\n                let albumAdded = false;\r\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\r\n                    const album = [message];\r\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\r\n                        if (history[j].media_album_id === media_album_id) {\r\n                            album.push(history[j]);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (album.length > 1) {\r\n                        const x = message;\r\n                        const prevMessage = i > 0 ? history[i - 1] : null;\r\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\r\n\r\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\r\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        this.messages.push((\r\n                            <Album\r\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\r\n                                chatId={chat_id}\r\n                                messageIds={album.map(x => x.id)}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />));\r\n                        i += (album.length - 1);\r\n                        albumAdded = true;\r\n                    }\r\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\r\n                    const album = [message];\r\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\r\n                        if (history[j].media_album_id === media_album_id) {\r\n                            album.push(history[j]);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (album.length > 1) {\r\n                        const x = message;\r\n                        const prevMessage = i > 0 ? history[i - 1] : null;\r\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\r\n\r\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\r\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        this.messages.push((\r\n                            <DocumentAlbum\r\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\r\n                                chatId={chat_id}\r\n                                messageIds={album.map(x => x.id)}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />));\r\n                        i += (album.length - 1);\r\n                        albumAdded = true;\r\n                    }\r\n                }\r\n\r\n                if (!albumAdded) {\r\n                    /// history[4] id=5 prev\r\n                    /// history[5] id=6 current\r\n                    /// history[6] id=7 next\r\n                    /// ...\r\n                    /// history[9] id=10\r\n\r\n                    const x = message;\r\n                    const prevMessage = i > 0 ? history[i - 1] : null;\r\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\r\n\r\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                    let m = null;\r\n                    if (isServiceMessage(x)) {\r\n                        m = (\r\n                            <ServiceMessage\r\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\r\n                                ref={el => this.itemsMap.set(i, el)}\r\n                                chatId={x.chat_id}\r\n                                messageId={x.id}\r\n                                showUnreadSeparator={separatorMessageId === x.id}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />\r\n                        );\r\n                    } else {\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\r\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        m = (\r\n                            <Message\r\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => this.itemsMap.set(i, el)}\r\n                                chatId={x.chat_id}\r\n                                messageId={x.id}\r\n                                sendingState={x.sending_state}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={separatorMessageId === x.id}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    this.messages.push(m);\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={classNames('messages-list', {\r\n                    'messages-list-selection-active': selectionActive\r\n                })}\r\n                onDragEnter={this.handleListDragEnter}>\r\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\r\n                    <div className='messages-list-top' />\r\n                    <div ref={this.itemsRef} className='messages-list-items'>\r\n                        {this.messages}\r\n                    </div>\r\n                </div>\r\n                <div className='messages-list-top-panel'>\r\n                    <GroupCallJoinPanel chatId={chatId}/>\r\n                    <ActionBar chatId={chatId} />\r\n                </div>\r\n                <Placeholder />\r\n                {scrollDownVisible && (\r\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\r\n                )}\r\n                <FilesDropTarget />\r\n                <StickersHint />\r\n                {/*<InputBoxHints />*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMessagesList.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number,\r\n    options: PropTypes.object,\r\n    filter: PropTypes.object\r\n};\r\n\r\nexport default MessagesList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport HeaderCommand from './HeaderCommand';\r\nimport { clearSelection, closePinned } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './PinnedMessagesHeader.css'\r\n\r\nclass PinnedMessagesHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const media = MessageStore.getMedia(props.chatId);\r\n\r\n        this.state = {\r\n            selectedCount: MessageStore.selectedItems.size,\r\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { selectedCount, pinnedCount } = this.state;\r\n\r\n        if (nextState.selectedCount !== selectedCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.pinnedCount !== pinnedCount) {\r\n            return true;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n    }\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\r\n\r\n        this.setState({\r\n            pinnedCount\r\n        });\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\r\n\r\n        this.setState({\r\n            pinnedCount\r\n        });\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        this.setState({\r\n            selectedCount: MessageStore.selectedItems.size\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        const { selectedCount } = this.state;\r\n        if (selectedCount > 0) {\r\n            clearSelection();\r\n        }\r\n\r\n        closePinned();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { selectedCount, pinnedCount } = this.state;\r\n\r\n        let title = t('PinnedMessages');\r\n        if (pinnedCount === 1) {\r\n            title = t('PinnedMessage');\r\n        } else if (pinnedCount > 1) {\r\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\r\n                <IconButton\r\n                    className='header-left-button main-menu-button'\r\n                    onClick={this.handleClose}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-details-content'>\r\n                    <HeaderCommand count={selectedCount}/>\r\n                    <div className={classNames('header-status', 'grow')}>\r\n                        <span className='header-status-content'>{title}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nPinnedMessagesHeader.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(PinnedMessagesHeader);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FooterCommand from './FooterCommand';\r\nimport MessagesList from './MessagesList';\r\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\r\nimport { requestUnpinMessage } from '../../Actions/Client';\r\nimport { canPinMessages } from '../../Utils/Chat';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './PinnedMessages.css';\r\n\r\nclass PinnedMessages extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevChatId } = state;\r\n        const { chatId } = props;\r\n        if (prevChatId !== chatId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                opened: false\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\r\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\r\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\r\n    }\r\n\r\n    onClientUpdateOpenPinned = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId } = update;\r\n\r\n        if (currentChatId !== chatId) return;\r\n\r\n        this.setState({\r\n            opened: true\r\n        });\r\n    };\r\n\r\n    onClientUpdateClosePinned = update => {\r\n        this.setState({\r\n            opened: false\r\n        });\r\n    };\r\n\r\n    handleUnpinAll = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestUnpinMessage(chatId, null);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { opened } = this.state;\r\n        if (!opened) return null;\r\n\r\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\r\n\r\n        return (\r\n            <div className='pinned-messages'>\r\n                <div className='pinned-messages-wrapper'>\r\n                    <div className='dialog-background'/>\r\n                    <div className='dialog-details-wrapper'>\r\n                        <PinnedMessagesHeader chatId={chatId} />\r\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\r\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        // return (\r\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\r\n        //\r\n        //     </SidebarPage>\r\n        // );\r\n    }\r\n}\r\n\r\nPinnedMessages.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(PinnedMessages);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { copy } from '../../Utils/Text';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport MoreIcon from '../../Assets/Icons/More';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { forward } from '../../Actions/Client';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass ShareStickerSetButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.handleOpen(event.currentTarget);\r\n    };\r\n\r\n    handleOpen = anchorEl => {\r\n        this.setState({ anchorEl });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        this.handleClose();\r\n\r\n        const { t } = this.props;\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        copy(link);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    getStickersLink = stickerSet => {\r\n        if (!stickerSet) return '';\r\n\r\n        const { name } = stickerSet;\r\n        if (!name) return '';\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n\r\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleShare = () => {\r\n        this.handleClose();\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n\r\n        const inputMessageContent = {\r\n            '@type': 'inputMessageText',\r\n            text: {\r\n                '@type': 'formattedText',\r\n                text: link,\r\n                entities: null\r\n            },\r\n            disable_web_page_preview: false,\r\n            clear_draft: false\r\n        };\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    render() {\r\n        const { t, className } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className={className}\r\n                    aria-label='Share'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='sticker-set-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableEnforceFocus={true}\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    onClose={this.handleClose}>\r\n                    <MenuItem onClick={this.handleCopyLink}>\r\n                        <ListItemIcon>\r\n                            <LinkIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('CopyLink')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleShare}>\r\n                        <ListItemIcon>\r\n                            <ShareIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('StickersShare')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nShareStickerSetButton.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ShareStickerSetButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ShareStickerSetButton from './ShareStickerSetButton';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\r\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerSetDialog.css';\r\n\r\nclass StickerSetDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.contentRef = React.createRef();\r\n\r\n        this.state = {\r\n            stickerSet: StickerStore.stickerSet,\r\n            stickerId: 0,\r\n            scroll: false,\r\n            scrollTop: false,\r\n            scrollBottom: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\r\n\r\n        if (stickerSet !== nextState.stickerSet) {\r\n            return true;\r\n        }\r\n\r\n        if (sticker !== nextState.sticker) {\r\n            return true;\r\n        }\r\n\r\n        if (scroll !== nextState.scroll) {\r\n            return true;\r\n        }\r\n\r\n        if (scrollTop !== nextState.scrollTop) {\r\n            return true;\r\n        }\r\n\r\n        if (scrollBottom !== nextState.scrollBottom) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    handleUpdateInstalledStickerSets = update => {\r\n        const { stickerSet } = StickerStore;\r\n\r\n        this.setState({ stickerSet });\r\n    };\r\n\r\n    handleClientUpdateStickerSet = update => {\r\n        const { stickerSet } = update;\r\n\r\n        this.setState({ stickerSet }, () => {\r\n            setTimeout(() => {\r\n                this.handleScroll();\r\n            }, 0);\r\n        });\r\n\r\n        if (stickerSet) {\r\n            const store = FileStore.getStore();\r\n            loadStickerSetContent(store, stickerSet);\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return;\r\n\r\n        const { is_installed } = stickerSet;\r\n\r\n        TdLibController.send({\r\n            '@type': 'changeStickerSet',\r\n            set_id: stickerSet.id,\r\n            is_installed: !is_installed\r\n        });\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        const { stickers } = stickerSet;\r\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return [];\r\n\r\n        const { stickers } = stickerSet;\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const STICKERS_PER_ROW = 5;\r\n        const row = Math.floor(index / STICKERS_PER_ROW);\r\n        const column = index % STICKERS_PER_ROW;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\r\n        }\r\n        if (nextColumn < STICKERS_PER_ROW) {\r\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    // handleMouseOver = event => {\r\n    //     const stickerId = Number(event.target.dataset.stickerId);\r\n    //     if (!stickerId) return;\r\n    //\r\n    //     if (!this.mouseDown) return;\r\n    //\r\n    //     this.setState({ stickerId });\r\n    //     this.loadPreviewContent(stickerId);\r\n    // };\r\n\r\n    // handleMouseDown = event => {\r\n    //     const stickerId = Number(event.target.dataset.stickerId);\r\n    //     if (!stickerId) return;\r\n    //\r\n    //     this.setState({ stickerId });\r\n    //     this.loadPreviewContent(stickerId);\r\n    //\r\n    //     this.mouseDown = true;\r\n    //     document.addEventListener('mouseup', this.handleMouseUp);\r\n    //\r\n    //     event.preventDefault();\r\n    //     event.stopPropagation();\r\n    //     return false;\r\n    // };\r\n\r\n    getSticker(stickerId) {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { stickers } = stickerSet;\r\n\r\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\r\n    }\r\n\r\n    handleMouseUp = () => {\r\n        const sticker = null;\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const content = this.contentRef.current;\r\n        if (!content) {\r\n            return;\r\n        }\r\n\r\n        const hasScroll = content.scrollHeight > content.offsetHeight;\r\n        const scrollTop = hasScroll && content.scrollTop === 0;\r\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\r\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\r\n\r\n        this.setState({\r\n            scrollTop,\r\n            scrollBottom,\r\n            scroll\r\n        });\r\n    }\r\n\r\n    handleInViewport = (fileId, elementRect) => {\r\n        const { current } = this.contentRef;\r\n        if (!current) return false;\r\n\r\n        const contentRect = current.getBoundingClientRect();\r\n        const top = elementRect.top - contentRect.top;\r\n        const bottom = elementRect.bottom - contentRect.bottom;\r\n        // below bottom edge\r\n        if (top > contentRect.height) {\r\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\r\n            return false;\r\n        }\r\n        // upper top edge\r\n        if (bottom < - contentRect.height) {\r\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\r\n            return false;\r\n        }\r\n\r\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\r\n        return true;\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { title, stickers, is_installed } = stickerSet;\r\n\r\n        const items = stickers.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseDown={this.handleMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    sticker={x}\r\n                    autoplay={true}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    preview\r\n                    source={StickerSourceEnum.STICKER_SET}\r\n                    inViewportFunc={this.handleInViewport}\r\n                />\r\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <Dialog\r\n                className={classNames(\r\n                    'sticker-set-dialog',\r\n                    { 'sticker-set-dialog-scroll': scroll },\r\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\r\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\r\n                )}\r\n                open\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='sticker-set-dialog-title-text'\r\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\r\n                <DialogTitle\r\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\r\n                    disableTypography>\r\n                    <IconButton\r\n                        aria-label='Close'\r\n                        onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                    <ShareStickerSetButton />\r\n                </DialogTitle>\r\n                <DialogContent\r\n                    ref={this.contentRef}\r\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onScroll={this.handleScroll}>\r\n                    {items}\r\n                </DialogContent>\r\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\r\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\r\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\r\n                    </Button>\r\n                </DialogActions>\r\n                {<StickerPreview sticker={sticker} />}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nStickerSetDialog.propTypes = {};\r\n\r\nexport default withTranslation()(StickerSetDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { closeChatSelect } from '../../Actions/Message';\r\nimport './SelectChatPlaceholder.css';\r\n\r\nclass SelectChatPlaceholder extends React.Component {\r\n\r\n    handleClick = () => {\r\n        closeChatSelect();\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n\r\n        return (\r\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\r\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSelectChatPlaceholder.propTypes = {};\r\n\r\nexport default withTranslation()(SelectChatPlaceholder);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\r\nimport Footer from './Footer';\r\nimport GroupCallTopPanel from '../Calls/GroupCallTopPanel';\r\nimport Header from './Header';\r\nimport HeaderPlayer from '../Player/HeaderPlayer';\r\nimport MessagesList from './MessagesList';\r\nimport PinnedMessages from './PinnedMessages';\r\nimport StickerSetDialog from '../Popup/StickerSetDialog';\r\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\r\nimport { getSrc } from '../../Utils/File';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './DialogDetails.css';\r\n\r\nclass DialogDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatId: AppStore.getChatId(),\r\n            messageId: AppStore.getMessageId(),\r\n            selectedCount: 0,\r\n            wallpaper: null,\r\n            wallpaperSrc: null,\r\n            chatSelectOptions: null,\r\n            chatOpenOptions: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\r\n        if (nextState.chatId !== chatId) {\r\n            return true;\r\n        }\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n        if (nextState.selectedCount !== selectedCount) {\r\n            return true;\r\n        }\r\n        if (nextState.wallpaper !== wallpaper) {\r\n            return true;\r\n        }\r\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\r\n            return true;\r\n        }\r\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\r\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\r\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\r\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\r\n        ChatStore.off('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateClearOpenChatOptions = update => {\r\n        this.setState({\r\n            chatOpenOptions: null\r\n        });\r\n    }\r\n\r\n    onClientUpdateChatSelect = update => {\r\n        const { options } = update;\r\n\r\n        this.setState({\r\n            chatSelectOptions: options\r\n        });\r\n    };\r\n\r\n    onClientUpdateDocumentBlob = update => {\r\n        const { wallpaper } = this.state;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { document: file } = document;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        if (this.thumbnailTime) {\r\n            if (this.thumbnailTime.wallpaper === wallpaper) {\r\n                const diff = new Date() - this.thumbnailTime.time;\r\n                if (diff < 250) {\r\n                    setTimeout(() => {\r\n                        this.forceUpdate();\r\n                    }, 250);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { wallpaper } = this.state;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.thumbnailTime = {\r\n            wallpaper,\r\n            time: new Date()\r\n        };\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatBackground = update => {\r\n        const { wallpaper } = update;\r\n\r\n        this.thumbnailTime = {\r\n            wallpaper,\r\n            time: new Date()\r\n        };\r\n        this.setState({\r\n            wallpaper\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatSelectOptions } = this.state;\r\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\r\n\r\n        this.setState({\r\n            chatId,\r\n            messageId,\r\n            chatOpenOptions,\r\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\r\n        });\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesList.scrollToBottom();\r\n    };\r\n\r\n    scrollToStart = () => {\r\n        this.messagesList.scrollToStart();\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        this.messagesList.scrollToMessage();\r\n    };\r\n\r\n    render() {\r\n        /*let groups = [];\r\n        if (this.props.history.length > 0){\r\n            let currentGroup = {\r\n                key: this.props.history[0].id,\r\n                date: this.props.history[0].date,\r\n                senderUserId: this.props.history[0].sender_user_id,\r\n                messages: [this.props.history[0]]\r\n            };\r\n\r\n            for (let i = 1; i < this.props.history.length; i++){\r\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\r\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\r\n                    && i % 20 !== 0){\r\n                    currentGroup.key += '_' + this.props.history[i].id;\r\n                    currentGroup.messages.push(this.props.history[i]);\r\n                }\r\n                else {\r\n                    groups.push(currentGroup);\r\n                    currentGroup = {\r\n                        key: this.props.history[i].id,\r\n                        date: this.props.history[i].date,\r\n                        senderUserId: this.props.history[i].sender_user_id,\r\n                        messages: [this.props.history[i]]\r\n                    };\r\n                }\r\n            }\r\n            groups.push(currentGroup);\r\n        }\r\n\r\n        this.groups = groups.map(x => {\r\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\r\n        });*/\r\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\r\n\r\n        let style = null;\r\n        let src = null;\r\n        if (wallpaper) {\r\n            const { document } = wallpaper;\r\n            if (document) {\r\n                const { thumbnail, document: file } = document;\r\n                if (file) {\r\n                    src = getSrc(file);\r\n                }\r\n\r\n                if (!src && thumbnail) {\r\n                    src = getSrc(thumbnail.file);\r\n                }\r\n            }\r\n\r\n            style = {\r\n                backgroundImage: src ? `url(${src})` : null\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='dialog-details' style={style}>\r\n                <div className='dialog-background'/>\r\n                <div className='dialog-details-wrapper'>\r\n                    <GroupCallTopPanel/>\r\n                    <HeaderPlayer />\r\n                    <Header chatId={chatId} />\r\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\r\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\r\n                </div>\r\n                {chatSelectOptions && <SelectChatPlaceholder/>}\r\n                <PinnedMessages chatId={chatId}/>\r\n                <StickerSetDialog />\r\n                <ChatInfoDialog />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogDetails;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ChatTile from './ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './ForwardTargetChat.css';\r\n\r\nclass ForwardTargetChat extends React.Component {\r\n    render() {\r\n        const { chatId, selected, onSelect, t } = this.props;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, true, t);\r\n\r\n        return (\r\n            <div\r\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\r\n                onClick={onSelect}>\r\n                <div className='forward-target-chat-tile'>\r\n                    <div className='forward-target-chat-tile-wrapper'>\r\n                        <ChatTile chatId={chatId} />\r\n                    </div>\r\n                    {selected && <div className='forward-target-chat-selection' />}\r\n                    <div\r\n                        className={classNames(\r\n                            'forward-target-chat-mark',\r\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\r\n                        )}\r\n                    />\r\n                    <div className='forward-target-chat-mark-icon' />\r\n                </div>\r\n                <div className='forward-target-chat-title'>{shortTitle}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForwardTargetChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    selected: PropTypes.bool,\r\n    onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(ForwardTargetChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\r\nimport { copy } from '../../Utils/Text';\r\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\r\nimport { clearSelection, forward } from '../../Actions/Client';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { CHAT_IDS_AUTHORIZED, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ForwardDialog.css';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\n\r\nclass ForwardDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: [],\r\n            savedMessages: null\r\n        };\r\n\r\n        this.searchRef = React.createRef();\r\n        this.messageRef = React.createRef();\r\n\r\n        this.targetChats = new Map();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        this.setSearchFocus();\r\n    }\r\n\r\n    loadContent = async () => {\r\n        this.getPublicMessageLink();\r\n\r\n        const promises = [];\r\n        const getChatsPromise = TdLibController.send({\r\n            '@type': 'getChats',\r\n            limit: 100\r\n        });\r\n        promises.push(getChatsPromise);\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        });\r\n        promises.push(savedMessagesPromise);\r\n\r\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\r\n        chats.chat_ids = chats.chat_ids.filter(x => CHAT_IDS_AUTHORIZED.includes(x));\r\n\r\n        this.setState({\r\n            chatIds: chats.chat_ids,\r\n            savedMessages: savedMessages\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chats.chat_ids);\r\n    };\r\n\r\n    getPublicMessageLink = async () => {\r\n        const { chatId, messageIds } = this.props;\r\n        if (!chatId) return;\r\n        if (!messageIds) return;\r\n        if (messageIds.length > 1) return;\r\n        if (!isSupergroup(chatId)) return;\r\n        if (!getChatUsername(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getMessageLink',\r\n            chat_id: chatId,\r\n            message_id: messageIds[0],\r\n            for_album: false,\r\n            for_comment: false\r\n        });\r\n\r\n        this.setState({\r\n            publicMessageLink: result\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        forward(null);\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        const { t } = this.props;\r\n        const { publicMessageLink } = this.state;\r\n\r\n        if (!publicMessageLink) return;\r\n        if (!publicMessageLink.link) return;\r\n\r\n        copy(publicMessageLink.link);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    getForwardPhotoSize = (chatId, messageIds) => {\r\n        if (messageIds.length !== 1) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageIds[0]);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\r\n            const { photo } = content;\r\n            if (!photo) return null;\r\n\r\n            const { sizes } = photo;\r\n            if (sizes && sizes.length) {\r\n                return sizes[sizes.length - 1];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleSend = () => {\r\n        this.handleClose();\r\n        clearSelection();\r\n\r\n        const { chatId, messageIds, inputMessageContent } = this.props;\r\n        if (!chatId && !messageIds && !inputMessageContent) return;\r\n\r\n        const text = this.getInnerText(this.messageRef.current);\r\n\r\n        messageIds.sort();\r\n\r\n        this.targetChats.forEach(async targetChatId => {\r\n            if (inputMessageContent) {\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                if (text) {\r\n                    if ('caption' in inputMessageContent) {\r\n                        inputMessageContent.caption = {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        };\r\n                    } else {\r\n                        TdLibController.send({\r\n                            '@type': 'sendMessage',\r\n                            chat_id: targetChatId,\r\n                            reply_to_message_id: 0,\r\n                            disable_notifications: false,\r\n                            from_background: false,\r\n                            reply_markup: null,\r\n                            input_message_content: {\r\n                                '@type': 'inputMessageText',\r\n                                text: {\r\n                                    '@type': 'formattedText',\r\n                                    text,\r\n                                    entities: null\r\n                                },\r\n                                disable_web_page_preview: false,\r\n                                clear_draft: false\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: inputMessageContent\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            const size = this.getForwardPhotoSize(chatId, messageIds);\r\n            if (size) {\r\n                const { width, height, photo } = size;\r\n\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessagePhoto',\r\n                        photo: {\r\n                            '@type': 'inputFileId',\r\n                            id: photo.id\r\n                        },\r\n                        thumbnail: null,\r\n                        added_sticker_file_ids: [],\r\n                        width: width,\r\n                        height: height,\r\n                        caption: {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        },\r\n                        ttl: 0\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            if (text) {\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessageText',\r\n                        text: {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        },\r\n                        disable_web_page_preview: false,\r\n                        clear_draft: false\r\n                    }\r\n                });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'forwardMessages',\r\n                chat_id: targetChatId,\r\n                from_chat_id: chatId,\r\n                message_ids: messageIds,\r\n                disable_notifications: false,\r\n                from_background: false,\r\n                as_album: false\r\n            });\r\n        });\r\n    };\r\n\r\n    handleChangeSelection = chatId => {\r\n        if (this.targetChats.has(chatId)) {\r\n            this.targetChats.delete(chatId);\r\n        } else {\r\n            this.targetChats.set(chatId, chatId);\r\n        }\r\n\r\n        // console.log(this.targetChats);\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    getInnerText = element => {\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        return innerText;\r\n    };\r\n\r\n    handleSearchKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleSearchKeyUp = async () => {\r\n        const { chatIds, savedMessages } = this.state;\r\n\r\n        const element = this.searchRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n\r\n        const innerText = this.getInnerText(element).trim();\r\n        if (!innerText) {\r\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\r\n            return;\r\n        }\r\n\r\n        const latinText = getLatinInput(innerText);\r\n        const cyrillicText = getCyrillicInput(innerText);\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\r\n            : chatIds;\r\n\r\n        const searchResults = chatsSource.filter(\r\n            x =>\r\n                this.hasSearchText(x, innerText) ||\r\n                (latinText && this.hasSearchText(x, latinText)) ||\r\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\r\n        );\r\n\r\n        this.setState({ searchText: innerText, searchResults });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatsOnServer',\r\n            query: innerText,\r\n            limit: 100\r\n        });\r\n\r\n        if (this.state.searchText !== innerText) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            globalSearchResults: result.chat_ids\r\n        });\r\n    };\r\n\r\n    handleSearchPaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleMessageKeyUp = () => {\r\n        const element = this.messageRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    handleMessagePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    hasSearchText = (chatId, searchText) => {\r\n        const { t } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (savedMessages && chatId === savedMessages.id) {\r\n            const title = getChatTitle(chatId, true, t) || '';\r\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        const title1 = getChatTitle(chatId, false, t) || '';\r\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        const username = getChatUsername(chatId) || '';\r\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setSearchFocus = () => {\r\n        setTimeout(() => {\r\n            if (this.searchRef.current) {\r\n                const element = this.searchRef.current;\r\n\r\n                element.focus();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatIds,\r\n            searchText,\r\n            searchResults,\r\n            globalSearchResults,\r\n            savedMessages,\r\n            publicMessageLink\r\n        } = this.state;\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\r\n            : chatIds;\r\n\r\n        const chats = chatsSource.map(x => (\r\n            <ForwardTargetChat\r\n                key={x}\r\n                chatId={x}\r\n                selected={this.targetChats.has(x)}\r\n                onSelect={() => this.handleChangeSelection(x)}\r\n            />\r\n        ));\r\n\r\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\r\n        const filteredResults = (globalSearchResults || []).filter(\r\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\r\n        );\r\n\r\n        const foundChats = (searchResults || [])\r\n            .concat(filteredResults)\r\n            .map(x => (\r\n                <ForwardTargetChat\r\n                    key={x}\r\n                    chatId={x}\r\n                    selected={this.targetChats.has(x)}\r\n                    onSelect={() => this.handleChangeSelection(x)}\r\n                />\r\n            ));\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='forward-dialog-title'\r\n                aria-describedby='forward-dialog-description'\r\n                className='forward-dialog'>\r\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\r\n                <div\r\n                    ref={this.searchRef}\r\n                    id='forward-dialog-search'\r\n                    className='scrollbars-hidden'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Search')}\r\n                    onKeyDown={this.handleSearchKeyDown}\r\n                    onKeyUp={this.handleSearchKeyUp}\r\n                    onPaste={this.handleSearchPaste}\r\n                />\r\n                <div className='forward-dialog-content'>\r\n                    <div className='forward-dialog-list'>{chats}</div>\r\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\r\n                </div>\r\n                {this.targetChats.size > 0 && (\r\n                    <div\r\n                        ref={this.messageRef}\r\n                        id='forward-dialog-message'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('ShareComment')}\r\n                        onKeyUp={this.handleMessageKeyUp}\r\n                        onPaste={this.handleMessagePaste}\r\n                    />\r\n                )}\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    {this.targetChats.size > 0 && (\r\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\r\n                            {t('Send')}\r\n                        </Button>\r\n                    )}\r\n                    {!this.targetChats.size && publicMessageLink && (\r\n                        <Button onClick={this.handleCopyLink} color='primary'>\r\n                            {t('CopyLink')}\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nForwardDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageIds: PropTypes.array,\r\n    inputMessageContent: PropTypes.object\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ForwardDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BlobDrawable, {\r\n    AMPLITUDE_SPEED,\r\n    FORM_BIG_MAX,\r\n    FORM_SMALL_MAX, LIGHT_GRADIENT_SIZE,\r\n    SCALE_BIG,\r\n    SCALE_BIG_MIN,\r\n    SCALE_SMALL,\r\n    SCALE_SMALL_MIN\r\n} from './BlobDrawable';\r\nimport {\r\n    MUTE_BUTTON_STATE_CONNECTING,\r\n    MUTE_BUTTON_STATE_MUTE,\r\n    MUTE_BUTTON_STATE_MUTED_BY_ADMIN,\r\n    MUTE_BUTTON_STATE_UNMUTE\r\n} from './TopBar';\r\nimport { stopPropagation } from '../../Utils/Message';\r\n\r\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/OvershootInterpolator.java\r\nclass OvershootInterpolator {\r\n    constructor(tension) {\r\n        this.mTension = tension;\r\n    }\r\n\r\n    getInterpolation(t) {\r\n        // _o(t) = t * t * ((tension + 1) * t + tension)\r\n        // o(t) = _o(t - 1) + 1\r\n        t -= 1.0;\r\n        return t * t * ((this.mTension + 1) * t + this.mTension) + 1.0;\r\n    }\r\n}\r\n\r\n// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/DecelerateInterpolator.java\r\nclass DecelerateInterpolator {\r\n    constructor(factor) {\r\n        this.mFactor = factor || 1.0;\r\n    }\r\n\r\n    getInterpolation(input) {\r\n        let result;\r\n        if (this.mFactor === 1.0) {\r\n            result = 1.0 - (1.0 - input) * (1.0 - input);\r\n        } else {\r\n            result = 1.0 - Math.pow((1.0 - input), 2 * this.mFactor);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/AccelerateInterpolator.java\r\nclass AccelerateInterpolator {\r\n    constructor(factor) {\r\n        this.mFactor = factor || 1.0;\r\n        this.mDoubleFactor = 2 * this.mFactor;\r\n    }\r\n\r\n    getInterpolation(input) {\r\n        if (this.mFactor === 1.0) {\r\n            return input * input;\r\n        }\r\n\r\n        return Math.pow(input, this.mDoubleFactor);\r\n    }\r\n}\r\n\r\nclass WeavingState {\r\n    constructor(stateId) {\r\n        this.stateId = stateId;\r\n        this.shader = (ctx, left, top, right, bottom) => { };\r\n        this.createGradient(stateId);\r\n    }\r\n\r\n    createGradient(stateId) {\r\n        this.shader = (ctx, left, top, right, bottom) => {\r\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\r\n        };\r\n    }\r\n\r\n    update(top, left, size, dt) {\r\n        // TODO: move gradient here\r\n    }\r\n\r\n    // Android colors\r\n    static getGradientFromType(ctx, type, left, top, right, bottom) {\r\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\r\n            const gradient = ctx.createLinearGradient(0, 100, 100, 0);\r\n\r\n            gradient.addColorStop(0, '#57A4FE');\r\n            gradient.addColorStop(.3, '#766EE9');\r\n            gradient.addColorStop(1, '#F05459');\r\n\r\n            return gradient;\r\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\r\n            const gradient=ctx.createRadialGradient(0,50,0,0,50,200);\r\n\r\n            gradient.addColorStop(0, '#77E55C');\r\n            gradient.addColorStop(1, '#56C7FE');\r\n\r\n            return gradient;\r\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\r\n            const gradient = ctx.createRadialGradient(0,50,0,0,50,200);\r\n\r\n            gradient.addColorStop(0, '#66D4FB');\r\n            gradient.addColorStop(1, '#539EF8');\r\n\r\n            return gradient;\r\n        } else {\r\n            const gradient = ctx.createLinearGradient(0, 400, 400, 0);\r\n\r\n            gradient.addColorStop(0, '#2B333E');\r\n            gradient.addColorStop(1, '#2B333E');\r\n\r\n            return gradient;\r\n        }\r\n    }\r\n}\r\n\r\nclass RadialProgressView {\r\n    constructor() {\r\n        this.decelerateInterpolator = new DecelerateInterpolator();\r\n        this.accelerateInterpolator = new AccelerateInterpolator();\r\n\r\n        this.lineCap = 'round';\r\n        this.lineWidth = 3;\r\n        this.progressColor = '#1C93E3';\r\n        this.updateProgressPaint();\r\n\r\n        this.lastUpdateTime = 0;\r\n        this.radOffset = 0;\r\n        this.currentCircleLength = 0;\r\n        this.risingCircleLength = false;\r\n        this.currentProgressTime = 0;\r\n        this.useSelfAlpha = false;\r\n        this.drawingCircleLength = 0;\r\n\r\n        this.rotationTime = 2000;\r\n        this.risingTime = 500;\r\n        this.size = 0;\r\n\r\n        this.currentProgress = 0;\r\n        this.progressAnimationStart = 0;\r\n        this.progressTime = 0;\r\n        this.animatedProgress = 0;\r\n        this.circle = false;\r\n        this.circleProgress = 0;\r\n        this.noProgress = true;\r\n    }\r\n\r\n    setUseSelfAlpha = value => {\r\n        this.useSelfAlpha = value;\r\n    };\r\n\r\n    setAlpha = alpha => {\r\n        console.log('[rpv] setAlpha', alpha);\r\n    };\r\n\r\n    setNoProgress = value => {\r\n        this.noProgress = value;\r\n    };\r\n\r\n    setProgress = value => {\r\n        this.currentProgress = value;\r\n        if (this.animatedProgress > value) {\r\n            this.animatedProgress = value;\r\n        }\r\n\r\n        this.progressAnimationStart = this.animatedProgress;\r\n        this.progressTime = 0;\r\n    };\r\n\r\n    updateAnimation = () => {\r\n        const newTime = new Date();\r\n        let dt = newTime - this.lastUpdateTime;\r\n        if (dt > 17) {\r\n            dt = 17;\r\n        }\r\n        this.lastUpdateTime = newTime;\r\n\r\n        this.radOffset += 360 * dt / this.rotationTime;\r\n        let count = Math.trunc(this.radOffset / 360);\r\n        this.radOffset -= count * 360;\r\n\r\n        if (this.circle && this.circleProgress !== 1.0) {\r\n            this.circleProgress += 16 / 220;\r\n            if (this.circleProgress > 1.0) {\r\n                this.circleProgress = 1.0;\r\n            }\r\n        } else if (!this.circle && this.circleProgress !== 0.0) {\r\n            this.circleProgress -= 16 / 400;\r\n            if (this.circleProgress < 0) {\r\n                this.circleProgress = 0;\r\n            }\r\n        }\r\n\r\n        if (this.noProgress) {\r\n            if (this.circleProgress === 0) {\r\n                this.currentProgressTime += dt;\r\n                if (this.currentProgressTime >= this.risingTime) {\r\n                    this.currentProgressTime = this.risingTime;\r\n                }\r\n                if (this.risingCircleLength) {\r\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\r\n                } else {\r\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\r\n                }\r\n\r\n                if (this.currentProgressTime === this.risingTime) {\r\n                    if (this.risingCircleLength) {\r\n                        this.radOffset += 270;\r\n                        this.currentCircleLength = -266;\r\n                    }\r\n\r\n                    this.risingCircleLength = !this.risingCircleLength;\r\n                    this.currentProgressTime = 0;\r\n                }\r\n            } else {\r\n                if (this.risingCircleLength) {\r\n                    const old = this.currentCircleLength;\r\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\r\n                    this.currentCircleLength += 360 * this.circleProgress;\r\n                    const dx = old - this.currentCircleLength;\r\n                    if (dx > 0) {\r\n                        this.radOffset += old - this.currentCircleLength;\r\n                    }\r\n                } else {\r\n                    const old = this.currentCircleLength;\r\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\r\n                    this.currentCircleLength -= 364 * this.circleProgress;\r\n                    const dx = old - this.currentCircleLength;\r\n                    if (dx > 0) {\r\n                        this.radOffset += old - this.currentCircleLength;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            let progressDiff = this.currentProgress - this.progressAnimationStart;\r\n            if (progressDiff > 0) {\r\n                progressDiff += dt;\r\n                if (this.progressTime >= 200) {\r\n                    this.animatedProgress = this.progressAnimationStart = this.currentProgress;\r\n                    this.progressTime = 0;\r\n                } else {\r\n                    this.animatedProgress = this.progressAnimationStart + progressDiff * this.decelerateInterpolator.getInterpolation(this.progressTime / 200);\r\n                }\r\n            }\r\n            this.currentCircleLength = Math.max(4, 360 * this.animatedProgress);\r\n        }\r\n    };\r\n\r\n    setSize = size => {\r\n        this.size = size;\r\n    };\r\n\r\n    setStrokeWidth = value => {\r\n        this.lineWidth = value;\r\n        this.updateProgressPaint();\r\n    };\r\n\r\n    setProgressColor = color => {\r\n        this.progressColor = color;\r\n        this.updateProgressPaint();\r\n    };\r\n\r\n    updateProgressPaint() {\r\n        this.progressPaint = ctx => {\r\n            if (this.lineCap) {\r\n                ctx.lineCap = this.lineCap;\r\n            }\r\n            if (this.lineWidth) {\r\n                ctx.lineWidth = this.lineWidth;\r\n            }\r\n            if (this.progressColor) {\r\n                ctx.strokeStyle = this.progressColor;\r\n            }\r\n        };\r\n    }\r\n\r\n    toCircle = (toCircle, animated) => {\r\n        this.circle = toCircle;\r\n        if (!animated) {\r\n            this.circleProgress = this.circle ? 1.0 : 0.0;\r\n        }\r\n    }\r\n\r\n    draw = (canvas, cx, cy, scale = 1) => {\r\n        this.circleRect = { x0: cx - this.size / 2, y0: cy - this.size / 2, x1: cx + this.size / 2, y1: cy + this.size / 2 };\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            ctx.save();\r\n            ctx.beginPath();\r\n            ctx.translate(cx, cy);\r\n            ctx.scale(scale, scale);\r\n            ctx.beginPath();\r\n            if (!this.risingCircleLength) {\r\n                if ((this.radOffset + this.currentCircleLength) > this.radOffset) {\r\n                    this.currentCircleLength = 0;\r\n                }\r\n            }\r\n\r\n            const radStart = this.radOffset * Math.PI / 180;\r\n            this.drawingCircleLength = this.currentCircleLength;\r\n            const radLength = this.drawingCircleLength * Math.PI / 180;\r\n\r\n\r\n            ctx.arc(0, 0, this.size / 2, radStart, radStart + radLength, !this.risingCircleLength);\r\n            this.progressPaint(ctx);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n\r\n            this.updateAnimation();\r\n        }\r\n    }\r\n\r\n    isCircle = () => {\r\n        return Math.abs(this.drawingCircleLength) >= 360;\r\n    }\r\n}\r\n\r\nclass Button extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.focused = true;\r\n        this.radialPaint = ctx => { };\r\n        this.paint = ctx => { };\r\n        this.paintTmp = ctx => { };\r\n        this.lastUpdateTime = new Date();\r\n        this.amplitude = 0.0;\r\n\r\n        this.states = [\r\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\r\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\r\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\r\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\r\n        ];\r\n        this.switchProgress = 1.0;\r\n        this.muteButtonState = MUTE_BUTTON_STATE_MUTE;\r\n        this.prevState = null;\r\n        this.currentState = this.states[this.muteButtonState];\r\n        this.progressToState = 1.0;\r\n\r\n        this.showLightingProgress = 1.0;\r\n        this.showWavesProgress = 1.0;\r\n        this.overshootInterpolator = new OvershootInterpolator(1.5);\r\n        this.colorsTmp = new Array(3);\r\n\r\n        this.scale = window.devicePixelRatio;\r\n        this.left = 0 * this.scale;\r\n        this.top = 0 * this.scale;\r\n        this.right = 380 * this.scale;\r\n        this.bottom = (220 + 28) * this.scale;\r\n        this.cx = 190 * this.scale;\r\n        this.cy = (110 + 28) * this.scale;\r\n\r\n        this.buttonDefaultRadius = 57;\r\n        this.buttonRadius = 52;\r\n        this.strokeWidth = 4;\r\n        this.invalidateColors = true;\r\n        this.radialProgressView = new RadialProgressView();\r\n        this.radialProgressView.setSize(this.buttonRadius * 2 - this.strokeWidth);\r\n        this.radialProgressView.setStrokeWidth(this.strokeWidth);\r\n        this.radialProgressView.setProgressColor('#28BAFF');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        window.addEventListener('blur', this.handleBlur);\r\n        window.addEventListener('focus', this.handleFocus);\r\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\r\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\r\n\r\n\r\n        this.canvas = document.getElementById('button-canvas');\r\n        this.tinyWaveDrawable = new BlobDrawable(9);\r\n        this.bigWaveDrawable = new BlobDrawable(12);\r\n\r\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.tinyWaveDrawable.maxRadius = Math.trunc(72 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.tinyWaveDrawable.generateInitBlob();\r\n\r\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.bigWaveDrawable.maxRadius = Math.trunc(75 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.bigWaveDrawable.generateInitBlob();\r\n\r\n        const color = '#66D4FB';\r\n        this.radialGradient = ctx => {\r\n            const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 160);\r\n            gradient.addColorStop(0, color + '32');\r\n            gradient.addColorStop(1, color + '00');\r\n\r\n            ctx.fillStyle = gradient;\r\n        };\r\n        this.radialPaint = this.radialGradient;\r\n\r\n        this.setAmplitude(this.amplitude);\r\n\r\n        // console.log('[button] componentDidMount draw');\r\n        this.draw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        window.removeEventListener('blur', this.handleBlur);\r\n        window.removeEventListener('focus', this.handleFocus);\r\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\r\n    }\r\n\r\n    handleFocus = () => {\r\n        this.focused = true;\r\n        this.invokeDraw();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        this.focused = false;\r\n    }\r\n\r\n    invokeDraw = () => {\r\n        if (this.raf) return;\r\n\r\n        this.draw();\r\n    }\r\n\r\n    handleDevicePixelRatioChanged = e => {\r\n        this.scale = window.devicePixelRatio;\r\n        this.left = 0 * this.scale;\r\n        this.top = 0 * this.scale;\r\n        this.right = 380 * this.scale;\r\n        this.bottom = (220 + 28) * this.scale;\r\n        this.cx = 190 * this.scale;\r\n        this.cy = (110 + 28) * this.scale;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    fillColors(stateId, colorsToSet) {\r\n        if (stateId === MUTE_BUTTON_STATE_UNMUTE) {\r\n            colorsToSet[0] = '#66D4FB';\r\n            colorsToSet[1] = '';\r\n            colorsToSet[2] = '';\r\n        } else if (stateId === MUTE_BUTTON_STATE_MUTE) {\r\n            colorsToSet[0] = '#7DDCAA';\r\n            colorsToSet[1] = '';\r\n            colorsToSet[2] = '';\r\n        } else if (stateId === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\r\n            colorsToSet[0] = '#766EE9';\r\n            colorsToSet[1] = '';\r\n            colorsToSet[2] = '';\r\n        } else {\r\n            colorsToSet[0] = '#1C2229';\r\n            colorsToSet[1] = '';\r\n            colorsToSet[2] = '';\r\n        }\r\n    }\r\n\r\n    strToHex(n) {\r\n        let s = n.toString(16);\r\n        if (s.length === 1) {\r\n            s = '0' + s;\r\n        }\r\n        return s;\r\n    }\r\n\r\n    blendARGB(color1, color2, ratio) {\r\n        if (color1.length <= 7) {\r\n            color1 += 'FF';\r\n        }\r\n        if (color2.length <= 7) {\r\n            color2 += 'FF';\r\n        }\r\n        const c1 = {\r\n            r: parseInt(color1.substr(1, 2), 16),\r\n            g: parseInt(color1.substr(3, 2), 16),\r\n            b: parseInt(color1.substr(5, 2), 16),\r\n            a: parseInt(color1.substr(7, 2), 16),\r\n        };\r\n        const c2 = {\r\n            r: parseInt(color2.substr(1, 2), 16),\r\n            g: parseInt(color2.substr(3, 2), 16),\r\n            b: parseInt(color2.substr(5, 2), 16),\r\n            a: parseInt(color2.substr(7, 2), 16),\r\n        };\r\n\r\n        const inverseRatio = 1 - ratio;\r\n        const a = Math.trunc(c1.a * inverseRatio + c2.a * ratio) % 256;\r\n        const r = Math.trunc(c1.r * inverseRatio + c2.r * ratio) % 256;\r\n        const g = Math.trunc(c1.g * inverseRatio + c2.g * ratio) % 256;\r\n        const b = Math.trunc(c1.b * inverseRatio + c2.b * ratio) % 256;\r\n\r\n        return `#${this.strToHex(r)}${this.strToHex(g)}${this.strToHex(b)}`;\r\n    }\r\n\r\n    draw = (force = false) => {\r\n        this.raf = null;\r\n        if (!this.mounted) {\r\n            return;\r\n        }\r\n        if (!this.focused && this.switchProgress >= 1.0) {\r\n            return;\r\n        }\r\n        // console.log('[button] draw', [this.focused, this.mounted]);\r\n        const { currentState, prevState, left, top, right, bottom } = this;\r\n\r\n        const newTime = new Date();\r\n        let dt = (newTime - this.lastUpdateTime);\r\n        if (dt > 20) {\r\n            dt = 17;\r\n        }\r\n\r\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.tinyWaveDrawable.maxRadius = Math.trunc((62 + 20 * FORM_SMALL_MAX) / this.buttonDefaultRadius * this.buttonRadius);\r\n\r\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.bigWaveDrawable.maxRadius = Math.trunc((65 + 20 * FORM_BIG_MAX) / this.buttonDefaultRadius * this.buttonRadius);\r\n\r\n        if (this.animateToAmplitude !== this.amplitude) {\r\n            this.amplitude = this.amplitude + this.animateAmplitudeDiff * dt;\r\n            if (this.animateAmplitudeDiff > 0) {\r\n                if (this.amplitude > this.animateToAmplitude) {\r\n                    this.amplitude = this.animateToAmplitude;\r\n                }\r\n            } else {\r\n                if (this.amplitude < this.animateToAmplitude) {\r\n                    this.amplitude = this.animateToAmplitude;\r\n                }\r\n            }\r\n        }\r\n\r\n        let canSwitchProgress = true;\r\n        if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n            this.radialProgressView.toCircle(true, true);\r\n            if (!this.radialProgressView.isCircle()) {\r\n                canSwitchProgress = false;\r\n            }\r\n        } else if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n            this.radialProgressView.toCircle(true, false);\r\n        }\r\n\r\n        if (canSwitchProgress) {\r\n            if (this.switchProgress !== 1) {\r\n                if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                    this.switchProgress += dt / 100;\r\n                } else {\r\n                    this.switchProgress += dt / 180;\r\n                }\r\n\r\n                if (this.switchProgress >= 1.0) {\r\n                    this.switchProgress = 1.0;\r\n                    this.prevState = null;\r\n                    if (currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        this.radialProgressView.toCircle(false, true);\r\n                    }\r\n                }\r\n                this.invalidateColors = true;\r\n            }\r\n\r\n            if (this.invalidateColors && currentState) {\r\n                this.invalidateColors = false;\r\n                let lightingColor;\r\n                if (prevState) {\r\n                    this.fillColors(prevState.stateId, this.colorsTmp);\r\n                    const oldLight = this.colorsTmp[0];\r\n                    this.fillColors(currentState.stateId, this.colorsTmp);\r\n                    const newLight = this.colorsTmp[0];\r\n                    lightingColor = this.blendARGB(oldLight, newLight, this.switchProgress);\r\n                } else {\r\n                    this.fillColors(currentState.stateId, this.colorsTmp);\r\n                    lightingColor = this.colorsTmp[0];\r\n                }\r\n                if (this.currentLightColor !== lightingColor) {\r\n                    this.radialGradient = ctx => {\r\n                        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 100);\r\n\r\n                        gradient.addColorStop(0, lightingColor + '3C');\r\n                        gradient.addColorStop(1, lightingColor + '00');\r\n\r\n                        ctx.fillStyle = gradient;\r\n                    };\r\n                    this.currentLightColor = lightingColor;\r\n                }\r\n            }\r\n\r\n            let showWaves = false;\r\n            let showLighting = false;\r\n            if (currentState) {\r\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\r\n                showLighting = currentState.stateId !== MUTE_BUTTON_STATE_CONNECTING;\r\n            }\r\n\r\n            if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                this.showWavesProgress -= dt / 180;\r\n                if (this.showWavesProgress < 0) {\r\n                    this.showWavesProgress = 0;\r\n                }\r\n            } else {\r\n                if (showWaves && this.showWavesProgress !== 1) {\r\n                    this.showWavesProgress += dt / 350;\r\n                    if (this.showWavesProgress > 1) {\r\n                        this.showWavesProgress = 1;\r\n                    }\r\n                } else if (!showWaves && this.showWavesProgress !== 0) {\r\n                    this.showWavesProgress -= dt / 350;\r\n                    if (this.showWavesProgress < 0) {\r\n                        this.showWavesProgress = 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (showLighting && this.showLightingProgress !== 1) {\r\n                this.showLightingProgress += dt / 350;\r\n                if (this.showLightingProgress > 1) {\r\n                    this.showLightingProgress = 1;\r\n                }\r\n            } else if (!showLighting && this.showLightingProgress !== 0) {\r\n                this.showLightingProgress -= dt / 350;\r\n                if (this.showLightingProgress < 0) {\r\n                    this.showLightingProgress = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        let showWavesProgressInterpolated = this.overshootInterpolator.getInterpolation(this.showWavesProgress);\r\n        showWavesProgressInterpolated = 0.4 + 0.6 * showWavesProgressInterpolated;\r\n\r\n        this.bigWaveDrawable.update(this.amplitude, 1.0);\r\n        this.tinyWaveDrawable.update(this.amplitude, 1.0);\r\n\r\n        const ctx = this.canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        ctx.resetTransform();\r\n\r\n        const cx = this.cx;\r\n        const cy = this.cy;\r\n\r\n        if (prevState && currentState && (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING || prevState.stateId === MUTE_BUTTON_STATE_CONNECTING)) {\r\n            let progress;\r\n            if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                progress = this.switchProgress;\r\n                this.paint = prevState.shader;\r\n            } else {\r\n                progress = 1.0 - this.switchProgress;\r\n                this.paint = currentState.shader;\r\n            }\r\n\r\n            this.paintTmp = ctx => {\r\n                ctx.fillStyle = '#2B333E';\r\n            }\r\n\r\n            let paint = ctx => {\r\n                this.paint(ctx, left, top, right, bottom);\r\n            };\r\n\r\n            ctx.globalAlpha = 1.0;\r\n            let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\r\n            const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\r\n            this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\r\n\r\n            ctx.globalAlpha = 0.3;\r\n            // big wave\r\n            ctx.save();\r\n            scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\r\n            ctx.translate(cx, cy);\r\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\r\n            this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\r\n            ctx.restore();\r\n\r\n            // small wave\r\n            ctx.save();\r\n            scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\r\n            ctx.translate(cx, cy);\r\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\r\n            this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\r\n            ctx.restore();\r\n\r\n            ctx.globalAlpha = 1.0;\r\n            if (canSwitchProgress) {\r\n                this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\r\n                paint = ctx => {\r\n                    ctx.fillStyle = '#28BAFF';\r\n                };\r\n                if (progress !== 0) {\r\n                    ctx.globalAlpha = progress;\r\n                    this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\r\n                }\r\n            }\r\n            ctx.globalAlpha = 1.0;\r\n            this.drawCircle(ctx, cx, cy, 1,Math.trunc(this.buttonRadius - 0.5 * this.strokeWidth) * progress * this.scale, this.paintTmp);\r\n            if  (!canSwitchProgress) {\r\n                this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\r\n            }\r\n            ctx.restore();\r\n        } else {\r\n            for (let i = 0; i < 2; i++) {\r\n                let alpha = 0;\r\n                let buttonRadius = this.buttonRadius;\r\n                let paint = null;\r\n                if (i === 0 && prevState) {\r\n                    paint = prevState.shader;\r\n                    alpha = 1 - this.switchProgress;\r\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        buttonRadius -= alpha * 2;\r\n                    }\r\n                } else if (i === 1) {\r\n                    paint = currentState.shader;\r\n                    alpha = this.switchProgress;\r\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        buttonRadius -= alpha * 2;\r\n                    }\r\n                } else {\r\n                    continue;\r\n                }\r\n\r\n                if (!paint) {\r\n                    paint = ctx => {\r\n                        ctx.fillStyle = '#2B333E';\r\n                    };\r\n                }\r\n\r\n                ctx.globalAlpha = 1.0;\r\n                let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\r\n                if (i === 1) {\r\n                    const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\r\n                    this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\r\n                }\r\n\r\n                ctx.globalAlpha = 0.3 * alpha;\r\n                // big wave\r\n                ctx.save();\r\n                scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\r\n                ctx.translate(cx, cy);\r\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\r\n                this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\r\n                ctx.restore();\r\n\r\n                // small wave\r\n                ctx.save();\r\n                scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\r\n                ctx.translate(cx, cy);\r\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\r\n                this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\r\n                ctx.restore();\r\n            }\r\n\r\n            // button\r\n            for (let i = 0; i < 2; i++) {\r\n                let alpha = 0;\r\n                let buttonRadius = this.buttonRadius;\r\n                let paint = null;\r\n                if (i === 0 && prevState) {\r\n                    paint = prevState.shader;\r\n                    alpha = 1 - this.switchProgress;\r\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        buttonRadius -= alpha * 2;\r\n                    }\r\n                } else if (i === 1) {\r\n                    paint = currentState.shader;\r\n                    alpha = this.switchProgress;\r\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        buttonRadius -= alpha * 2;\r\n                    }\r\n                } else {\r\n                    continue;\r\n                }\r\n\r\n                if (!paint) {\r\n                    paint = ctx => {\r\n                        ctx.fillStyle = '#2B333E';\r\n                    };\r\n                }\r\n\r\n                if (i === 0) {\r\n                    ctx.globalAlpha = 1.0;\r\n                } else {\r\n                    ctx.globalAlpha = alpha;\r\n                }\r\n                this.drawCircle(ctx, cx, cy, this.scale, buttonRadius, paint);\r\n\r\n                if (i === 1 && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                    this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!force) {\r\n            this.raf = requestAnimationFrame(() => this.draw());\r\n        }\r\n    };\r\n\r\n    drawCircle(ctx, cx, cy, scale, radius, paint) {\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.translate(cx, cy);\r\n        ctx.scale(scale, scale);\r\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI, false);\r\n        ctx.closePath();\r\n        paint && paint(ctx);\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n\r\n    setCurrentState = (stateId, animated) => {\r\n        const { currentState, states } = this;\r\n\r\n        if (currentState && currentState.id === stateId) {\r\n            return;\r\n        }\r\n\r\n        this.previousState = animated ? currentState : null;\r\n        this.currentState = states[stateId];\r\n        this.progressToState = this.previousState ? 0.0 : 1.0;\r\n    };\r\n\r\n    updateMuteButton = (stateId, animated) => {\r\n        const { muteButtonState } = this;\r\n        if (muteButtonState === stateId && animated) {\r\n            return;\r\n        }\r\n\r\n        // TODO: add text animation\r\n\r\n        if (animated) {\r\n            this.muteButtonState = stateId;\r\n        } else {\r\n            this.muteButtonState = stateId;\r\n        }\r\n        this.updateMuteButtonState(animated);\r\n    }\r\n\r\n    updateMuteButtonState (animated) {\r\n        const { states, currentState, muteButtonState } = this;\r\n\r\n        if (states[muteButtonState] !== currentState) {\r\n            this.prevState = currentState;\r\n            this.currentState = states[muteButtonState];\r\n            if (!this.prevState || !animated) {\r\n                this.switchProgress = 1.0;\r\n                this.prevState = null;\r\n            } else {\r\n                this.switchProgress = 0.0;\r\n            }\r\n        }\r\n\r\n        if (!animated) {\r\n            let showWaves = false;\r\n            let showLighting = false;\r\n            if (currentState) {\r\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\r\n                showLighting = currentState.stateId === MUTE_BUTTON_STATE_CONNECTING;\r\n            }\r\n            this.showWavesProgress = showWaves ? 1.0 : 0.0;\r\n            this.showLightingProgress = showLighting ? 1.0 : 0.0;\r\n        }\r\n    }\r\n\r\n    setAmplitude(value) {\r\n        this.animateToAmplitude = value;\r\n        this.animateAmplitudeDiff = (value - this.amplitude) / (100 + 500 * AMPLITUDE_SPEED);\r\n        // console.log('[button] setAmplitude', [this.amplitude, this.animateToAmplitude, this.animateAmplitudeDiff]);\r\n    }\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        const { children, onClick } = this.props;\r\n        const { left, right, top, bottom, scale } = this;\r\n\r\n        return (\r\n            <div id='button' className='button' style={{ height: bottom / scale, borderRadius: 12, position: 'relative', transform: 'translateY(-28px)' }}>\r\n                <canvas id='button-canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    background: 'transparent',\r\n                    width: 104,\r\n                    height: 104,\r\n                    borderRadius: '50%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    left: '50%',\r\n                    top: '50%',\r\n                    marginLeft: -52,\r\n                    marginTop: -38,\r\n                    cursor: 'pointer'\r\n                }}\r\n                     onMouseDown={stopPropagation}\r\n                     onClick={onClick}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nButton.propTypes = {};\r\n\r\nexport default Button;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AnimatedItem from '../ColumnMiddle/AnimatedItem';\r\nimport './GroupCallMicButtonHint.css';\r\n\r\nclass GroupCallMicButtonHint extends React.Component {\r\n\r\n    getItemTemplate = item => {\r\n        const { t } = this.props;\r\n\r\n        let title = '';\r\n        let subtitle = '';\r\n        switch (item) {\r\n            case 'muted': {\r\n                title = t('VoipGroupUnmute');\r\n                subtitle = t('VoipHoldAndTalk');\r\n                break;\r\n            }\r\n            case 'unmuted': {\r\n                title = t('VoipTapToMute');\r\n                break;\r\n            }\r\n            case 'forceMuted': {\r\n                title = t('VoipMutedByAdmin');\r\n                subtitle = t('VoipMutedByAdminInfo');\r\n                break;\r\n            }\r\n            case 'connecting': {\r\n                title = t('Connecting');\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='group-call-mic-button-hint-item'>\r\n                <div className='group-call-mic-button-hint-title'>{title}</div>\r\n                {subtitle && <div className='group-call-mic-button-hint-subtitle'>{subtitle}</div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { className, status } = this.props;\r\n\r\n        return (\r\n            <div className={classNames('group-call-mic-button-hint', className)}>\r\n                <AnimatedItem item={status} height={37} getItemTemplate={this.getItemTemplate} scrollDown={true} animateOnMount={false}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallMicButtonHint.propTypes = {\r\n    status: PropTypes.string\r\n};\r\n\r\nexport default withTranslation()(GroupCallMicButtonHint);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from './Button';\r\nimport GroupCallMicButtonHint from './GroupCallMicButtonHint';\r\nimport MicIcon from '../../Assets/Icons/Mic';\r\nimport MicOffIcon from '../../Assets/Icons/MicOff';\r\nimport { getCallStatus } from '../../Calls/Utils';\r\nimport { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './GroupCallMicButton.css';\r\n\r\nclass GroupCallMicButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.buttonRef = React.createRef();\r\n\r\n        const { currentGroupCall: call } = CallStore;\r\n        const { connected, status } = getCallStatus(call);\r\n        this.state = {\r\n            call,\r\n            status,\r\n            connected,\r\n            animated: CallStore.animated\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { status, connected, animated, shook } = this.state;\r\n\r\n        if (animated !== nextState.animated) {\r\n            return true;\r\n        }\r\n\r\n        if (connected !== nextState.connected) {\r\n            return true;\r\n        }\r\n\r\n        if (shook !== nextState.shook) {\r\n            return true;\r\n        }\r\n\r\n        if (status !== nextState.status) {\r\n            return true;\r\n        }\r\n\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.switchButtonState(false);\r\n\r\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\r\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\r\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    onClientUpdateGroupCallAmplitudeChange = update => {\r\n        const { amplitudes } = update;\r\n        if (!amplitudes.length) return;\r\n\r\n        for (let i = 0; i < amplitudes.length; i++) {\r\n            const { type, value } = amplitudes[i];\r\n            if (type === 'input') {\r\n                this.buttonRef.current && this.buttonRef.current.setAmplitude(value);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    switchButtonState(animated = true) {\r\n        const { connected, status } = this.state;\r\n\r\n        let stateId = MUTE_BUTTON_STATE_MUTE;\r\n        if (!connected) {\r\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\r\n        } else {\r\n            if (status === 'forceMuted') {\r\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\r\n            } else if (status === 'unmuted') {\r\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\r\n            } else if (status === 'muted') {\r\n                stateId = MUTE_BUTTON_STATE_MUTE;\r\n            }\r\n        }\r\n\r\n\r\n        this.buttonRef.current && this.buttonRef.current.updateMuteButton(stateId, true);\r\n    }\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { group_call_id, participant } = update;\r\n        if (!participant) return;\r\n\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call_id !== call.groupCallId) return;\r\n\r\n        const { user_id, is_muted } = participant\r\n        if (user_id !== UserStore.getMyId()) return;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            status,\r\n            connected\r\n        }, () => {\r\n            this.switchButtonState();\r\n        });\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { group_call } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call.id !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCallConnectionState = update => {\r\n        const { groupCallId } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (groupCallId !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCall = update => {\r\n        const { currentGroupCall: call } = CallStore;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            call,\r\n            status,\r\n            connected\r\n        }, () => {\r\n            this.switchButtonState();\r\n        });\r\n    };\r\n\r\n    handleClick = () => {\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId, stream } = call;\r\n\r\n        const groupCall = CallStore.get(groupCallId);\r\n        if (!groupCall) return;\r\n\r\n        if (!groupCall.can_unmute_self) {\r\n            const { shook } = this.state;\r\n            if (shook) {\r\n                this.setState({\r\n                    shook: false\r\n                }, () => {\r\n                    requestAnimationFrame(() => {\r\n                        this.setState({ shook: true });\r\n                    })\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    shook: true\r\n                });\r\n            }\r\n        } else {\r\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { status, connected, animated, shook } = this.state;\r\n        // console.log('[call][GroupCallMicButton] render');\r\n\r\n        return (\r\n            <div className='group-call-mic-button-wrapper' >\r\n                {animated ? (\r\n                    <Button ref={this.buttonRef} onClick={this.handleClick}>\r\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\r\n                    </Button>\r\n                ) : (\r\n                    <div className={classNames('group-call-mic-button',\r\n                        {\r\n                            'group-call-muted-by-admin ': connected && status === 'forceMuted',\r\n                            'group-call-unmuted': connected && status === 'unmuted',\r\n                            'group-call-connecting': !connected,\r\n                        })}\r\n                         onClick={this.handleClick}\r\n                    >\r\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\r\n                    </div>\r\n                )}\r\n                <GroupCallMicButtonHint className={shook ? 'shook-horizontal' : ''} status={connected ? status : 'connecting'}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nGroupCallMicButton.propTypes = {\r\n    groupCallId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(GroupCallMicButton);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getCallStatus } from '../../Calls/Utils';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './GroupCallPanelButtons.css'\r\n\r\nclass GroupCallPanelButtons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { currentGroupCall: call } = CallStore;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.state = {\r\n            call,\r\n            status,\r\n            connected\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { status, connected } = this.state;\r\n\r\n        if (connected !== nextState.connected) {\r\n            return true;\r\n        }\r\n\r\n        if (status !== nextState.status) {\r\n            return true;\r\n        }\r\n\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { group_call_id, participant } = update;\r\n        if (!participant) return;\r\n\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call_id !== call.groupCallId) return;\r\n\r\n        const { user_id } = participant;\r\n        if (user_id !== UserStore.getMyId()) return;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            status\r\n        });\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { group_call } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call.id !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCallConnectionState = update => {\r\n        const { groupCallId } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (groupCallId !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCall = update => {\r\n        const { currentGroupCall: call } = CallStore;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            call,\r\n            status,\r\n            connected\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        const { status, connected } = this.state;\r\n        // console.log('[call][GroupCallPanelButtons] render');\r\n\r\n        return (\r\n            <div className={classNames('group-call-panel-buttons', {\r\n                'group-call-connecting': !connected,\r\n                'group-call-muted': connected && status === 'muted',\r\n                'group-call-muted-by-admin': connected && status === 'forceMuted',\r\n                'group-call-unmuted': connected && status === 'unmuted',\r\n            })}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallPanelButtons.propTypes = {};\r\n\r\nexport default GroupCallPanelButtons;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />,\r\n    'AddMember'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5zm6 6c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\" />,\r\n    'MicOutlined'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d=\"M10.8 4.9c0-.66.54-1.2 1.2-1.2s1.2.54 1.2 1.2l-.01 3.91L15 10.6V5c0-1.66-1.34-3-3-3-1.54 0-2.79 1.16-2.96 2.65l1.76 1.76V4.9zM19 11h-1.7c0 .58-.1 1.13-.27 1.64l1.27 1.27c.44-.88.7-1.87.7-2.91zM4.41 2.86L3 4.27l6 6V11c0 1.66 1.34 3 3 3 .23 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.55-.9l4.2 4.2 1.41-1.41L4.41 2.86z\" />,\r\n    'MicOffOutlined'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MicIcon from '../../Assets/Icons/MicOutlined';\r\nimport MicOffIcon from '../../Assets/Icons/MicOffOutlined';\r\nimport UserTile from '../Tile/UserTile';\r\nimport { closeGroupCallPanel } from '../../Actions/Call';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport { openUser } from '../../Actions/Client';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './GroupCallParticipant.css';\r\n\r\nclass GroupCallParticipant extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0,\r\n        participant: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { userId, groupCallId } = props;\r\n        const { prevUserId, prevGroupCallId } = state;\r\n\r\n        if (prevUserId !== userId || prevGroupCallId !== groupCallId) {\r\n            const participants = CallStore.participants.get(groupCallId) || new Map();\r\n            const participant = participants.get(userId);\r\n\r\n            return {\r\n                prevUserId: userId,\r\n                prevGroupCallId: groupCallId,\r\n                participant\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { participant, left, top, contextMenu } = this.state;\r\n\r\n        if (participant !== nextState.participant) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n    }\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { groupCallId, userId } = this.props;\r\n        const { group_call_id, participant } = update;\r\n        if (groupCallId !== group_call_id) return;\r\n        if (!participant) return;\r\n\r\n        const { user_id } = participant;\r\n        if (userId !== user_id) return;\r\n\r\n        this.setState({\r\n            participant\r\n        });\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { userId } = this.props;\r\n        if (userId === UserStore.getMyId()) return;\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleOpenProfile = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { userId } = this.props;\r\n\r\n        openUser(userId, true);\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    handleSendMessage = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { userId } = this.props;\r\n\r\n        openUser(userId, false);\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    handleMute = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { userId } = this.props;\r\n        CallStore.changeUserMuted(userId, true);\r\n    };\r\n\r\n    handleUnmute = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { userId } = this.props;\r\n        CallStore.changeUserMuted(userId, false);\r\n    };\r\n\r\n    render() {\r\n        const { userId, t } = this.props;\r\n        const { contextMenu, left, top, participant } = this.state;\r\n        // console.log('[call][GroupCallParticipant] render', participant);\r\n        if (!participant) return null;\r\n\r\n        const { is_speaking, is_muted_for_all_users, is_muted_for_current_user, can_unmute_self, can_be_muted_for_all_users, can_be_unmuted_for_all_users } = participant;\r\n        const isMuted = is_muted_for_all_users || is_muted_for_current_user;\r\n\r\n        return (\r\n            <div className='group-call-participant' onClick={this.handleOpenContextMenu} onContextMenu={this.handleOpenContextMenu}>\r\n                <UserTile userId={userId}/>\r\n                <div className='group-call-participant-content'>\r\n                    <div className='group-call-participant-content-title'>\r\n                        {/*{userId}*/}\r\n                        {getUserFullName(userId)}\r\n                    </div>\r\n                    <div className={classNames('group-call-participant-content-subtitle', 'participant-listening', { 'participant-speaking': is_speaking })}>\r\n                        {/*{order}*/}\r\n                        {is_speaking ? t('Speaking') : t('Listening')}\r\n                    </div>\r\n                </div>\r\n                <div className={classNames('group-call-participant-mic', { 'participant-muted-by-admin': isMuted && !can_unmute_self, 'participant-speaking': is_speaking })}>\r\n                    {!isMuted || is_speaking ? <MicIcon /> : <MicOffIcon />}\r\n                </div>\r\n\r\n                <Popover\r\n                    classes={{\r\n                        paper: 'group-call-participant-menu-root'\r\n                    }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        { can_be_unmuted_for_all_users && (\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleUnmute}>\r\n                                <ListItemText primary={t('VoipGroupUnmute')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        { can_be_muted_for_all_users && (\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleMute}>\r\n                                <ListItemText primary={t('VoipGroupMute')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        <MenuItem\r\n                            classes={{ root: 'group-call-participant-menu-item' }}\r\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                            TouchRippleProps={{\r\n                                classes : {\r\n                                    child : 'group-call-participant-menu-item-ripple-child',\r\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                }\r\n                            }}\r\n                            onClick={this.handleOpenProfile}>\r\n                            <ListItemText primary={t('VoipGroupOpenProfile')} />\r\n                        </MenuItem>\r\n                        <MenuItem\r\n                            classes={{ root: 'group-call-participant-menu-item' }}\r\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                            TouchRippleProps={{\r\n                                classes : {\r\n                                    child : 'group-call-participant-menu-item-ripple-child',\r\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                }\r\n                            }}\r\n                            onClick={this.handleSendMessage}>\r\n                            <ListItemText primary={t('SendMessage')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nGroupCallParticipant.propTypes = {\r\n    userId: PropTypes.number,\r\n    groupCallId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(GroupCallParticipant);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\r\nimport GroupCallParticipant from './GroupCallParticipant';\r\nimport { albumHistoryEquals, orderCompare } from '../../Utils/Common';\r\nimport { canManageVoiceChats } from '../../Utils/Chat';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './GroupCallParticipants.css';\r\n\r\nclass GroupCallParticipants extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            participants: []\r\n        };\r\n\r\n        this.participantsMap = new Map();\r\n        // this.updateParticipants = throttle(this.updateParticipants, 1000);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { groupCallId } = props;\r\n        const { prevGroupCallId } = state;\r\n\r\n        if (prevGroupCallId !== groupCallId) {\r\n            const participantsMap = CallStore.participants.get(groupCallId) || new Map();\r\n            const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\r\n\r\n            return {\r\n                prevGroupCallId: groupCallId,\r\n                participants: participants.map(x => x.user_id)\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { participants } = this.state;\r\n        if (!albumHistoryEquals(participants, nextState.participants)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.preloadContent();\r\n\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n    }\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { groupCallId } = this.props;\r\n        const { group_call_id, participant } = update;\r\n        if (!participant) return;\r\n\r\n        if (group_call_id !== groupCallId) return;\r\n\r\n        const { order, user_id } = participant;\r\n        if (order !== '0') {\r\n            this.participantsMap.set(user_id, user_id);\r\n            this.loadContent();\r\n\r\n            // wait for profile photo\r\n            setTimeout(() => {\r\n                this.updateParticipants();\r\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\r\n        } else {\r\n            this.updateParticipants();\r\n        }\r\n    };\r\n\r\n    updateParticipants() {\r\n        const { groupCallId } = this.props;\r\n\r\n        const participantsMap = CallStore.participants.get(groupCallId) || new Map();\r\n        const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\r\n\r\n        this.setState({\r\n            participants: participants.map(x => x.user_id)\r\n        });\r\n    }\r\n\r\n    preloadContent = () => {\r\n        const { participants } = this.state;\r\n        if (!participants) return;\r\n        if (!participants.length) return;\r\n\r\n        participants.forEach(x => {\r\n            this.participantsMap.set(x, x);\r\n        });\r\n        this.loadContent();\r\n    };\r\n\r\n    loadContent = () => {\r\n        const { participantsMap } = this;\r\n        if (!participantsMap) return;\r\n        if (!participantsMap.size) return;\r\n\r\n        this.participantsMap = new Map();\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, Array.from(participantsMap.keys()));\r\n    }\r\n\r\n    render() {\r\n        const { t, groupCallId } = this.props;\r\n        const { participants } = this.state;\r\n        // console.log('[call][GroupCallParticipants] render');\r\n\r\n        const { currentGroupCall } = CallStore;\r\n        if (!currentGroupCall) return null;\r\n\r\n        const { chatId } = currentGroupCall;\r\n\r\n        const manageGroupCalls = canManageVoiceChats(chatId);\r\n\r\n        return (\r\n            <div className='group-call-participants'>\r\n                { manageGroupCalls && (\r\n                    <div className='group-call-participants-invite'>\r\n                        <AddMemberIcon/>\r\n                        <div className='group-call-participants-invite-text'>\r\n                            {t('VoipGroupInviteMember')}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {participants.map(x => <GroupCallParticipant key={x} userId={x} groupCallId={groupCallId}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallParticipants.propTypes = {\r\n    groupCallId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(GroupCallParticipants);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z' />,\r\n    'Tune'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TuneIcon from '../../Assets/Icons/Tune';\r\nimport { stopPropagation } from '../../Utils/Message';\r\nimport './GroupCallSettingsButton.css';\r\n\r\nclass GroupCallSettingsButton extends React.Component {\r\n    render() {\r\n        const { onClick } = this.props;\r\n\r\n        return (\r\n            <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={onClick}>\r\n                <TuneIcon />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallSettingsButton.propTypes = {\r\n    groupCallId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default GroupCallSettingsButton;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport GroupCallMicButton from './GroupCallMicButton';\r\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\r\nimport GroupCallParticipants from './GroupCallParticipants';\r\nimport GroupCallSettings from './GroupCallSettings';\r\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\r\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\r\nimport { closeGroupCallPanel } from '../../Actions/Call';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport { stopPropagation } from '../../Utils/Message';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport './GroupCallPanel.css';\r\n\r\nclass GroupCallPanel extends React.Component {\r\n    state = {\r\n        openSettings: false\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.handleClose();\r\n    }\r\n\r\n    handleLeave = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { currentGroupCall: call } = CallStore;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId } = call;\r\n\r\n        await CallStore.leaveGroupCall(chatId, groupCallId);\r\n    };\r\n\r\n    handleOpenSettings = async event => {\r\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\r\n\r\n        this.setState({\r\n            openSettings: true\r\n        });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        this.setState({\r\n            openSettings: false\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    render() {\r\n        const { groupCallId, t } = this.props;\r\n        const { openSettings } = this.state;\r\n        const { currentGroupCall } = CallStore;\r\n        if (!currentGroupCall) return null;\r\n\r\n        const { chatId } = currentGroupCall;\r\n\r\n        return (\r\n            <div className='group-call-panel'>\r\n                <div className='group-call-panel-header'>\r\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </div>\r\n                    <div className='group-call-panel-caption'>\r\n                        <div className='group-call-title'>{getChatTitle(chatId)}</div>\r\n                        <GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>\r\n                    </div>\r\n                    <div style={{ width: 48 }}/>\r\n                </div>\r\n                <div className='group-call-panel-participants scrollbars-hidden'>\r\n                    <GroupCallParticipants groupCallId={groupCallId}/>\r\n                </div>\r\n                <GroupCallPanelButtons>\r\n                    <GroupCallMicButton/>\r\n                    <div className='group-call-panel-button'>\r\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {t('Settings')}\r\n                        </div>\r\n                    </div>\r\n                    <div className='group-call-panel-button'>\r\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleLeave}>\r\n                            <CallEndIcon />\r\n                        </div>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {t('Leave')}\r\n                        </div>\r\n                    </div>\r\n                </GroupCallPanelButtons>\r\n                {openSettings && <GroupCallSettings groupCallId={groupCallId} onClose={this.handleCloseSettings}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallPanel.propTypes = {\r\n    groupCallId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(GroupCallPanel);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport GroupCallPanel from './GroupCallPanel';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { clamp } from '../../Utils/Common';\r\nimport { closeGroupCallPanel } from '../../Actions/Call';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport './GroupCall.css';\r\n\r\nclass GroupCall extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n\r\n        this.state = {\r\n            fullScreen: false\r\n        };\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setPosition();\r\n\r\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        window.addEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n    onClientUpdateGroupCallFullScreen = update => {\r\n        const { fullscreen } = update;\r\n\r\n        this.setState({ fullscreen });\r\n    };\r\n\r\n    handleClose = () => {\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        const element = document.getElementById('group-call');\r\n        if (element) element.focus();\r\n\r\n        this.mouseDownRoot = true;\r\n        event.preventDefault();\r\n\r\n        this.left = parseInt(element.style.left, 10);\r\n        this.top = parseInt(element.style.top, 10);\r\n        this.pageX = event.nativeEvent.pageX;\r\n        this.pageY = event.nativeEvent.pageY;\r\n\r\n        document.onmousemove = this.handleMouseMove;\r\n        document.onmouseup = this.handleMouseUp;\r\n\r\n        this.windowDragging = true;\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) return;\r\n\r\n        const player = document.getElementById('group-call');\r\n\r\n        const oldLeft = parseInt(player.style.left, 10);\r\n        const oldTop = parseInt(player.style.top, 10);\r\n\r\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\r\n\r\n        if (oldLeft === left && oldTop === top) return;\r\n\r\n        // console.log('[pip] windowResize', left, top);\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseMove = event => {\r\n        event.preventDefault();\r\n\r\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\r\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\r\n\r\n        const element = document.getElementById('group-call');\r\n        element.style.left = left + 'px';\r\n        element.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseUp = event => {\r\n        event.preventDefault();\r\n\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n\r\n        this.windowDragging = false;\r\n    };\r\n\r\n    setPosition() {\r\n        const element = document.getElementById('group-call');\r\n        let { pipParams } = CallStore;\r\n        if (!pipParams) {\r\n            pipParams = {\r\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\r\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\r\n            }\r\n        }\r\n\r\n        const { left: prevLeft, top: prevTop } = pipParams;\r\n\r\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\r\n\r\n        element.style.left = left + 'px';\r\n        element.style.top = top + 'px';\r\n    }\r\n\r\n    normalizePosition(left, top, checkGlue = true) {\r\n        const player = document.getElementById('group-call');\r\n        const playerWidth = player ? player.clientWidth : 300;\r\n        const playerHeight = player ? player.clientHeight : 300;\r\n\r\n        const { clientWidth: documentWidth } = document.documentElement;\r\n        const { clientHeight: documentHeight } = document.documentElement;\r\n\r\n        if (checkGlue && this.glueLeft) {\r\n            left = 0;\r\n        } else if (checkGlue && this.glueRight) {\r\n            left = documentWidth - playerWidth;\r\n        } else {\r\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\r\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\r\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\r\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\r\n            left = clamp(left, 0, documentWidth - playerWidth);\r\n        }\r\n\r\n        if (checkGlue && this.glueTop) {\r\n            top = 0;\r\n        } else if (checkGlue && this.glueBottom) {\r\n            top = documentHeight - playerHeight;\r\n        } else {\r\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\r\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\r\n            top = clamp(top, 0, documentHeight - playerHeight);\r\n        }\r\n\r\n        this.glueLeft = left === 0;\r\n        this.glueRight = left === documentWidth - playerWidth;\r\n        this.glueTop = top === 0;\r\n        this.glueBottom = top === documentHeight - playerHeight;\r\n\r\n        CallStore.pipParams = { left, top };\r\n\r\n        return { left, top };\r\n    }\r\n\r\n    render() {\r\n        const { groupCallId } = this.props;\r\n        const { fullscreen } = this.state;\r\n\r\n        return (\r\n            <div\r\n                id='group-call'\r\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\r\n                onMouseDown={this.handleMouseDown}\r\n            >\r\n                <GroupCallPanel groupCallId={groupCallId}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nGroupCall.propTypes = {\r\n    groupCallId: PropTypes.number\r\n};\r\n\r\nexport default GroupCall;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSaveRef } from '../../Utils/HOC';\r\nimport { withIV } from './IVContext';\r\nimport { getPageBlock } from '../../Utils/InstantView';\r\nimport './Article.css';\r\n\r\nconst articleRefs = new Map();\r\n\r\nclass Article extends React.PureComponent {\r\n    render() {\r\n        const { forwardedRef, iv } = this.props;\r\n        if (!iv) return null;\r\n\r\n        const { page_blocks, is_rtl } = iv;\r\n        if (!page_blocks) return;\r\n\r\n        articleRefs.clear();\r\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\r\n\r\n        return (\r\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\r\n                {blocks}\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nArticle.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withIV\r\n);\r\n\r\nexport { articleRefs };\r\n\r\nexport default enhance(Article);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\r\n    'Left'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaCaption.css';\r\n\r\nclass MediaCaption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            top: false,\r\n            bottom: false\r\n        };\r\n\r\n        this.scrollRef = React.createRef();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { text } = this.props;\r\n        const { top, bottom } = this.state;\r\n\r\n        if (nextProps.text !== text) return true;\r\n        if (nextState.top !== top) return true;\r\n        if (nextState.bottom !== bottom) return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleScroll();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { text } = this.props;\r\n\r\n        if (prevProps.text !== text) {\r\n            this.handleScroll();\r\n        }\r\n    }\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const scroll = this.scrollRef.current;\r\n        if (!scroll) return;\r\n\r\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\r\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\r\n\r\n        this.setState({\r\n            top,\r\n            bottom\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { text } = this.props;\r\n        const { top, bottom } = this.state;\r\n\r\n        return (\r\n            <div className='media-caption' onClick={this.handleClick}>\r\n                <div\r\n                    ref={this.scrollRef}\r\n                    className={classNames(\r\n                        'scrollbars-hidden',\r\n                        'media-caption-wrapper', {\r\n                            'media-caption-wrapper-top': top,\r\n                            'media-caption-wrapper-bottom': bottom,\r\n                            'media-caption-wrapper-both': !top && !bottom\r\n                        })}\r\n                    onScroll={this.handleScroll}>\r\n                    <div className='media-caption-text'>{text}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaCaption.propTypes = {\r\n    text: PropTypes.array\r\n};\r\n\r\nMediaCaption.defaultProps = {};\r\n\r\nexport default MediaCaption;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport Caption from '../InstantView/Blocks/Caption';\r\nimport SafeLink from '../Additional/SafeLink';\r\nimport Player from '../Player/Player';\r\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\r\nimport { getThumb } from '../../Utils/Media';\r\nimport { isEmptyText } from '../../Utils/InstantView';\r\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass InstantViewMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { media, size, caption, url } = props;\r\n\r\n        if (media !== state.prevMedia) {\r\n            const thumbnail = getViewerThumbnail(media);\r\n            const minithumbnail = getViewerMinithumbnail(media);\r\n\r\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                const { video } = media;\r\n                if (video) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\r\n                }\r\n            }\r\n\r\n            return {\r\n                prevMedia: media,\r\n\r\n                speed: 1,\r\n                isPlaying: false,\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                thumbnail,\r\n                minithumbnail\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n        if (!videoInfo) return;\r\n\r\n        const { file } = this.state;\r\n        if (file.id !== videoInfo.fileId) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateInstantViewViewerContent',\r\n            content: null\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { src } = this.state;\r\n\r\n        if (prevState.src !== src) {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = update;\r\n        const { media, size } = this.props;\r\n        const { file } = this.state;\r\n\r\n        if (file && file.id === fileId) {\r\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src: getSrc(file),\r\n                supportsStreaming,\r\n                mimeType\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { fileId } = update;\r\n        const { thumbnail } = this.state;\r\n\r\n        if (thumbnail && thumbnail.file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { media, caption, url } = this.props;\r\n        if (!media) return null;\r\n\r\n        const {\r\n            width,\r\n            height,\r\n            file,\r\n            src,\r\n            mimeType,\r\n            thumbnail,\r\n            minithumbnail,\r\n            isPlaying,\r\n            supportsStreaming\r\n        } = this.state;\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail);\r\n\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\r\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\r\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\r\n        videoWidth = w;\r\n        videoHeight = h;\r\n\r\n        let content = null;\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\r\n\r\n        switch (media['@type']) {\r\n            case 'video': {\r\n                content = (\r\n                    <div className='media-viewer-content-wrapper'>\r\n                        <Player\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-video-player'\r\n                            fileId={file.id}\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\r\n                            onPlay={() => {\r\n                                this.setState({ isPlaying: true });\r\n                            }}\r\n                        >\r\n                            {source}\r\n                        </Player>\r\n                        {!isPlaying && !supportsStreaming && thumb}\r\n                    </div>\r\n                );\r\n                break;\r\n            }\r\n            case 'animation': {\r\n                // content = (\r\n                //     <Animation\r\n                //         type='preview'\r\n                //         stretch={true}\r\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\r\n                //         animation={media}\r\n                //         onClick={this.handleContentClick}\r\n                //         showProgress={false}\r\n                //         style={{ borderRadius: 0 }}\r\n                //     />\r\n                // );\r\n\r\n                content = (\r\n                    <div className='media-viewer-content-wrapper'>\r\n                        <video\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-video-player'\r\n                            onClick={this.handleContentClick}\r\n                            loop\r\n                            autoPlay\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                            onPlay={() => {\r\n                                this.setState({ isPlaying: true });\r\n                            }}\r\n                        >\r\n                            {source}\r\n                        </video>\r\n                        {!isPlaying && thumb}\r\n                    </div>\r\n                );\r\n                break;\r\n            }\r\n            default: {\r\n                content = (\r\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='media-viewer-content'>\r\n                {content}\r\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\r\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\r\n                    <MediaCaption\r\n                        text={\r\n                            <>\r\n                                <Caption text={caption.text} credit={caption.credit} />\r\n                                <SafeLink url={url} />\r\n                            </>\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewMediaViewerContent.propTypes = {\r\n    media: PropTypes.object.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    caption: PropTypes.object,\r\n    url: PropTypes.string\r\n};\r\n\r\nexport default InstantViewMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerButton.css';\r\n\r\nclass MediaViewerButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { disabled, onClick } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { disabled, grow, children, className, style } = this.props;\r\n\r\n        const cx = classNames(\r\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\r\n            { grow: grow },\r\n            className\r\n        );\r\n\r\n        return (\r\n            <div className={cx} style={style} onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerButton.propTypes = {\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MediaViewerFooterText.css';\r\n\r\nclass MediaViewerFooterText extends React.Component {\r\n    render() {\r\n        const { title, subtitle, style } = this.props;\r\n\r\n        return (\r\n            <div className='media-viewer-footer-text' style={style}>\r\n                <div className='media-viewer-footer-text-wrapper'>\r\n                    <span>{title}</span>\r\n                    {Boolean(subtitle) && (\r\n                        <span>\r\n                            &nbsp;\r\n                            {subtitle}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterText.propTypes = {\r\n    title: PropTypes.string,\r\n    subtitle: PropTypes.string\r\n};\r\n\r\nexport default MediaViewerFooterText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nclass MediaViewerFooterButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick, disabled } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { checked, children, disabled, title } = this.props;\r\n\r\n        return (\r\n            <div\r\n                className={classNames('media-viewer-footer-button', {\r\n                    'media-viewer-footer-button-checked': checked,\r\n                    'media-viewer-footer-button-disabled': disabled\r\n                })}\r\n                title={title}\r\n                onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterButton.propTypes = {\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerFooterButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SaveIcon from '../../Assets/Icons/Download';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nclass MediaViewerDownloadButton extends React.Component {\r\n    state = {  };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { fileId } = props;\r\n        const { prevPropsFileId } = state;\r\n\r\n        if (fileId !== prevPropsFileId) {\r\n            return {\r\n                prevPropsFileId: fileId,\r\n                fileId,\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.fileId !== this.props.chatId) {\r\n            this.checkFileLoaded();\r\n        }\r\n    }\r\n\r\n    checkFileLoaded() {\r\n        // console.log('[down] checkLoaded');\r\n        const { fileId } = this.props;\r\n        const blob = FileStore.getBlob(fileId);\r\n        if (blob) {\r\n            // console.log('[down] checkLoaded blob');\r\n            return;\r\n        }\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) {\r\n            // console.log('[down] checkLoaded file');\r\n            return;\r\n        }\r\n\r\n        const { local } = file;\r\n        if (!local) return;\r\n        if (!local.is_downloading_completed) return;\r\n\r\n        // console.log('[down] checkLoaded getLocal');\r\n        const store = FileStore.getStore();\r\n        FileStore.getLocalFile(store, file, null, () => {\r\n            // console.log('[down] checkLoaded getLocal complete');\r\n            this.setState({\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkFileLoaded();\r\n\r\n        FileStore.on('updateFile', this.onUpdateFile);\r\n\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('updateFile', this.onUpdateFile);\r\n\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    onUpdateFile = update => {\r\n        const { fileId } = this.props;\r\n        const { file } = update;\r\n\r\n        if (file.id !== fileId) return;\r\n\r\n        if (file.local.is_downloading_completed) {\r\n            this.checkFileLoaded();\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = this.state;\r\n\r\n        if (fileId === update.fileId) {\r\n            this.setState({\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            });\r\n        }\r\n    };\r\n\r\n    static saveDisabled = fileId => {\r\n        return !Boolean(FileStore.getBlob(fileId));\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick } = this.props;\r\n        const { disabled } = this.state;\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { title, children, disabled: propsDisabled } = this.props;\r\n        const { disabled } = this.state;\r\n\r\n        return (\r\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\r\n                {children || <SaveIcon />}\r\n            </MediaViewerFooterButton>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerDownloadButton.propTypes = {\r\n    fileId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool\r\n};\r\n\r\nexport default MediaViewerDownloadButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withIV } from '../InstantView/IVContext';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\r\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\r\nimport { getInputMediaContent } from '../../Utils/Media';\r\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InstantViewMediaViewer.css';\r\n\r\nclass InstantViewMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            index: -1,\r\n            hasPreviousMedia: false,\r\n            hasNextMedia: false,\r\n            blocks: []\r\n        };\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        if (!blocks) return null;\r\n        if (index === -1) return null;\r\n\r\n        const block = blocks[index];\r\n        const media = getBlockMedia(block);\r\n        if (!media) return;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                this.handleNext();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowRight': {\r\n                this.handlePrevious();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n\r\n        const isVideo = media['@type'] === 'video';\r\n        if (isVideo) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\r\n        }\r\n    };\r\n\r\n    loadContent() {\r\n        const { iv, media } = this.props;\r\n\r\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\r\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\r\n\r\n        this.setState({\r\n            blocks,\r\n            index,\r\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\r\n            hasNextMedia: this.hasNextMedia(index, blocks)\r\n        });\r\n\r\n        preloadIVMediaViewerContent(index, blocks);\r\n    }\r\n\r\n    hasPreviousMedia(index, blocks) {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < blocks.length;\r\n    }\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        const nextIndex = index + 1;\r\n\r\n        if (!this.hasPreviousMedia(index, blocks)) return;\r\n\r\n        return this.loadMedia(nextIndex);\r\n    };\r\n\r\n    hasNextMedia(index, blocks) {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    }\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        const nextIndex = index - 1;\r\n\r\n        if (!this.hasNextMedia(index, blocks)) return;\r\n\r\n        return this.loadMedia(nextIndex);\r\n    };\r\n\r\n    loadMedia = index => {\r\n        const { blocks } = this.state;\r\n\r\n        if (index < 0) return false;\r\n        if (index >= blocks.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                index,\r\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\r\n                hasNextMedia: this.hasNextMedia(index, blocks)\r\n            }\r\n        );\r\n\r\n        preloadIVMediaViewerContent(index, blocks);\r\n        return true;\r\n    };\r\n\r\n    handleClose = () => {\r\n        setInstantViewViewerContent(null);\r\n\r\n        const { index, blocks } = this.state;\r\n        if (index !== -1) {\r\n            cancelPreloadIVMediaViewerContent(index, blocks);\r\n        }\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { media } = this.props;\r\n\r\n        const inputMessageContent = getInputMediaContent(media, null);\r\n        if (!inputMessageContent) return;\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { media } = this.props;\r\n\r\n        saveMedia(media, null);\r\n    };\r\n\r\n    handleWrapperMouseDown = event => {\r\n        this.mouseDownTarget = event.currentTarget;\r\n    }\r\n\r\n    handleWrapperClick = event => {\r\n        const { mouseDownTarget } = this;\r\n        this.mouseDownTarget = null;\r\n\r\n        if (event.currentTarget !== mouseDownTarget) return;\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    render() {\r\n        const { size, t } = this.props;\r\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\r\n        if (!blocks) return null;\r\n        if (index === -1) return null;\r\n\r\n        const block = blocks[index];\r\n        const media = getBlockMedia(block);\r\n        const caption = getBlockCaption(block);\r\n        const url = getBlockUrl(block);\r\n\r\n        const [width, height, file] = getViewerFile(media, size);\r\n\r\n        let title = '';\r\n        if (media['@type'] === 'photo') {\r\n            title = t('AttachPhoto');\r\n        }\r\n        if (media['@type'] === 'video') {\r\n            title = t('AttachVideo');\r\n        } else if (media['@type'] === 'animation') {\r\n            title = t('AttachGif');\r\n        }\r\n        const maxCount = blocks.length;\r\n\r\n        return (\r\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\r\n                        style={{ marginLeft: 128 }}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                    <div className='media-viewer-content-column'>\r\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\r\n                    </div>\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewMediaViewer.propTypes = {\r\n    media: PropTypes.object.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    caption: PropTypes.object.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withIV\r\n);\r\n\r\nexport default enhance(InstantViewMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Article from './Article';\r\nimport { articleRefs } from './Article';\r\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\r\nimport IVContext from './IVContext';\r\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport { itemsInView, throttle } from '../../Utils/Common';\r\nimport { getInnerBlocks } from '../../Utils/InstantView';\r\nimport { openInstantView } from '../../Actions/InstantView';\r\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\r\nimport { scrollTop } from '../../Utils/DOM';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { IV_PHOTO_SIZE } from '../../Constants';\r\nimport InstantViewStore from '../../Stores/InstantViewStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InstantViewer.css';\r\n\r\nclass InstantViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.articleRef = React.createRef();\r\n        this.instantViewerRef = React.createRef();\r\n\r\n        this.state = {};\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.instantView !== state.prevInstantView) {\r\n            return {\r\n                prevInstantView: props.instantView,\r\n                hasPrev: InstantViewStore.hasPrev(),\r\n                hasScroll: false,\r\n                media: null,\r\n                caption: null,\r\n                url: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { instantView } = this.props;\r\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\r\n\r\n        if (instantView !== nextProps.instantView) {\r\n            return true;\r\n        }\r\n\r\n        if (hasScroll !== nextState.hasScroll) {\r\n            return true;\r\n        }\r\n\r\n        if (hasPrev !== nextState.hasPrev) {\r\n            return true;\r\n        }\r\n\r\n        if (media !== nextState.media) {\r\n            return true;\r\n        }\r\n\r\n        if (caption !== nextState.caption) {\r\n            return true;\r\n        }\r\n\r\n        if (url !== nextState.url) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.handleScroll();\r\n        this.scrollToBlock(this.props.block, 'smooth');\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\r\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\r\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n    }\r\n\r\n    onClientUpdateInstantViewViewerContent = update => {\r\n        const { content } = update;\r\n        if (!content) {\r\n            this.setState({ media: null, caption: null, url: null });\r\n            return;\r\n        }\r\n\r\n        const { media, caption, url, instantView } = content;\r\n\r\n        if (this.props.instantView !== instantView) return;\r\n\r\n        this.setState({ media, caption, url });\r\n    };\r\n\r\n    onClientUpdateInstantViewUrl = async update => {\r\n        const { url } = update;\r\n        const active = InstantViewStore.getCurrent();\r\n        const { instantView, url: oldUrl } = this.props;\r\n\r\n        if (active !== instantView) return;\r\n\r\n        if (instantView && url.startsWith(oldUrl)) {\r\n            const hash = new URL(url).hash;\r\n            if (url.indexOf('#') === url.length - 1) {\r\n                this.scrollTop('smooth');\r\n\r\n                return;\r\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        openInstantView(url);\r\n    };\r\n\r\n    scrollToBlock(block, behavior) {\r\n        if (!block) return false;\r\n\r\n        if (!articleRefs) return false;\r\n\r\n        const ref = articleRefs.get(block);\r\n        if (!ref) return false;\r\n\r\n        const element = ReactDOM.findDOMNode(ref);\r\n        return this.scrollToElement(element, behavior);\r\n    }\r\n\r\n    scrollToElement(element, behavior) {\r\n        if (!element) return false;\r\n\r\n        const details = [];\r\n        let finished = false;\r\n        let currentElement = element;\r\n        do {\r\n            currentElement = currentElement.parentNode;\r\n            if (currentElement) {\r\n                if (currentElement.nodeName === 'DETAILS') {\r\n                    details.push(currentElement);\r\n                } else if (currentElement.nodeName === 'ARTICLE') {\r\n                    finished = true;\r\n                }\r\n            } else {\r\n                finished = true;\r\n            }\r\n        } while (!finished);\r\n\r\n        details.forEach(x => (x.open = true));\r\n\r\n        element.scrollIntoView({\r\n            block: 'center',\r\n            behavior\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    scrollToHash(hash, behavior) {\r\n        if (!hash) return false;\r\n\r\n        const element = document.getElementById(hash.substr(1));\r\n\r\n        return this.scrollToElement(element, behavior);\r\n    }\r\n\r\n    scrollTop(behavior) {\r\n        const element = this.instantViewerRef.current;\r\n\r\n        switch (behavior) {\r\n            case 'smooth': {\r\n                scrollTop(element);\r\n                break;\r\n            }\r\n            default: {\r\n                element.scrollTo({\r\n                    top: 0,\r\n                    behavior\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { instantView, block, url } = this.props;\r\n\r\n        const hash = new URL(url).hash;\r\n        if (prevProps.instantView !== instantView) {\r\n            if (prevProps.url !== url) {\r\n                if (url.indexOf('#') === url.length - 1) {\r\n                    this.scrollTop('auto');\r\n                } else if (hash) {\r\n                    this.scrollToHash(hash, 'auto');\r\n                } else {\r\n                    this.scrollTop('auto');\r\n                }\r\n            } else {\r\n                if (hash) {\r\n                    this.scrollToHash(hash, 'auto');\r\n                } else {\r\n                    this.scrollTop('smooth');\r\n                }\r\n            }\r\n\r\n            this.handleScroll();\r\n        }\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape': {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n\r\n                const { media } = this.state;\r\n\r\n                if (media) {\r\n                    setInstantViewViewerContent(null);\r\n                    return;\r\n                }\r\n\r\n                this.handleClose();\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose() {\r\n        setInstantViewContent(null);\r\n    }\r\n\r\n    handleBack = () => {\r\n        const { hasPrev, hasScroll } = this.state;\r\n        if (hasScroll) {\r\n            this.scrollTop('smooth');\r\n            return;\r\n        }\r\n\r\n        if (hasPrev) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdatePrevInstantView'\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const element = this.instantViewerRef.current;\r\n        this.setState({\r\n            hasScroll: element.scrollTop > 50\r\n        });\r\n\r\n        this.updateItemsInView();\r\n    };\r\n\r\n    updateItemsInView() {\r\n        if (!this.mounted) return;\r\n\r\n        const { instantView } = this.props;\r\n        if (!instantView) return;\r\n\r\n        const { page_blocks } = instantView;\r\n\r\n        const blocks = new Map();\r\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\r\n\r\n        for (let i = 0; i < items.length; i++) {\r\n            const block = page_blocks[items[i]];\r\n            blocks.set(block, block);\r\n\r\n            const innerBlocks = getInnerBlocks(block);\r\n            innerBlocks.forEach(x => blocks.set(x, x));\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateBlocksInView',\r\n            blocks\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { instantView } = this.props;\r\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\r\n        if (!instantView) return null;\r\n\r\n        return (\r\n            <IVContext.Provider value={instantView}>\r\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\r\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\r\n                        <MediaViewerButton\r\n                            className='instant-viewer-left-button'\r\n                            style={{ alignItems: 'flex-start' }}\r\n                            onClick={this.handleBack}>\r\n                            <NavigateBeforeIcon\r\n                                style={{\r\n                                    transition: 'transform 0.25s ease-out',\r\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\r\n                                }}\r\n                            />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                    <div className='instant-viewer-content-column'>\r\n                        <div>\r\n                            <Article ref={this.articleRef} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='instant-viewer-right-column'>\r\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\r\n                            <CloseIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\r\n            </IVContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewer.propTypes = {\r\n    instantView: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(InstantViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getDateHint } from '../../Utils/Message';\r\nimport UserTile from './UserTile';\r\nimport ChatTile from './ChatTile';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './MediaInfo.css';\r\n\r\nclass MediaInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { date, sender_id } = message;\r\n\r\n        const dateHint = getDateHint(date);\r\n\r\n        const tileControl = sender_id.user_id ? <UserTile userId={sender_id.user_id} /> : <ChatTile chatId={chatId} />;\r\n\r\n        return (\r\n            <div className='media-info'>\r\n                <div className='media-info-wrapper'>\r\n                    {tileControl}\r\n                    <div className='media-info-content'>\r\n                        <div className='media-info-row'>\r\n                            <MessageAuthor sender={sender_id} />\r\n                        </div>\r\n                        <div className='media-info-row meta'>\r\n                            <span>{dateHint}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaInfo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default MediaInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport Player from '../Player/Player';\r\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\r\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\r\nimport { getThumb } from '../../Utils/Media';\r\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewerContent.css';\r\n\r\nclass MediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.videoRef = React.createRef();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId, size, t } = props;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            const thumbnail = getMediaThumbnail(chatId, messageId);\r\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\r\n\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message, null, t);\r\n\r\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            const { content } = message;\r\n            const { web_page: webPage } = content;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n\r\n                speed: 1,\r\n                isPlaying: false,\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                text,\r\n                thumbnail,\r\n                minithumbnail,\r\n                webPage\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n        if (!videoInfo) return;\r\n\r\n        const { file } = this.state;\r\n        if (file.id !== videoInfo.fileId) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerContent',\r\n            content: null\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { src } = this.state;\r\n\r\n        if (prevState.src !== src) {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId, size } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const thumbnail = getMediaThumbnail(chatId, messageId);\r\n            this.setState({\r\n                thumbnail\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, size, t } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId === chat_id && messageId === message_id) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message, null, t);\r\n\r\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                text\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n\r\n        const { source } = this.state;\r\n        if (!source) return;\r\n\r\n        source.loadNextBuffer();\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            width,\r\n            height,\r\n            file,\r\n            src,\r\n            supportsStreaming,\r\n            mimeType,\r\n            text,\r\n            minithumbnail,\r\n            thumbnail,\r\n            webPage,\r\n            isPlaying\r\n        } = this.state;\r\n\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n\r\n        const isEmbed = isEmbedMessage(chatId, messageId);\r\n        const isVideo = isVideoMessage(chatId, messageId);\r\n        const isAnimation = isAnimationMessage(chatId, messageId);\r\n\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\r\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\r\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\r\n        videoWidth = w;\r\n        videoHeight = h;\r\n\r\n        let content = null;\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\r\n\r\n        if (isVideo) {\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <Player\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        fileId={file.id}\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                        }}\r\n                    >\r\n                        {source}\r\n                    </Player>\r\n                    {!isPlaying && !supportsStreaming && thumb}\r\n                </div>\r\n            );\r\n        } else if (isAnimation) {\r\n            // const message = MessageStore.get(chatId, messageId);\r\n            //\r\n            // content = (\r\n            //     <Animation\r\n            //         type='preview'\r\n            //         stretch={true}\r\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\r\n            //         animation={message.content.animation || message.content.web_page.animation}\r\n            //         onClick={this.handleContentClick}\r\n            //         showProgress={false}\r\n            //         style={{ borderRadius: 0 }}\r\n            //         />\r\n            // );\r\n\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <video\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        onClick={this.handleContentClick}\r\n                        loop\r\n                        autoPlay\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                        }}\r\n                    >\r\n                        {source}\r\n                    </video>\r\n                    {!isPlaying && thumb}\r\n                </div>\r\n            );\r\n        } else if (webPage && webPage.embed_url) {\r\n            let { embed_url: url } = webPage;\r\n\r\n            switch (webPage.site_name) {\r\n                case 'Coub': {\r\n                    break;\r\n                }\r\n                case 'SoundCloud': {\r\n                    break;\r\n                }\r\n                case 'Spotify': {\r\n                    break;\r\n                }\r\n                case 'Twitch': {\r\n                    url += `&parent=${window.location.hostname}`;\r\n                    break;\r\n                }\r\n                case 'YouTube': {\r\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\r\n                    break;\r\n                }\r\n                case 'Vimeo': {\r\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\r\n                    break;\r\n                }\r\n                case 'КиноПоиск': {\r\n                    break;\r\n                }\r\n                case 'Яндекс.Музыка': {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\r\n                </div>\r\n            );\r\n        } else {\r\n            content = (\r\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='media-viewer-content'>\r\n                    {content}\r\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\r\n                </div>\r\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    size: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewerContent);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport MediaInfo from '../Tile/MediaInfo';\r\nimport MediaViewerContent from './MediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\r\nimport {\r\n    cancelPreloadMediaViewerContent,\r\n    getMediaFile,\r\n    loadMediaViewerContent,\r\n    preloadMediaViewerContent,\r\n    saveMedia\r\n} from '../../Utils/File';\r\nimport {\r\n    canMessageBeDeleted,\r\n    filterDuplicateMessages,\r\n    isAnimationMessage,\r\n    isEmbedMessage,\r\n    isMediaContent,\r\n    isVideoMessage\r\n} from '../../Utils/Message';\r\nimport { between } from '../../Utils/Common';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewer.css';\r\nimport LStore from '../../Stores/LocalizationStore';\r\n\r\nclass MediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.history = [];\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        this.state = {\r\n            background: 'media-viewer-default',\r\n            prevChatId: chatId,\r\n            prevMessageId: messageId,\r\n            currentMessageId: messageId,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false,\r\n            deleteForAll: true\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        if (nextState.background !== background) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentMessageId !== currentMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadHistory();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                if (!fullscreenElement) {\r\n                    this.handlePrevious();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowRight': {\r\n                if (!fullscreenElement) {\r\n                    this.handleNext();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        const isVideo = isVideoMessage(chatId, currentMessageId);\r\n        if (isVideo) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id, new_content, old_content } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        if (!message) return;\r\n\r\n        loadMediaViewerContent([message]);\r\n\r\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\r\n        if (addMessage) {\r\n            if (\r\n                this.history.length >= 2 &&\r\n                (this.firstSliceLoaded ||\r\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\r\n            ) {\r\n                let inserted = false;\r\n                let history = [];\r\n                for (let i = 0; i < this.history.length; i++) {\r\n                    if (this.history[i].id > message_id) {\r\n                        history.push(this.history[i]);\r\n                    } else {\r\n                        if (!inserted) {\r\n                            inserted = true;\r\n                            history.push(message);\r\n                        }\r\n                        history.push(this.history[i]);\r\n                    }\r\n                }\r\n                this.history = history;\r\n            }\r\n\r\n            const index = this.history.findIndex(x => x.id === currentMessageId);\r\n            this.setState({\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index),\r\n                totalCount: totalCount + 1\r\n            });\r\n        }\r\n\r\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\r\n        if (removeMessage) {\r\n            let oldHistory = this.history;\r\n            this.history = this.history.filter(x => x.id !== message_id);\r\n\r\n            if (currentMessageId === message_id) {\r\n                const filterMap = new Map();\r\n                filterMap.set(message_id, message_id);\r\n\r\n                this.moveToNextMedia(oldHistory, filterMap);\r\n                this.setState({\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            } else {\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chat_id, message_ids, is_permanent } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (!is_permanent) return;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\r\n            accumulator.set(currentId, currentId);\r\n            return accumulator;\r\n        }, new Map());\r\n\r\n        const oldHistory = this.history;\r\n        let deletedCount = oldHistory.length;\r\n\r\n        this.history = this.history.filter(x => !filterMap.has(x.id));\r\n        deletedCount -= this.history.length;\r\n\r\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\r\n\r\n        if (!this.history.length) {\r\n            setMediaViewerContent(null);\r\n            return;\r\n        }\r\n\r\n        if (filterMap.has(currentMessageId)) {\r\n            this.moveToNextMedia(oldHistory, filterMap);\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        const { message } = update;\r\n        if (!message) return;\r\n        if (!isMediaContent(message.content)) return;\r\n\r\n        if (message.chat_id !== chatId) return;\r\n        if (!this.firstSliceLoaded) return;\r\n\r\n        this.history = [message].concat(this.history);\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: totalCount + 1\r\n        });\r\n    };\r\n\r\n    getFilter = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterChatPhoto'\r\n                };\r\n            }\r\n            case 'messagePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            case 'messageVideo': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            default: {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: messageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: 2 * MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = result.messages;\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index)\r\n        });\r\n\r\n        if (index === -1) {\r\n            this.history = [MessageStore.get(chatId, currentMessageId)];\r\n            preloadMediaViewerContent(0, this.history);\r\n        } else {\r\n            preloadMediaViewerContent(index, this.history);\r\n\r\n            const filter = this.getFilter(chatId, messageId);\r\n            if (!filter) return;\r\n\r\n            const maxCount = 1500;\r\n            let count = 0;\r\n            while (!this.firstSliceLoaded && count < maxCount) {\r\n                const result = await TdLibController.send({\r\n                    '@type': 'searchChatMessages',\r\n                    chat_id: chatId,\r\n                    query: '',\r\n                    sender_user_id: 0,\r\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\r\n                    offset: -99,\r\n                    limit: 99 + 1,\r\n                    filter: filter\r\n                });\r\n                count += result.messages.length;\r\n\r\n                filterDuplicateMessages(result, this.history);\r\n                MessageStore.setItems(result.messages);\r\n\r\n                this.history = result.messages.concat(this.history);\r\n                this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n                const { currentMessageId } = this.state;\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    firstSliceLoaded: this.firstSliceLoaded,\r\n                    totalCount: result.total_count\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        setMediaViewerContent(null);\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        if (index !== -1) {\r\n            cancelPreloadMediaViewerContent(index, this.history);\r\n        }\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        let media = null;\r\n        switch (content['@type']) {\r\n            case 'messageAnimation': {\r\n                const { animation } = content;\r\n\r\n                media = animation;\r\n                break;\r\n            }\r\n            case 'messageChatChangePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { document } = content;\r\n\r\n                media = document;\r\n                break;\r\n            }\r\n            case 'messagePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageText': {\r\n                const { web_page } = content;\r\n                if (!web_page) return;\r\n\r\n                const { animation, document, photo, video } = web_page;\r\n\r\n                if (animation) {\r\n                    media = animation;\r\n                    break;\r\n                }\r\n\r\n                if (document) {\r\n                    media = document;\r\n                    break;\r\n                }\r\n\r\n                if (photo) {\r\n                    media = photo;\r\n                    break;\r\n                }\r\n\r\n                if (video) {\r\n                    media = video;\r\n                    break;\r\n                }\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video } = content;\r\n\r\n                media = video;\r\n                break;\r\n            }\r\n        }\r\n\r\n        saveMedia(media, message);\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        forwardMessages(chatId, [currentMessageId]);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleDialogOpen();\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index + 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: 0,\r\n                limit: MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = this.history.concat(result.messages);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index - 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: MEDIA_SLICE_LIMIT + 1,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n        this.history = result.messages.concat(this.history);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            firstSliceLoaded: this.firstSliceLoaded,\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    loadMedia = (index, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentMessageId: this.history[index].id,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        preloadMediaViewerContent(index, this.history);\r\n        return true;\r\n    };\r\n\r\n    moveToNextMedia = (oldHistory, filterMap) => {\r\n        const { currentMessageId } = this.state;\r\n\r\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\r\n        let nextId = 0;\r\n        for (let i = index - 1; i >= 0; i--) {\r\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                nextId = oldHistory[i].id;\r\n                break;\r\n            }\r\n        }\r\n        if (!nextId) {\r\n            for (let i = index + 1; i < oldHistory.length; i++) {\r\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                    nextId = oldHistory[i].id;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!nextId) return;\r\n\r\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            } else if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    handleDialogOpen = () => {\r\n        this.setState({ deleteConfirmationOpened: true });\r\n    };\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, deleteForAll } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\r\n        if (!canBeDeleted) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: [currentMessageId],\r\n            revoke: can_be_deleted_for_all_users && deleteForAll\r\n        });\r\n    };\r\n\r\n    handleChangeDeleteForAll = event => {\r\n        this.setState({ deleteForAll: event.target.checked });\r\n    };\r\n\r\n    handleInvertColors = () => {\r\n        const { background } = this.state;\r\n\r\n        let nextBackground = 'media-viewer-default';\r\n        switch (background) {\r\n            case 'media-viewer-default': {\r\n                nextBackground = 'media-viewer-dark';\r\n                break;\r\n            }\r\n            case 'media-viewer-dark': {\r\n                nextBackground = 'media-viewer-light';\r\n                break;\r\n            }\r\n            case 'media-viewer-light': {\r\n                nextBackground = 'media-viewer-default';\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            background: nextBackground\r\n        });\r\n    };\r\n\r\n    canBeForwarded = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return false;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!content) return false;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return true;\r\n            }\r\n            default: {\r\n                return can_be_forwarded;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleWrapperMouseDown = event => {\r\n        this.mouseDownTarget = event.currentTarget;\r\n    }\r\n\r\n    handleWrapperClick = event => {\r\n        const { mouseDownTarget } = this;\r\n        this.mouseDownTarget = null;\r\n\r\n        if (event.currentTarget !== mouseDownTarget) return;\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            deleteForAll,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount && firstSliceLoaded) {\r\n            index = this.history.findIndex(x => x.id === currentMessageId);\r\n        }\r\n        const maxCount = Math.max(this.history.length, totalCount);\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        const { can_be_deleted_for_all_users } = message;\r\n\r\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\r\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\r\n\r\n        let deleteConfirmationContent = '';\r\n        if (isVideoMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\r\n        } else {\r\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\r\n        }\r\n        const deleteConfirmation = deleteConfirmationOpened ? (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={deleteConfirmationOpened}\r\n                onClose={this.handleDialogClose}\r\n                aria-labelledby='form-dialog-title'>\r\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\r\n                    {can_be_deleted_for_all_users && (\r\n                        <FormControlLabel\r\n                            label={t('DeleteForAll')}\r\n                            control={\r\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\r\n                            }\r\n                            checked={deleteForAll}\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleDialogClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        ) : null;\r\n\r\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\r\n\r\n        const fileId = file ? file.id : 0;\r\n        let title = t('AttachPhoto');\r\n        if (isEmbedMessage(chatId, currentMessageId)) {\r\n            title = '';\r\n        } else if (isVideoMessage(chatId, currentMessageId)) {\r\n            title = t('AttachVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            title = t('AttachGif');\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', background)}>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\r\n                    <MediaViewerFooterButton\r\n                        title={t('Forward')}\r\n                        disabled={!canBeForwarded}\r\n                        onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\r\n                        <DeleteIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <MediaViewerContent\r\n                            chatId={chatId}\r\n                            messageId={currentMessageId}\r\n                            size={PHOTO_BIG_SIZE}\r\n                            onClick={this.handlePrevious}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                <div className='media-viewer-footer'/>\r\n                {deleteConfirmation}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport PauseIcon from '../../Assets/Icons/Pause';\r\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\r\nimport FullScreen from '../../Assets/Icons/FullScreen';\r\nimport Hint from './Hint';\r\nimport Player from './Player';\r\nimport Progress from './Progress';\r\nimport { clamp, getDurationString } from '../../Utils/Common';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport {\r\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\r\n    PLAYER_PLAYBACKRATE_MIN,\r\n    PLAYER_PLAYBACKRATE_STEP,\r\n    PLAYER_SEEK_STEP_BIG,\r\n    PLAYER_SEEK_STEP_SMALL,\r\n    PLAYER_VOLUME_MAX,\r\n    PLAYER_VOLUME_MIN,\r\n    PLAYER_VOLUME_STEP\r\n} from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PipPlayer.css';\r\n\r\nclass PipPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.state = { };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\r\n        if (state.prevVideo !== video) {\r\n            return {\r\n                prevVideo: video,\r\n                duration,\r\n                currentTime,\r\n                volume,\r\n                play,\r\n                buffered,\r\n                waiting,\r\n                dragging: false,\r\n                hidden: false,\r\n                fullscreen: false\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { video } = this.props;\r\n        this.connectPlayer(video);\r\n        window.addEventListener('resize', this.onWindowResize);\r\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\r\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { video } = this.props;\r\n        this.disconnectPlayer(video);\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\r\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\r\n\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    onClientUpdateMediaShortcut = update => {\r\n        const { event } = update;\r\n        if (!event) return;\r\n\r\n        this.onKeyDown(event);\r\n    };\r\n\r\n    onKeyDown = event => {\r\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\r\n\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        let handled = false;\r\n        switch (code) {\r\n            case 'Escape': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleClose();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowLeft': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyJ': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowRight': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyL': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowUp': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Space':\r\n            case 'KeyK': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleClick();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyM': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleMute();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyF': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleFullScreen();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyI': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    // this.handlePictureInPicture();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Digit0':\r\n            case 'Digit1':\r\n            case 'Digit2':\r\n            case 'Digit3':\r\n            case 'Digit4':\r\n            case 'Digit5':\r\n            case 'Digit6':\r\n            case 'Digit7':\r\n            case 'Digit8':\r\n            case 'Digit9': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\r\n                    this.handleSeekProgress(progress);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Home': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(0);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'End': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.duration - 1.0);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Comma': {\r\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\r\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Period': {\r\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\r\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (handled) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    showMediaHint(text) {\r\n        const { fileId } = this.props;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaHint',\r\n            fileId,\r\n            text\r\n        });\r\n    }\r\n\r\n    handleVolume = volume => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\r\n\r\n        video.volume = volume;\r\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\r\n    };\r\n\r\n    handlePlaybackRate = rate => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\r\n\r\n        video.playbackRate = rate;\r\n        this.showMediaHint(`${rate}x`);\r\n    };\r\n\r\n    handleSeekProgress = progress => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(progress * video.duration);\r\n    };\r\n\r\n    handleSeek = currentTime => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        currentTime = clamp(currentTime, 0, video.duration || 0);\r\n\r\n        video.currentTime = currentTime;\r\n        this.setState({ currentTime });\r\n    };\r\n\r\n    onFullScreenChange = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\r\n        const fullscreen = fullscreenElement === fullscreenPlayer;\r\n\r\n        this.setState({\r\n            fullscreen\r\n        });\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) return;\r\n\r\n        const player = document.getElementById('pip-player');\r\n\r\n        const oldLeft = parseInt(player.style.left, 10);\r\n        const oldTop = parseInt(player.style.top, 10);\r\n\r\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\r\n\r\n        if (oldLeft === left && oldTop === top) return;\r\n\r\n        // console.log('[pip] windowResize', left, top);\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { video } = this.props;\r\n\r\n        if (prevProps.video !== video) {\r\n            this.disconnectPlayer(prevProps.video)\r\n            this.connectPlayer(video);\r\n        }\r\n    }\r\n\r\n    connectPlayer(video) {\r\n        if (!video) return;\r\n\r\n        const pipPlayer = document.getElementById('pip-player');\r\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\r\n        pipPlayer.style.left = left + 'px';\r\n        pipPlayer.style.top = top + 'px';\r\n\r\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\r\n        pipPlayerWrapper.focus();\r\n\r\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\r\n\r\n        const container = document.getElementById('pip-player-container');\r\n        if (!container) return;\r\n\r\n        video.onloadedmetadata = this.handleLoadedMetadata;\r\n        video.onloadeddata = this.handleLoadedData;\r\n        video.oncanplay = this.handleCanPlay;\r\n        video.onplay = this.handlePlay;\r\n        video.onpause = this.handlePause;\r\n        video.onended = this.handleEnded;\r\n        video.ontimeupdate = this.handleTimeUpdate;\r\n        video.onvolumechange = this.handleVolumeChange;\r\n        video.onprogress = this.handleProgress;\r\n        video.onwaiting = this.handleWaiting;\r\n\r\n        container.innerHTML = '';\r\n        container.appendChild(video);\r\n    }\r\n\r\n    disconnectPlayer(video) {\r\n        if (!video) return;\r\n\r\n        video.onloadedmetadata = null;\r\n        video.onloadeddata = null;\r\n        video.oncanplay = null;\r\n        video.onplay = null;\r\n        video.onpause = null;\r\n        video.onended = null;\r\n        video.ontimeupdate = null;\r\n        video.onvolumechange = null;\r\n        video.onprogress = null;\r\n        video.onwaiting = null;\r\n    }\r\n\r\n    handleLoadedData = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n    };\r\n\r\n    handleLoadedMetadata = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { currentTime } = this.state;\r\n        const { duration, volume, buffered } = video;\r\n        // const currentTime = this.getCurrentTime();\r\n\r\n        this.setState({\r\n            duration,\r\n            // currentTime,\r\n            volume,\r\n            waiting: true,\r\n            buffered\r\n        }, () => {\r\n            if (!currentTime) return;\r\n\r\n            video.currentTime = currentTime;\r\n        });\r\n    };\r\n\r\n    handleCanPlay = event => {\r\n        const { target: video } = event;\r\n\r\n        this.setState({\r\n            waiting: false\r\n        }, () => {\r\n            if (!video) return;\r\n\r\n            const { play } = this.state;\r\n            if (play) {\r\n                video.play();\r\n            } else {\r\n                video.pause();\r\n            }\r\n        });\r\n    };\r\n\r\n    handlePlay = event => {\r\n        const { onPlay } = this.props;\r\n\r\n        this.setState({\r\n            play: true,\r\n            hidden: true\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\r\n        onPlay && onPlay(event);\r\n    };\r\n\r\n    handlePause = event => {\r\n        const { onPause } = this.props;\r\n\r\n        this.setState({\r\n            play: false,\r\n            hidden: false\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\r\n        onPause && onPause(event);\r\n    };\r\n\r\n    handleEnded = event => {\r\n        const { onEnded } = this.props;\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\r\n        onEnded && onEnded(event);\r\n\r\n        const { video } = this.props;\r\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\r\n    };\r\n\r\n    handleTimeUpdate = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { fileId } = this.props;\r\n        const { currentTime, duration, volume, buffered } = video;\r\n\r\n        this.setState({\r\n            duration,\r\n            currentTime,\r\n            volume,\r\n            buffered\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\r\n            fileId,\r\n            currentTime,\r\n            duration,\r\n            volume,\r\n            buffered\r\n        });\r\n\r\n        this.setCurrentTime({ currentTime, duration });\r\n    };\r\n\r\n    handleVolumeChange = event => {\r\n        const { onVolumeChange } = this.props;\r\n\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { volume } = video;\r\n\r\n        this.setState({\r\n            volume\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\r\n        onVolumeChange && onVolumeChange(event);\r\n    };\r\n\r\n    handleProgress = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { fileId } = this.props;\r\n\r\n        const { buffered } = video;\r\n\r\n        this.setState({\r\n            buffered\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerProgress',\r\n            fileId,\r\n            buffered\r\n        });\r\n    };\r\n\r\n    handleWaiting = () => {\r\n        this.setState({ waiting: true });\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    startStopPlayer = () => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        const { waiting } = this.state;\r\n        if (waiting) {\r\n            this.setState({\r\n                play: !this.state.play,\r\n                hidden: false\r\n            });\r\n        } else {\r\n            if (video.paused) {\r\n                video.play()\r\n            } else {\r\n                video.pause();\r\n            }\r\n        }\r\n    };\r\n\r\n    handlePlayerMouseDown = event => {\r\n        const pip = document.getElementById('pip-player-wrapper');\r\n        if (pip) pip.focus();\r\n\r\n        this.mouseDownRoot = true;\r\n        event.preventDefault();\r\n\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        this.offsetX = event.nativeEvent.offsetX;\r\n        this.offsetY = event.nativeEvent.offsetY;\r\n\r\n        document.onmousemove = this.handleMouseMove;\r\n        document.onmouseup = this.handleMouseUp;\r\n\r\n        this.setState({\r\n            windowDragging: true\r\n        });\r\n    };\r\n\r\n    handleMouseUp = event => {\r\n        event.preventDefault();\r\n\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n\r\n        this.setState({\r\n            windowDragging: false\r\n        });\r\n    };\r\n\r\n    normalizePosition(left, top, checkGlue = true) {\r\n        const player = document.getElementById('pip-player');\r\n        const playerWidth = player ? player.clientWidth : 300;\r\n        const playerHeight = player ? player.clientHeight : 300;\r\n\r\n        const { clientWidth: documentWidth } = document.documentElement;\r\n        const { clientHeight: documentHeight } = document.documentElement;\r\n\r\n        if (checkGlue && this.glueLeft) {\r\n            left = 0;\r\n        } else if (checkGlue && this.glueRight) {\r\n            left = documentWidth - playerWidth;\r\n        } else {\r\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\r\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\r\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\r\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\r\n            left = clamp(left, 0, documentWidth - playerWidth);\r\n        }\r\n\r\n        if (checkGlue && this.glueTop) {\r\n            top = 0;\r\n        } else if (checkGlue && this.glueBottom) {\r\n            top = documentHeight - playerHeight;\r\n        } else {\r\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\r\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\r\n            top = clamp(top, 0, documentHeight - playerHeight);\r\n        }\r\n\r\n        this.glueLeft = left === 0;\r\n        this.glueRight = left === documentWidth - playerWidth;\r\n        this.glueTop = top === 0;\r\n        this.glueBottom = top === documentHeight - playerHeight;\r\n\r\n        PlayerStore.pipParams = { left, top };\r\n\r\n        return { left, top };\r\n    }\r\n\r\n    handleMouseMove = event => {\r\n        event.preventDefault();\r\n\r\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\r\n\r\n        const player = document.getElementById('pip-player');\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.setState({\r\n            dragging: true,\r\n            draggingTime: video.currentTime\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.setState({\r\n            draggingTime: value * video.duration\r\n        });\r\n    };\r\n\r\n    handleChangeCommitted = () => {\r\n        const { dragging, draggingTime } = this.state;\r\n        if (!dragging) return;\r\n\r\n        this.setState({\r\n            dragging: false,\r\n            currentTime: draggingTime,\r\n            draggingTime: 0\r\n        }, () => {\r\n            const { video } = this.props;\r\n            if (!video) return;\r\n\r\n            if (Number.isFinite(draggingTime)) {\r\n                video.currentTime = draggingTime;\r\n            }\r\n        });\r\n    };\r\n\r\n    handlePanelEnter = () => {\r\n        this.panelEnter = true;\r\n    };\r\n\r\n    handlePanelLeave = () => {\r\n        this.panelEnter = false;\r\n    };\r\n\r\n    handleMouseOver = event => {\r\n        this.mouseDownRoot = false;\r\n        const { hidden } = this.state;\r\n\r\n        if (hidden) {\r\n            this.setState({\r\n                hidden: false\r\n            });\r\n        }\r\n\r\n        clearTimeout(this.mouseOverTimeout);\r\n        this.mouseOverTimeout = setTimeout(() => {\r\n            if (this.panelEnter) return;\r\n            if (!this.state.play) return;\r\n            if (!this.state.duration) return;\r\n\r\n            this.setState({\r\n                hidden: true\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePictureInPicture',\r\n            videoInfo: null\r\n        });\r\n    };\r\n\r\n    handleVolumeSliderChange = (event, volume) => {\r\n        if (volume === this.state.volume) return;\r\n\r\n        this.setState({\r\n            volume\r\n        }, () => {\r\n            const { video } = this.props;\r\n            if (!video) return;\r\n\r\n            video.volume = volume;\r\n        });\r\n    };\r\n\r\n    handleVolumeSliderChangeCommitted = event => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        document.activeElement.blur();\r\n    };\r\n\r\n    handleMute = () => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        if (video.volume === 0) {\r\n            video.volume = this.prevVolume || 0.5;\r\n        } else {\r\n            this.prevVolume = video.volume;\r\n            video.volume = 0;\r\n        }\r\n    }\r\n\r\n    handleFullScreen = event => {\r\n        event && event.stopPropagation();\r\n\r\n        const root = document.getElementById('pip-player-wrapper');\r\n        if (!root) return;\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) {\r\n            this.exitFullscreen();\r\n            return;\r\n        }\r\n\r\n        this.requestFullscreen(root);\r\n    };\r\n\r\n    requestFullscreen(element) {\r\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\r\n\r\n        method && method.call(element);\r\n    }\r\n\r\n    exitFullscreen() {\r\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\r\n\r\n        method && method.call(document);\r\n    }\r\n\r\n    getCurrentTime = () => {\r\n        const { fileId } = this.props;\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        return PlayerStore.getCurrentTime(unique_id);\r\n    };\r\n\r\n    setCurrentTime = currentTime => {\r\n        const { fileId } = this.props;\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        if (!currentTime) {\r\n            PlayerStore.clearCurrentTime(unique_id);\r\n        } else {\r\n            PlayerStore.setCurrentTime(unique_id, currentTime);\r\n        }\r\n    };\r\n\r\n    handlePanelDoubleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClickRoot = event => {\r\n        event.stopPropagation();\r\n\r\n        const { mouseDownRoot } = this;\r\n        if (!mouseDownRoot) return;\r\n\r\n        this.startStopPlayer();\r\n    }\r\n\r\n    handleDoubleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { mouseDownRoot } = this;\r\n        if (!mouseDownRoot) return;\r\n\r\n        this.handleFullScreen(event);\r\n    };\r\n\r\n    handleFocus = () => {\r\n        KeyboardManager.add(this.keyboardHandler);\r\n\r\n    };\r\n\r\n    handleBlur = () => {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    };\r\n\r\n    render() {\r\n        const { fileId } = this.props;\r\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\r\n\r\n        const time = dragging ? draggingTime : currentTime;\r\n        const value = duration > 0 ? time / duration : 0;\r\n        const bufferedTime = Player.getBufferedTime(time, buffered);\r\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\r\n\r\n        const timeString = getDurationString(Math.floor(time) || 0);\r\n        const durationString = getDurationString(Math.floor(duration) || 0);\r\n\r\n        const pictureInPictureEnabled = true;\r\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\r\n\r\n        return (\r\n            <div\r\n                id='pip-player'\r\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\r\n                onMouseDown={this.handlePlayerMouseDown}\r\n                onMouseMove={this.handleMouseOver}\r\n                onClick={this.handleClickRoot}\r\n                onDoubleClick={this.handleDoubleClick}>\r\n                <div\r\n                    id='pip-player-wrapper'\r\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\r\n                    onFocus={this.handleFocus}\r\n                    onBlur={this.handleBlur}\r\n                    tabIndex={0}>\r\n                    <div id='pip-player-container'/>\r\n                    <Hint fileId={fileId}/>\r\n\r\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\r\n                        <CloseIcon/>\r\n                    </button>\r\n                    <div\r\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\r\n                        onClick={e => e.stopPropagation()}\r\n                        onMouseDown={e => e.stopPropagation()}\r\n                        onDoubleClick={this.handlePanelDoubleClick}\r\n                        onMouseEnter={this.handlePanelEnter}\r\n                        onMouseLeave={this.handlePanelLeave}>\r\n                        <div className='player-slider'>\r\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\r\n                            <Slider\r\n                                value={value}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.001}\r\n                                classes={{\r\n                                    root: 'player-slider-root',\r\n                                    rail: 'player-slider-rail',\r\n                                    track: 'player-slider-track',\r\n                                    thumb: 'player-slider-thumb',\r\n                                    active: 'player-slider-active'\r\n                                }}\r\n                                onChange={this.handleChange}\r\n                                onChangeCommitted={this.handleChangeCommitted}\r\n                                onMouseDown={this.handleMouseDown}\r\n                            />\r\n                        </div>\r\n                        <div className='player-controls'>\r\n                            <button className='player-button' onClick={this.handleClick}>\r\n                                {play ? <PauseIcon/> : <PlayIcon/>}\r\n                            </button>\r\n                            <div className='player-time'>\r\n                                {`${timeString} / ${durationString}`}\r\n                            </div>\r\n                            <div className='player-volume'>\r\n                                <Slider\r\n                                    value={volume}\r\n                                    min={0}\r\n                                    max={1}\r\n                                    step={0.001}\r\n                                    classes={{\r\n                                        root: 'player-volume-root',\r\n                                        rail: 'player-volume-rail',\r\n                                        track: 'player-volume-track',\r\n                                        thumb: 'player-volume-thumb',\r\n                                        active: 'player-volume-active'\r\n                                    }}\r\n                                    onChange={this.handleVolumeSliderChange}\r\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\r\n                                />\r\n                            </div>\r\n                            <button className='player-button' onClick={this.handleMute}>\r\n                                {Player.getVolumeIcon(volume)}\r\n                            </button>\r\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\r\n                                <FullScreen/>\r\n                            </button>\r\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\r\n                            {/*    <PictureInPictureIcon/>*/}\r\n                            {/*</button>*/}\r\n                        </div>\r\n                    </div>\r\n                    <Progress waiting={waiting}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPipPlayer.propTypes = {\r\n\r\n};\r\n\r\nexport default PipPlayer;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FileProgress from './FileProgress';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, photo } = this.props;\r\n\r\n        let { big: file } = photo;\r\n        file = FileStore.get(file.id) || file;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevPhoto: photo,\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            file: file\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, photo } = props;\r\n\r\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevPhoto: photo,\r\n                width: PROFILE_PHOTO_BIG_SIZE,\r\n                height: PROFILE_PHOTO_BIG_SIZE,\r\n                file: photo.big\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    onClientUpdateChatBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n\r\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateUserBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n\r\n        if (userId === update.userId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(event);\r\n    };\r\n\r\n    handlePhotoClick = event => {\r\n        if (event) event.stopPropagation();\r\n\r\n        const { onPrevious } = this.props;\r\n\r\n        onPrevious && onPrevious(event);\r\n    };\r\n\r\n    render() {\r\n        const { file } = this.state;\r\n        if (!file) return null;\r\n\r\n        const blob = FileStore.getBlob(file.id) || file.blob;\r\n        const src = FileStore.getBlobUrl(blob);\r\n\r\n        return (\r\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\r\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\r\n                <FileProgress file={file} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object.isRequired,\r\n\r\n    onClose: PropTypes.func,\r\n    onPrevious: PropTypes.func\r\n};\r\n\r\nexport default ProfileMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatTile from './ChatTile';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport './MediaInfo.css';\r\n\r\nclass ProfileMediaInfo extends React.Component {\r\n    render() {\r\n        const { chatId, date, style } = this.props;\r\n\r\n        return (\r\n            <div className='media-info' style={style}>\r\n                <div className='media-info-wrapper'>\r\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\r\n                    <div className='media-info-content'>\r\n                        <div className='media-info-row'>\r\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\r\n                        </div>\r\n                        {date && (\r\n                            <div className='media-info-row meta'>\r\n                                <span>{date}</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaInfo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    date: PropTypes.string\r\n};\r\n\r\nexport default ProfileMediaInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\r\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\r\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\r\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\r\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\r\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.history = [];\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n\r\n        const { chatId, fileId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevFileId: fileId,\r\n            currentIndex: 0,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            currentFileId,\r\n            hasPreviousMedia,\r\n            hasNextMedia,\r\n            firstSliceLoaded,\r\n            totalCount,\r\n            deleteConfirmationOpened\r\n        } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentFileId !== currentFileId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n        const photo = getPhotoFromChat(chatId);\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n\r\n        this.loadHistory(photo);\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape': {\r\n                this.handleClose();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                this.handleNext();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowRight': {\r\n                this.handlePrevious();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        if (!isPrivateChat(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserProfilePhotos',\r\n            user_id: getChatUserId(chatId),\r\n            offset: 0,\r\n            limit: 100\r\n        });\r\n\r\n        this.history = result.photos;\r\n        this.firstSliceLoaded = result.photos.length === 0;\r\n\r\n        const index = 0;\r\n\r\n        this.setState({\r\n            currentIndex: index,\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n    };\r\n\r\n    handleClose = () => {\r\n        setProfileMediaViewerContent(null);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo =\r\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        if (!photo.big) return;\r\n\r\n        const file = FileStore.get(photo.big.id) || photo.big;\r\n        if (!file) return;\r\n\r\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        let inputFile = null;\r\n        let inputMessagePhoto = null;\r\n        const inHistory = this.history && index >= 0 && index < this.history.length;\r\n        if (inHistory) {\r\n            const photo = getProfilePhoto(this.history[index]);\r\n            if (!photo) return;\r\n\r\n            let { big: file } = photo;\r\n            if (!file) return;\r\n\r\n            inputFile = {\r\n                '@type': 'inputFileId',\r\n                id: file.id\r\n            };\r\n        } else {\r\n            const chatPhoto = getPhotoFromChat(chatId);\r\n            if (!chatPhoto) return;\r\n\r\n            const { big: file } = chatPhoto;\r\n            if (!file) return;\r\n\r\n            const blob = FileStore.getBlob(file.id);\r\n            if (!blob) return;\r\n\r\n            inputFile = {\r\n                '@type': 'inputFileBlob',\r\n                data: blob,\r\n                name: ''\r\n            };\r\n        }\r\n\r\n        if (!inputFile) return;\r\n\r\n        const inputMessageContent = {\r\n            '@type': 'inputMessagePhoto',\r\n            photo: inputFile,\r\n            thumbnail: null,\r\n            added_sticker_file_ids: [],\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            caption: {\r\n                '@type': 'formattedText',\r\n                text: '',\r\n                entities: null\r\n            },\r\n            ttl: 0\r\n        };\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    handleDelete = async () => {\r\n        const { chatId } = this.props;\r\n        const {\r\n            currentIndex,\r\n            totalCount,\r\n            hasNextMedia,\r\n            hasPreviousMedia\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n\r\n        const { id } = photo;\r\n        if (!id) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'deleteProfilePhoto',\r\n            profile_photo_id: id\r\n        });\r\n\r\n        this.history.splice(index, 1);\r\n        if (!this.history.length) {\r\n            this.handleClose();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            totalCount: totalCount - 1\r\n        });\r\n\r\n        if (hasNextMedia) {\r\n            const nextIndex = currentIndex - 1;\r\n\r\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\r\n                if (nextIndex === 0) {\r\n                    this.loadNext();\r\n                }\r\n            });\r\n        }\r\n\r\n        if (hasPreviousMedia) {\r\n            const nextIndex = currentIndex;\r\n\r\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\r\n                if (nextIndex === this.history.length - 1) {\r\n                    this.loadPrevious();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex + 1;\r\n\r\n        return this.loadMedia(nextIndex, { }, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        return;\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex - 1;\r\n\r\n        return this.loadMedia(nextIndex, { }, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        return;\r\n    };\r\n\r\n    loadMedia = (index, obj, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentIndex: index,\r\n                ...obj,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        const { chatId } = this.props;\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n        return true;\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            currentIndex,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount,\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const inHistory = index >= 0 && index < this.history.length;\r\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\r\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\r\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\r\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\r\n        const userProfilePhoto = inHistory ? this.history[index] : null;\r\n        const { big: file } = photo;\r\n        const isMe = isMeChat(chatId);\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\r\n                <div className='media-viewer-footer'>\r\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\r\n                    <MediaViewerFooterText\r\n                        title={t('AttachPhoto')}\r\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\r\n                    />\r\n                    <div style={{ width: 64 }}/>\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerDownloadButton>\r\n                    {isMe && (\r\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\r\n                            <DeleteIcon />\r\n                        </MediaViewerFooterButton>\r\n                    )}\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(ProfileMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../Utils/HOC';\r\nimport withLanguage from '../Language';\r\nimport withSnackbarNotifications from '../Notifications';\r\nimport Actions from './Actions';\r\nimport Call from './Calls/Call';\r\nimport ChatInfo from './ColumnRight/ChatInfo';\r\nimport Dialogs from './ColumnLeft/Dialogs';\r\nimport DialogDetails from './ColumnMiddle/DialogDetails';\r\nimport ForwardDialog from './Popup/ForwardDialog';\r\nimport GroupCall from './Calls/GroupCall';\r\nimport InstantViewer from './InstantView/InstantViewer';\r\nimport MediaViewer from './Viewer/MediaViewer';\r\nimport PipPlayer from './Player/PipPlayer';\r\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\r\nimport { highlightMessage } from '../Actions/Client';\r\nimport AppStore from '../Stores/ApplicationStore';\r\nimport CallStore from '../Stores/CallStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport InstantViewStore from '../Stores/InstantViewStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport PlayerStore from '../Stores/PlayerStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport '../TelegramApp.css';\r\n\r\nclass MainPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogDetailsRef = React.createRef();\r\n\r\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\r\n\r\n        this.state = {\r\n            isChatDetailsVisible,\r\n            mediaViewerContent,\r\n            profileMediaViewerContent,\r\n            isSmallWidth,\r\n            forwardInfo: null,\r\n            instantViewContent: null,\r\n            videoInfo: null,\r\n            groupCallId: 0,\r\n            callId: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\r\n        CallStore.on('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\r\n        CallStore.on('clientUpdateCallPanel', this.onClientUpdateCallPanel);\r\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\r\n        CallStore.off('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\r\n        CallStore.off('clientUpdateCallPanel', this.onClientUpdateCallPanel);\r\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdateCallPanel = update => {\r\n        const { opened, callId } = update;\r\n\r\n        this.setState({\r\n            callId: opened ? callId : 0\r\n        });\r\n    };\r\n\r\n    onClientUpdateGroupCallPanel = update => {\r\n        const { opened } = update;\r\n        const { currentGroupCall } = CallStore;\r\n\r\n        this.setState({\r\n            groupCallId: currentGroupCall && opened ? currentGroupCall.groupCallId : 0\r\n        });\r\n    };\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n\r\n        this.setState({\r\n            videoInfo\r\n        });\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onClientUpdateInstantViewContent = update => {\r\n        const { content } = update;\r\n\r\n        this.setState({\r\n            instantViewContent: content\r\n        });\r\n    };\r\n\r\n    onClientUpdateOpenChat = update => {\r\n        const { chatId, messageId, popup, options } = update;\r\n\r\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\r\n    };\r\n\r\n    onClientUpdateOpenUser = update => {\r\n        const { userId, popup } = update;\r\n\r\n        this.handleSelectUser(userId, popup);\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        const { isChatDetailsVisible } = AppStore;\r\n\r\n        this.setState({ isChatDetailsVisible });\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        const { mediaViewerContent } = AppStore;\r\n\r\n        this.setState({ mediaViewerContent });\r\n    };\r\n\r\n    onClientUpdateProfileMediaViewerContent = update => {\r\n        const { profileMediaViewerContent } = AppStore;\r\n\r\n        this.setState({ profileMediaViewerContent });\r\n    };\r\n\r\n    onClientUpdateForward = update => {\r\n        const { info } = update;\r\n\r\n        this.setState({ forwardInfo: info });\r\n    };\r\n\r\n    handleSelectChat = (chatId, messageId = null, popup = false, options = null) => {\r\n        const currentChatId = AppStore.getChatId();\r\n        const currentDialogChatId = AppStore.dialogChatId;\r\n        const currentMessageId = AppStore.getMessageId();\r\n\r\n        if (popup) {\r\n            if (currentDialogChatId !== chatId) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateDialogChatId',\r\n                    chatId\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\r\n            this.dialogDetailsRef.current.scrollToMessage();\r\n            if (messageId) {\r\n                highlightMessage(chatId, messageId);\r\n            }\r\n        } else if (currentChatId === chatId && !messageId && !options) {\r\n            this.dialogDetailsRef.current.scrollToStart();\r\n        } else {\r\n            TdLibController.setChatId(chatId, messageId, options);\r\n        }\r\n    };\r\n\r\n    handleSelectUser = async (userId, popup) => {\r\n        if (!userId) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: userId,\r\n            force: true\r\n        });\r\n\r\n        this.handleSelectChat(chat.id, null, popup);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            instantViewContent,\r\n            isChatDetailsVisible,\r\n            mediaViewerContent,\r\n            profileMediaViewerContent,\r\n            forwardInfo,\r\n            videoInfo,\r\n            callId,\r\n            groupCallId,\r\n            isSmallWidth\r\n        } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className={classNames('page', {\r\n                        'page-small': isSmallWidth,\r\n                        'page-third-column': isChatDetailsVisible\r\n                    })}>\r\n                    <Dialogs />\r\n                    <DialogDetails ref={this.dialogDetailsRef} />\r\n                    {isChatDetailsVisible && <ChatInfo />}\r\n                </div>\r\n                <Actions/>\r\n                {Boolean(instantViewContent) && <InstantViewer {...instantViewContent} />}\r\n                {Boolean(mediaViewerContent) && <MediaViewer {...mediaViewerContent} />}\r\n                {Boolean(profileMediaViewerContent) && <ProfileMediaViewer {...profileMediaViewerContent} />}\r\n                {Boolean(forwardInfo) && <ForwardDialog {...forwardInfo} />}\r\n                {Boolean(videoInfo) && <PipPlayer {...videoInfo}/>}\r\n                {Boolean(groupCallId) && <GroupCall groupCallId={groupCallId}/>}\r\n                {Boolean(callId) && <Call callId={callId}/>}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMainPage.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withLanguage,\r\n    withSnackbarNotifications\r\n);\r\n\r\nexport default enhance(MainPage);\r\n"],"sourceRoot":""}